@{Layout = null;}


@model List<List<string>>
@{
    ViewBag.Title = "Table Excel";
    int count = 0;
    int index = 0;
    List<string> listheads = new List<string>();
    int idselect = 0;
   string cad="";
   int selectvalue = 0;
   var file = ViewData["Filerequest"];
   string filename= Request.Files["file"].FileName;
   filename = filename.Split('.')[0];
   int nameheadx = 0;
  
   
   
}
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>

    <h3 class="modal-header-text">@filename</h3>
</div>
<div class="modal-body" id="ExcelContent" style="padding-top: 0px;">
    <div class="row-fluid">
        <div class="span5">

            @foreach (var item in Model)
            {

                foreach (var td in item)
                {
                    if (td == "")
                    {
                        listheads.Add("Undefined"+nameheadx);
                        nameheadx++;
                    }
                    else
                    {
                        listheads.Add(td);
                    }

                }
              


                break;
               
            }
            <h2>  Campos de la Lista :</h2>
            <br />
            <div style="overflow:auto;max-height:440px; width: 390px; margin-top: -30px;">
                <!-- Campo del Usuario -->
                <div class="row-fluid">
                    <div class="span5"> <label style="font-size:16px;padding:5% 0% 0% 0%;float:right;">Nombre del elemento:</label></div>
                    <div class="span7">
                        <select id="element1" class="chosen" data-required="1" data-name="element">
                            @foreach (string opt in listheads)
                            {
                                if (index == 0)
                                {
                                    <option value="no">Elige una opcion</option>
                                    index++;
                                }
                                <option value="@selectvalue">@opt</option>
                                selectvalue++;
                            } 
                            @{index = 0; selectvalue = 0;}
                        </select>
                    </div>
               </div>
                <!-- Campo del Nombre -->
                <div class="row-fluid">
                    <div class="span5"> <label style="font-size:16px;padding:5% 0% 0% 0%;float:right;">Nombre para mostrar:</label></div>
                    <div class="span7">
                        <select id="name1" class="chosen" data-required="1" data-name="name">
                            @foreach (string opt in listheads)
                            {
                                if (index == 0)
                                {
                                    <option value="no">Elige una opcion</option>
                                    index++;
                                }
                                <option value="@selectvalue">@opt</option>
                                selectvalue++;
                            } 
                            @{index = 0; selectvalue = 0;}
                        </select>
                    </div>
               </div>
                
                <br />
                @foreach (var datacateg in (List<List<string>>)ViewData["categoriedata"])
                {

                    index = 0;
                    selectvalue = 0;
                    List<string> listrowscat = new List<string>();
                    foreach (string x in datacateg)
                    {
                        listrowscat.Add(x.ToString());

                    }
                    string[] arrayf = listrowscat.ToArray();

                    <div class="row-fluid">

                        <div class="span5"><label style="font-size:16px;padding:5% 0% 0% 0%;float:right;">@arrayf[1] :</label></div>
                        <div class="span7 no-search">
                            <select id="@idselect" data-required="@arrayf[2]" data-name="@arrayf[1]" class="chosen">
                                @foreach (string opt in listheads)
                                {
                                    if (index == 0)
                                    {
                                        <option value="no">Elige una opcion</option>
                                        index++;
                                    }
                                    <option value="@selectvalue">@opt</option>
                                    selectvalue++;
                                }
                            </select>

                        </div>
                    </div>
                    <br />
                                idselect++;
                }
            </div>
        </div>

        <div class="span7 ">
            <h2>  Datos A Importar :</h2>
            <div style="overflow:auto;max-height:480px;">
                <table id="exceldatatable" class="table table-striped table-hover ">


                    @foreach (var item in Model)
                    {
                        nameheadx = 0;
                        <thead>
                            <tr>
                                <th class="table-icon hidden-480 gray" data-head="checkall"><input type="checkbox" name="selectall" class="uniform" checked></th>
                                @foreach (var td in item)
                                {
                                    string value = td;
                                    if (td == "")
                                    {
                                        value = "Undefined"+nameheadx;
                                        nameheadx++;
                                    }
                                    <th class="hidden-480 gray" style="color:white;" data-head="@value">@value</th>
                                }
                               
                            </tr>
                        </thead>
                                count++;
                                break;

                    }

                    <tbody>
                      

                        @foreach (var item in Model)
                        {

                           
                            if (count > 1)
                            {
                                <tr>
                                    <td class="table-icon hidden-480">
                                        <input type="checkbox" name="selectdate" class="uniform" checked>
                                    </td>
                                    @foreach (var td in item)
                                    {
                                        
                                        <td class="hidden-480" data-td="@td">@td</td>

                                    }
                                </tr>

                            }
                            count++;

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@{
    
    string fileLocation2 = ViewData["Filelocation"].ToString();
   
    if (System.IO.File.Exists(fileLocation2))
    {

        System.IO.File.Delete(fileLocation2);
    }
   
}
<div class="modal-footer">
    <input value="Aceptar" class="btn blue" type="submit" id="saveImport">
    <input value="Cancelar" class="btn grey" type="button" id="delete_cancel_buttonx">
</div>


<script src="~/Content/Scripts/lz-string-1.3.3.js"></script>
    <script type="text/javascript">
        var repeat = 0;
        //jQuery(document).ready(function (jQuery) {
            var idcateg = "";
            //(new HtmlString("idcateg = '" + idcategory + "';"))
            var array = new Array();
            var validateselect = new Array();
            var arrayhead = new Array();
            var numhead = new Array();

            jQuery('#exceldatatable tr').eq(0).each(function () {
                var i = 0;
                var j = 0;
                jQuery(this).find('th').each(function () {

                    if (i > 0) {
                        arrayhead.push(jQuery(this).html());
                        numhead.push(j);
                        j++;
                    }
                    i++;
                });
            });

            jQuery("input[name=selectall]").change(function () {
                jQuery('input[type=checkbox]').each(function () {
                    if (jQuery("input[name=selectall]:checked").length == 1) {
                        this.checked = true;
                    } else {
                        this.checked = false;
                    }
                });
            });

            jQuery("#saveImport").on('click', function () {
                var jsondataobj = new Array();
                var relation = new Array();
                var fd = new FormData();
                if (jQuery('#element1').val() == "no") { _alert("error", "Elija una Opcion para el Campo: Nombre del elemento"); return false; }
                if (jQuery('#name1').val() == "no") { _alert("error", "Elija una Opcion para el Campo: Nombre para mostrar"); return false; }
                if (jQuery('#name1').val() != "no"
                    && jQuery('#element1').val() != "no") {
                    for (var i = 0; i < validateselect.length; i++) {
                        var valuex = jQuery('#' + validateselect[i] + '').val();
                        var nameselectx = jQuery('#' + validateselect[i] + '').data('name');
                        var reqselect = jQuery('#' + validateselect[i] + '').data('required');

                        if (valuex == "no" && reqselect == 1) {
                            _alert("Elija una Opcion para el Campo : " + nameselectx);
                            return false;
                        }
                    }

                    for (var i = 0; i < array.length; i++) {
                        var order = { "namecol": null, "numcol": null };
                        for (var j = 0; j < arrayhead.length; j++) {
                            if (array[i].value == numhead[j]) {
                                order.namecol = array[i].selectname;
                                order.numcol = j;
                                relation.push(order);
                            }
                        }
                    }

                    jQuery('#exceldatatable tr').each(function () {

                        var i = 0;
                        var enter = 0;
                        var profileFieldsarray = new Array();
                        var objectprofile = {};
                        var objects = { "element": null, "name": null};
                        var check = 0;
                        if (jQuery(this).find('input[name="selectdate"]').is(':checked')) {
                            check++;

                        }

                        if (check != 0) {
                            var w = 0;
                            jQuery(this).find('td').each(function () {
                                if (w > 0) {
                                    for (var z = 0; z < relation.length; z++) {
                                        if (relation[z].numcol == i) {
                                            if (relation[z].namecol == "name") {
                                                objects.name = jQuery(this).html();
                                            } else if (relation[z].namecol == "element") {
                                                objects.element = jQuery(this).html();
                                            } 
                                        }
                                    }
                                    i++;
                                    enter++;
                                }
                                w++;
                            });

                            if (enter > 0) {
                                jsondataobj.push(objects);
                            }
                        }
                    });

                    try {
                        var cantRepeat = 0;
                        for (elem in jsondataobj) {
                            if (jQuery.inArray(jsondataobj[elem].element, elementNames) != -1) { cantRepeat++; continue; }
                                
                            newTr = newTrElement(jsondataobj[elem].element, jsondataobj[elem].name);
                            jQuery("#unorderElementTable").append(newTr);
                            elementNames.push(jsondataobj[elem].element);
                        }
                        if (cantRepeat > 0) { _alert("alert", "Cantidad de datos no agregados " + cantRepeat); }
                        else { _alert("success", "Datos agregados correctamente."); }

                    } catch (Exp) {
                        _alert("error", "Ocurio un error, intentelo mas tarde.")
                    }

                    jQuery('#excelTable').modal("hide");
                } else { alert("Elija Relacion para todos los Campos."); }

            });

            jQuery("#delete_cancel_buttonx").on("click", function () {
                jQuery("#excelTable").modal("hide");
            });

            jQuery('#name1, #element1').on('change', function () {
                var objetdata = { "selectname": null, "option": null, "value": null };
                var value = jQuery(this).val();
                var nameselect = jQuery(this).data('name');
                var htmlselect = jQuery('option:selected', this).html();

                for (var i = 0; i < array.length; i++) {
                    if (array[i].selectname == nameselect) {
                        array.splice(i, 1);
                    }
                }

                objetdata.selectname = nameselect;
                objetdata.option = htmlselect;
                objetdata.value = value;

                if (value != "no") {
                    var exist = 0;
                    for (var i = 0; i < array.length; i++) {
                        if (array[i].value == value) {
                            jQuery(this).val('no');
                            _alert("error","Esta opcion ya ha sido seleccionada")
                            exist++;
                        }
                    }
                    if (exist == 0) { array.push(objetdata); }
                }
            });

            function onDeleteElementAction() {
                tr = jQuery(jQuery(this).closest("tr"));
                name = tr.find(".elementName").text();
                if (tr.hasClass("newElement")) {
                    _confirm({
                        title: "Eliminar Elemento",
                        message: "¿Estás seguro que deseas eliminar el elemento " + name + "?",
                        action: function () {
                            tr.remove();
                            elementNames.splice(elementNames.indexOf(name), 1);
                        }
                    });
                } else {
                    if (del == "d") {
                        _confirm({
                            title: "Eliminar Elemento",
                            message: "Este elemento será eliminado en tiempo real ¿Estás seguro que deseas eliminar el elemento " + name + "?",
                            action: function () {
                                jQuery.ajax({
                                    url: "/List/List/removeElement",
                                    type: "GET",
                                    data: { ListID: selectedID, elementName: name },
                                    beforeSend: _loading,
                                    success: function (data) {
                                        elementNames.splice(elementNames.indexOf(name), 1);
                                        tr.remove();
                                        _loading();
                                    },
                                    error: function () {
                                        _alert("error", "Ha ocurrido un error");
                                        _loading();
                                    }
                                });
                            }
                        });
                    }
                }
            }

            function onEditElementAction() {
                tr = jQuery(jQuery(this).closest("tr"));
                jQuery("#elementName").attr("disabled", "disabled");
                jQuery("#elementCancelButton").show();
                name = tr.find(".elementName").text();
                displayName = tr.find(".elementDisplayName").text();
                jQuery("#elementName").val(name);
                jQuery("#elementDisplayName").val(displayName);
                selectedElement = tr;
            }

            function onToOrderListAction() {
                tr = jQuery(this).closest("tr");
                tr.prependTo("#orderElementTable tbody");
                tr.find(".icon-upload").addClass("icon-download")
                    .removeClass("icon-upload")
                    .closest("a")
                    .attr("data-original-title", "Quitar orden para este elemento.")
                    .unbind("click", onToOrderListAction)
                    .on("click", onToUnorderListAction);
                tr.find(".tableOptions div.btn-group").append(
                    jQuery("<a/>").addClass("btn").attr("href", "#").append(
                        jQuery("<i/>").addClass("icon-arrow-up").on("click", elementToUpAction)
                    ).attr(
                        "data-original-title", "Subir una posición."
                    ).attr(
                        "rel", "tooltip"
                    ).attr(
                        "data-placement", "top"
                    ).tooltip()
                ).append(
                    jQuery("<a/>").addClass("btn").attr("href", "#").append(
                        jQuery("<i/>").addClass("icon-arrow-down").on("click", elementToDownAction)
                    ).attr(
                        "data-original-title", "Bajar una posición."
                    ).attr(
                        "rel", "tooltip"
                    ).attr(
                        "data-placement", "top"
                    ).tooltip()
                );

                if (!tr.hasClass('newElement')) {
                    tr.addClass("fromUnorderSaved");
                }
            }
            function onToUnorderListAction() {
                tr = jQuery(this).closest("tr");
                tr.prependTo("#unorderElementTable tbody");
                tr.removeClass("fromUnorderSaved");
                tr.find(".icon-download").addClass("icon-upload")
                    .removeClass("icon-download")
                    .closest("a")
                    .attr("data-original-title", "Establecer un orden para este elemento.")
                    .unbind("click", onToUnorderListAction)
                    .on("click", onToOrderListAction);

                tr.find(".icon-arrow-up,.icon-arrow-down").closest("a").remove();
            }

            function newTrElement(name, displayName) {
                newTr = jQuery("<tr class='newElement'/>");
                newTr.append(jQuery("<td class='elementName'/>").text(name));
                newTr.append(jQuery("<td class='elementDisplayName'/>").text(displayName));
                newTr.append(
                    jQuery("<td class='tableOptions'/>").append(
                        jQuery("<div/>").addClass("btn-group").append(
                            jQuery("<a/>").addClass("btn").attr("href", "#").append(
                                jQuery("<i/>").addClass("icon-edit")
                            ).attr(
                                "data-original-title", "Editar este elemento."
                            ).attr(
                                "rel", "tooltip"
                            ).attr(
                                "data-placement", "top"
                            ).on(
                                "click", onEditElementAction
                            ).tooltip()
                        ).append(
                            jQuery("<a/>").addClass("btn").attr("href", "#").append(
                                jQuery("<i/>").addClass("icon-trash")
                            ).attr(
                                "data-original-title", "Eliminar este elemento."
                            ).attr(
                                "rel", "tooltip"
                            ).attr(
                                "data-placement", "top"
                            ).on(
                                "click", onDeleteElementAction
                            ).tooltip()
                        ).append(
                            jQuery("<a/>").addClass("btn").attr("href", "#").append(
                                jQuery("<i/>").addClass("icon-upload")
                            ).attr(
                                "data-original-title", "Establecer un orden para este elemento."
                            ).attr(
                                "rel", "tooltip"
                            ).attr(
                                "data-placement", "top"
                            ).on(
                                "click", onToOrderListAction
                            ).tooltip()
                        )
                    )
                );
                return newTr;
            }

            @for (int i = 0; i < idselect; i++)
            {
                @(new HtmlString(" jQuery('#" + i + "').on('change', function () {  validateinput = 0; var objetdata = { 'selectname': null, 'option': null,'value':null }; var value = jQuery('#" + i + "').val();var nameselect = jQuery('#" + i + "').data('name'); var htmlselect = jQuery('#" + i + " option:selected').html();  for (var i = 0; i < array.length; i++){if (array[i].selectname == nameselect){array.splice(i, 1);}} objetdata.selectname = nameselect; objetdata.option =  htmlselect; objetdata.value = value;  if(value!='no'){ var exist =0; for(var i = 0; i < array.length; i++) { if (array[i].value == value){jQuery('#" + i + "').val('no'); alert('Esta opcion ya ha sido seleccionada'); exist++;}} if(exist == 0) { array.push(objetdata); }}});"))
                @(new HtmlString(" validateselect.push(" + i + ");"))
            }
        // });


    </script>