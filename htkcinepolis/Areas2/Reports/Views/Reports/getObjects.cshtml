@using MongoDB.Bson
@{Layout = null;}
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@model JArray
@{

    ViewBag.Title = "GenerateObjectRealReport";

    Dictionary<string, string> cols = new Dictionary<string, string>();
    Dictionary<string, int> graph = new Dictionary<string, int>();
    Dictionary<int, string> headersgraph = new Dictionary<int, string>();
    Dictionary<string, int[]> graphtime = new Dictionary<string, int[]>();
    List<string> headsg = new List<string>();
    Dictionary<string, int[]> graphend = new Dictionary<string, int[]>();
    int indexfor = 0;
   
    foreach (var x in (Dictionary<string, string>)ViewData["colsx"])
    {
        cols.Add(x.Key, x.Value);
    }
   
    foreach (var x in (Dictionary<int, string>)ViewData["thx"])
    {

        headersgraph.Add(x.Key, x.Value);
    }
   
    string[] headarray = headsg.ToArray();
    int count = 0;

    
    int numcols = 0;

    JArray datajson = new JArray();
    try
    {
        foreach (var item in Model)
        {
            try
            {
                JObject item2 = item as JObject;
                datajson.Add(item2);
            }
            catch { }
        }
    }
    catch (Exception ex)
    {

    }
   
   
   
   
}





<table id="mailtablex" class="table table-striped table-hover">

    <thead style="">
        <tr class="header">
            @foreach (var x in cols)
            {
                numcols++;
                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white;  text-align: center;font-size:12px;">@x.Value.ToUpper()</th>
            }

        </tr>
    </thead>
    <tbody>

        @foreach (var item2 in datajson)
        {
            JObject item = item2 as JObject;
            try
            {
                <tr class="mailtr" style="@item["color"]">

                    @foreach (var x in cols)
                    {

                        <td class="table-fixed-medium getmail" style="text-align:center;">
                            @try
                            {<Text>@item[x.Key].ToString()</Text>}
                            catch (Exception ex)
                            {
                                { }
                            }
                        </td>
                    }



                </tr>
                count++;
            }
            catch
            {

            }
        }

    </tbody>

</table>
@if (count == 0)
{
    <div>
        <br />
        <h4>  NO HAY OBJETOS REALES CREADOS EN ESTE RANGO DE FECHAS</h4>

    </div>

}




<script type="text/javascript">
      

    jQuery(document).ready(function ($) {
        

      
        try {
          

            var th = $('#mailtablex thead tr').clone()
            // $('#mailtablex thead').append(th)
            $('#firstFilter select').select2();
            $('#secondFilter select').select2();
            $('#thridFilter select').select2();
            jQuery("#mailtablex").dataTable({
                "sPaginationType": "full_numbers",
                "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                "iDisplayLength": 10,
                "sScrollY": "250px",
                aLengthMenu: [
                [10, 50, 100, -1],
                [10, 50, 100, "Todos"]
                ],
                "oLanguage": {
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                    "sSearch": "Filtro",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Ultimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"

                    },
                    "sEmptyTable": "Tabla Sin Datos"
                }
            }).columnFilter({
                sPlaceHolder: "head:after",
                aoColumns: [
                           @for(int i=1;i<numcols;i++)
                               {
                              @(new HtmlString(" { type: 'text' }, "))

                               }
                           { type: "text" }
                ]
            });
            $('#mailtablex input').css("width", "100%")
            setTimeout(function () {
                var table = jQuery("#mailtablex").dataTable();
                table.fnAdjustColumnSizing();
            }, 1000);
           
        } catch (e) { }
    });
</script>









