@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model JArray
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using RivkaAreas.ObjectAdmin.Models;

@{

    JObject demandact = new JObject();
    string typemov = "null";
    string idact = "null";
    string tabselect = "0";
    string folio = "";
    string iduser=Session["_id"].ToString();
    try
    {
        demandact = ViewData["demandact"] as JObject;
        JToken value1;
        if (demandact.TryGetValue("movement", out value1))
        {
            typemov = demandact["movement"].ToString();
        }
        if (demandact.TryGetValue("_id", out value1))
        {
            idact = demandact["_id"].ToString();
        }
        if (demandact.TryGetValue("folio", out value1))
        {
            folio = demandact["folio"].ToString();
        }
        if (demandact.TryGetValue("Creator", out value1))
        {
            if (demandact["Creator"].ToString() == iduser)
            {
                tabselect = "0";
            }
            else
            {
                tabselect = "1";
            }
        }
        
    }
    catch (Exception ex)
    {
        
    }


    var datos = "";
    try
    {
        datos = Session["Permissions"].ToString();
    }
    catch (Exception ex)
    {
        if (Request.Cookies["permissions"] != null)
        {
            Session["Permissions"] = Request.Cookies["permissions"].Value;

        }
        datos = Session["Permissions"].ToString();


    }
    JObject allp = JsonConvert.DeserializeObject<JObject>(datos);
    var upd = "";
    var del = "";
    var add = "";

    try
    {
        string username = Session["Username"].ToString();

    }
    catch (Exception ex)
    {
        if (Request.Cookies["_username"] != null)
        {
            Session["Username"] = Request.Cookies["_username"].Value;

        }
    }

    try
    {
        string userid = Session["_id"].ToString();

    }
    catch (Exception ex)
    {
        if (Request.Cookies["_id2"] != null)
        {
            Session["_id"] = Request.Cookies["_id2"].Value;

        }
    }



    foreach (string x in allp["demand"]["grant"])
    {
        if (x.Contains("u"))
        {
            upd = "u";
        }
        if (x.Contains("d"))
        {
            del = "d";
        }
        if (x.Contains("c"))
        {
            add = "c";
        }
    }
    var dataclient = Session["PermissionsClient"].ToString();
    JObject dataclientjo = JsonConvert.DeserializeObject<JObject>(dataclient);
    var updc = "";
    var delc = "";
    var addc = "";
    foreach (string x in dataclientjo["demand"]["grant"])
    {
        if (x.Contains("u"))
        {
            updc = "u";
        }
        if (x.Contains("d"))
        {
            delc = "d";
        }
        if (x.Contains("c"))
        {
            addc = "c";
        }
    }
}

<div class="inner_content">
    <div class="widgets_area">
        <div class="row-fluid">
            <div class="span12">
                <div class="span8">
                    <h3 class="ModuleTitle">Solicitudes</h3>
                </div>
                <div class="span4">
                    <div class="search">
                        <input type="text" data-provide="typeahead" id="globalSearch" name="globalSearch" class="typehead span8" placeholder="Búsqueda" />
                        <button type="submit" class="square-button green" id="globalSearchButton"><i class="icon-search"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row-fluid">
            <div class="span12">
                <div class="light_blue set_color">
                    <div class="well-header widgetclient titleclient">
                        <h5>Solicitudes</h5>
                        @if (allp["demand"]["grant"].Count() > 0 && dataclientjo["demand"]["grant"].Count() > 0)
                        {
                            bool clientp = false;
                            foreach (string x in dataclientjo["demand"]["grant"])
                            {
                                if (x.Contains("c"))
                                {
                                    clientp = true;
                                }
                            }
                            foreach (string x in allp["demand"]["grant"])
                            {
                                if (x.Contains("c") && clientp == true)
                                {
                                    <div class="btn-group">
                                        <button class="btn btn-mini dark_green fileinput-button" id="addDemandButton" data-original-title="Agregar Solicitud" rel="tooltip" data-placement="top">
                                            <i class="icon-plus icon-white"></i>
                                        </button>
                                    </div>
                                }
                            }
                        }
                    </div>

                    <div class="well-content no-search">
                        <div class="navbar-inner">
                            <ul class="nav nav-tabs" id="tabHeader2">
                                <li class="active" id="listaHeader"><a href="#lista" data-toggle="tab">Lista de Solicitudes</a></li>
                                <li id="autorizacionesHeader"><a href="#autorizaciones" data-toggle="tab">Autorizaciones <span id="counterauthos" class="badge badge-important">0</span></a></li>
                                <li id="recentMovementsTab"><a href="#recentMovementsSection" data-toggle="tab">Movimientos Consultados</a></li>
                            </ul>
                        </div>
                        <div class="tab-content" id="tabContent2">
                            <div class="tab-pane active lista listamargen" id="lista">
                                <div class="span12 form-row">
                                    <table class="table table-striped table-hover" cellpadding="10">
                                        <tbody>
                                            <tr></tr>
                                            <tr class="mailtr">
                                                <td class="table-fixed-medium getmail">
                                                    <label class="lanelMargen">Tipo de Movimiento: </label>
                                                    <select id="moveprofileSelect2" name="moveprofileSelect2">
                                                        @ViewData["movementList"]
                                                    </select>
                                                </td>

                                                <td class="table-fixed-medium getmail">
                                                    <label class="lanelMargen">Estatus: </label>
                                                    <select id="estatusSelect" name="estatusSelect">
                                                        <option value="null">Todos</option>
                                                        <option value="1">Dictamen Pendiente</option>
                                                        <option value="2">Espera Datos Adicionales</option>
                                                        <option value="3">En proceso</option>
                                                        <option value="4">Espera de Comprobantes</option>
                                                        <option value="5">Espera VoBo</option>
                                                        <option value="6">Aprobada</option>
                                                        <option value="7">Denegada</option>
                                                    </select>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <br />
                                    <div class="" id="demandsTable"></div>
                                </div>
                            </div>

                            <div class="tab-pane autorizaciones autorizacionmargen" id="autorizaciones">
                                <div class="span12 form-row">
                                    <table class="table table-striped table-hover" cellpadding="10">
                                        <tbody>
                                            <tr></tr>
                                            <tr class="mailtr">
                                                <td class="table-fixed-medium getmail">
                                                    <label class="lanelMargen">Tipo de Movimiento: </label>
                                                    <select id="movSelect" name="movSelect">
                                                        @ViewData["movementList"]
                                                    </select>
                                                </td>

                                                <td class="table-fixed-medium getmail">
                                                    <label class="lanelMargen">Estatus: </label>
                                                    <select id="estatusSelect2" name="estatusSelect2">
                                                        <option value="null">Todos</option>
                                                        <option value="1">Dictamen Pendiente</option>
                                                        <option value="2">Espera Datos Adicionales</option>
                                                        <option value="3">En proceso</option>
                                                        <option value="4">Espera de Comprobantes</option>
                                                        <option value="5">Espera VoBo</option>
                                                        <option value="6">Aprobada</option>
                                                        <option value="7">Denegada</option>
                                                    </select>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <br />
                                    <div id="tableAuto">
                                        <table id="authoTable" class="table table-striped table-bordered table-hover dataTable">
                                            <thead>
                                                <tr>
                                                    <th>Folio</th>
                                                    <th>Movimiento</th>
                                                    <th>Solicitante</th>
                                                    <th>Fecha última modificación</th>
                                                    <th>Fecha de Rechazo</th>
                                                    <th>Denego</th>
                                                    <th>Fecha Dictamen</th>
                                                    <th>Dictaminador</th>
                                                    <th>Autorizadores</th>
                                                    <th style="width: 145px">Status</th>
                                                    <th>Ver</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane" id="recentMovementsSection">
                                <div class="span12 form-row">
                                   
                                    <table class="table table-striped table-hover" id="demandsTable2">
                                        <thead>
                                            <tr>
                                                <th class="order_field">
                                                    
                                                </th>
                                                <th>Folio</th>
                                                <th>Movimiento</th>
                                                <th>Estatus</th>
                                                <th>Creador</th>
                                                <th>Fecha de Creación</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div id="admin_panel" class="modal modal-large hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
        <h3 class="modal-header-text">Crear Solicitud</h3>
    </div>
    <div class="modal-header">
        <div class="moveprofileSelector">
            <label class="lanelMargen">Movimiento: </label>
            <select id="moveprofileSelect" name="moveprofileSelect" data-type="">
                @ViewData["movementList"]
            </select>
            <div class="updateOptions hide">
                <button class="btn green" id="updateMovement">
                    <i class="icon-refresh"></i>
                    Actualizar
                </button>
            </div>
            <div class="updateOptions2 hide">
                <button class="btn green" id="updateMovement2">
                    <i class="icon-refresh"></i>
                    Actualizar
                </button>
            </div>
            <div class="updateOptions3 hide">
                <button class="btn green" id="updateMovement3">
                    <i class="icon-refresh"></i>
                    Actualizar
                </button>
            </div>
            <div class="authorizationOptions">
                <button class="btn green hide" id="createDictamen">
                    <i class="icon-thumbs-up-alt"></i>
                    Generar Dictamen
                </button>
                <button class="btn green hide" id="authorizeMovement">
                    <i class="icon-thumbs-up-alt"></i>
                    Autorizar
                </button>
                <button class="btn green hide" id="approveMovement">
                    <i class="icon-thumbs-up-alt"></i>
                    Dar Visto Bueno
                </button>
                <button class="btn red hide" id="denyMovement">
                    <i class="icon-thumbs-down-alt"></i>
                    Denegar
                </button>
            </div>
            <div class="pdfOptions hide">
                <button class="btn red" id="pdftButton">
                    <i class="icon-file"></i>
                    Generar PDF
                </button>
            </div>
            <div class="pull-right" id="folioSection">
                <span>Folio: </span>
                <span id="folioNumber">00004587</span>
            </div>
        </div>
    </div>
    @* Dont use FORM tag *@
    @*<form id="demandForm" method="post" enctype="multipart/form-data" autocomplete="off">*@
    <div class="modal-body">

        <div class="navbar-inner">
            <ul class="nav nav-tabs" id="tabHeader1">
                <li id="movementInfoTab"><a href="#movementInfo" data-toggle="tab">General</a></li>
                <li id="staticFormHeader"><a href="#staticFieldsSection" data-toggle="tab">Nueva Solicitud</a></li>
                <li>
                    <a href="#orderTableSection" data-toggle="tab">Solicitud Generada <span class="badge badge-info"></span></a>
                </li>
                <li class="temp_movement hide">
                    <a href="#revisionSection" data-toggle="tab">Revisión/Reparación del Activo</a>
                </li>
                <li class="temp_movement hide">
                    <a href="#assetBackSection" data-toggle="tab">Ingreso del activo</a>
                </li>
                <li class="after-dictamining hide">
                    <a href="#dictamenSection" data-toggle="tab">Dictamen de obsolescencia</a>
                </li>
                <li class="after-dictamining hide">
                    <a href="#aditionalSection" data-toggle="tab">Adicionales</a>
                </li>
                <li class="after-authorized hide">
                    <a href="#accountingSection" data-toggle="tab">Info. Contable</a>
                </li>
                <li id="receiptTab" class=" after-authorized after-receipt hide">
                    <a href="#receiptSection" data-toggle="tab">Comprobantes</a>
                </li>
                <li id="facturaTab" class="after-authorized after-receipt hide">
                    <a href="#facturaSection" data-toggle="tab">Factura</a>
                </li>
            </ul>
        </div>
        <div class="tab-content" id="tabContent1" style="overflow: hidden">
            <div class="tab-pane" id="movementInfo">
                <div class="row-fluid">
                    <div class="span6">
                        <div class="movementContainer">
                            <table>
                                <tr class="deleteInfoSection">
                                    <td>TIPO DE BAJA</td>
                                    <td>
                                        <input type="text" name="movementDeleteType" disabled />
                                    </td>
                                </tr>
                                <tr class="deleteInfoSection">
                                    <td>DESTINO</td>
                                    <td>
                                        <input type="text" name="movementDestinyOptions" disabled />
                                    </td>
                                </tr>
                                <tr class="deleteInfoSection">
                                    <td>DICTAMINADOR</td>
                                    <td>
                                        <input type="text" name="movementAdjudicating" disabled />
                                    </td>
                                </tr>
                                <tr>
                                    <td>STATUS</td>
                                    <td>
                                        <textarea rows="4" name="movementStatus" disabled></textarea>
                                    </td>
                                </tr>
                                <tr>
                                    <td>USUARIO</td>
                                    <td>
                                        <input type="text" name="movementUser" disabled />
                                    </td>
                                </tr>
                                <tr>
                                    <td>OBSERVACIONES DEL STATUS</td>
                                    <td>
                                        <textarea name="movementComments" disabled></textarea>
                                    </td>
                                </tr>
                                
                            </table>
                        </div>
                        <br />
                        <div class="movementContainer" id="extraTemporalSection">
                            <table>
                                <tr class="">
                                    <td>ID REPORTE Ó DE SOPORTE EN SISTEMAS</td>
                                    <td>
                                        <input type="text" name="report_id" id="report_id" disabled />
                                    </td>
                                </tr>
                                <tr class="">
                                    <td>FECHA SALIDA DEL CONJUNTO</td>
                                    <td>
                                        <input type="text" name="out_date" id="out_date" disabled />
                                    </td>
                                </tr>
                                <tr class="">
                                    <td>NÚMERO DE GUÍA DEL ENVÍO</td>
                                    <td>
                                        <input type="text" name="tracking_number" id="tracking_number" disabled />
                                    </td>
                                </tr>
                                <tr>
                                    <td>VERIFICA DAÑO</td>
                                </tr>
                                <tr>
                                    <td>
                                        <input type="text" name="verify_name" id="verify_name" disabled />
                                    </td>
                                    <td>
                                        <input type="text" name="verify_position" id="verify_position" disabled />
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="span6">
                        <div class="movementContainer">
                            <h5>Usuarios Autorizadores</h5>
                            <table class="table" id="authorizersTable">
                                <thead>
                                    <tr>
                                        <th>Usuario</th>
                                        <th>Autorizado</th>
                                        <th>Fecha</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            </br>
                            <h5>Usuarios para dar Visto Bueno</h5>
                            <table class="table" id="approversTable">
                                <thead>
                                    <tr>
                                        <th>Usuario</th>
                                        <th>Visto Bueno</th>
                                        <th>Fecha</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane active staticFieldsSection" id="staticFieldsSection">

                <div class="row-fluid" id="movementView">
                    <div class="span3" id="filters">
                        <div id="deleteFilter">
                            <div>Tipo de baja</div>
                            <select name="deleteType">
                                <option value="planeada">Baja planeada</option>
                                <option value="no_planeada">Baja no planeada</option>
                            </select>
                            <div>Opciones destino</div>
                            <div id="destinyOptions_A">
                                <select name="destinyOptions_A">
                                    <option value="venta">Baja por venta</option>
                                    <option value="donacion">Baja por donación</option>
                                    <option value="destruccion">Baja por destrucción</option>
                                </select>
                            </div>
                            <div id="destinyOptions_B">
                                <select name="destinyOptions_B">
                                    <option value="robo">Robo</option>
                                    <option value="siniestro">Siniestro</option>
                                </select>
                            </div>

                            <div id="destinyOptions_A2">
                                <input type="checkbox" name="facturarequired" id="facturarequired"> Requiere Factura
                            </div>
                        </div>

                        <div id="assetTypeFilter">
                            <div>Tipo de activos</div>
                            <select width="100%"></select>
                        </div>

                        <div id="categoryFilter">
                            <div>Categorias</div>
                            <select width="100%"></select>
                        </div>

                        <div id="locationFilter">
                            <div>Conjunto</div>
                            <select id="selectConjuntoOrigen"></select>
                            <br/>
                            <div>Ubicación</div>
                            <select id="selectOrigen"></select>
                        </div>
                        <div id="locationDestinyFilter">
                            <div>Conjunto Destino</div>
                            <select id="selectConjuntoDestiny"></select>
                            <br />
                            <div>Ubicación Destino</div>
                            <select id="selectDestiny"></select>
                        </div>

                        <!-- Temporal Movement Section -->

                        <div class="tempMovement hide">
                            <span>ID Reporte Máximo ó de soporte en sistemas *</span>
                            <input type="text" name="report_id" />
                            <span>Fecha salida del conjunto</span>
                            <input type="date" name="out_date" />
                        </div>
                        <div class="tempMovement hide">
                            <span>En su caso, indique número de guía de envío </span>
                            <input type="text" name="tracking_number" />
                        </div>
                        <div class="tempMovement hide">
                            <div>Verifica daño</div>
                            <div class="staticField">
                                <input type="text" name="verify_name" placeholder="Nombre" />
                                <input type="text" name="verify_position" placeholder="Puesto" />
                            </div>
                        </div>

                        <!-- END :: Temporal Movement Section -->

                        <div class="no-filters">
                            <h4>Filtros</h4>
                            <div>
                                <i class="icon-filter"></i>
                            </div>
                            <span>Seleccione un movimiento</span>
                        </div>
                    </div>
                    <div class="span6">
                        <div id="results"></div>
                        <div class="pull-right" id="addToTable">
                            <div class="btn green">Agregar a Solicitud</div>
                        </div>
                    </div>
                    <div class="span3" id="details">
                        <h4 class="title">Detalles</h4>
                        <div class="photo"></div>
                        <div class="details">
                            <table class="table">
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <div class="details-button">
                        <button class="btn" title="Detalles" rel="tooltip" data-placement="left">
                            <i class="icon icon-info"></i>
                        </button>
                    </div>
                </div>

                <table class="table hide" width="100%">
                    <tr>
                        <td class="table-fixed-medium getmail" width="100%">
                            <label id="labelfolio">Folio: </label>
                        </td>
                    </tr>
                    <tr>
                        <td id="td1" class="table-fixed-medium getmail">
                            @* Static Fields *@
                            <table width="100%">
                                <tr>
                                    <td style="vertical-align: top">
                                        <div id="divcategorias">
                                            <label class="lanelMargen">Categorías </label>
                                            <div class="divTree">
                                                <div class="well-content no-search">
                                                    <div class="portlet-body fuelux">
                                                        <ul class="tree" id="category_tree"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="divlocations2">
                                            <label class="lanelMargen">Ubicaciones </label>
                                            <div class="divTree2">
                                                <div class="well-content no-search">
                                                    <div class="portlet-body fuelux">
                                                        <ul class="tree" id="location_tree2"></ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td width="5%"></td>
                                    <td style="vertical-align: top">
                                        <div id="divlocations">
                                            <label class="lanelMargen">Ubicaciones </label>
                                            <div class="divTree3">
                                                <div class="well-content no-search">
                                                    <div class="portlet-body fuelux">
                                                        <ul class="tree" id="location_tree"></ul>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div id="divobjsreferencia">
                                            <label>Objeto de Referencia: </label>
                                            <div class="staticField">
                                                <select id="ObjectSelect2" name="ObjectSelect2"></select>
                                            </div>
                                        </div>
                                        <div id="divobjetosreales">
                                            <div class="staticField">
                                                <table class="table datatable">
                                                    <tbody>
                                                        <tr>
                                                            <td>Seleccionar todos:
                                                                <input type="checkbox" id="todos" name="todos" rel="tooltip" data-original-title="seleccionar todos" data-placement="right">
                                                            </td>
                                                            <td>
                                                                <label id='lblocation2' value='' data-locationid='null'></label>
                                                                <div class='btn blue fileinput-button' id="btnLocation"><i class='icon-plus icon-white'></i></div>

                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                            <table id="tableobjetos" class="table table-striped table-bordered table-hover datatable">
                                                <tbody></tbody>
                                            </table>

                                        </div>
                                    </td>
                                    <td></td>
                                    <td>
                                        <div id="divcantidad">
                                            <label>Cantidad: </label>
                                            <div class="staticField">
                                                <input type="text" id="total" name="total" placeholder="Cantidad" data-original-title="Cantidad de Objetos" rel="tooltip" data-placement="right" />
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="tab-pane" id="orderTableSection">
                <div class="row-fluid">
                    <div class="span8">
                        <table class="table table-striped table-hover" id="orderTable">
                            <thead>
                                <tr>
                                    <th class="check_field">
                                        <div id="check_all_text"></div>
                                        <input type="checkbox" id="check_all" /></th>
                                    <th>Foto</th>
                                    <th>Descripción</th>
                                    <th class="marca">Marca</th>
                                    <th class="modelo">Modelo</th>
                                    <th class="epc_field">EPC</th>
                                    <th class="price_field">Precio de Compra</th>
                                    <th class="serie_field">No Serie</th>
                                    <th>Ubicación</th>
                                    <th class="depart_field">Departamento</th>
                                    <th class="location_destiny_field" >Ubicación Destino</th>
                                    <th class="asset_type_field">Tipo Activo</th>
                                    <th class="value_books_field">Valor en libros</th>
                                    <th class="options_field">Opciones</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="span4">
                        <div class="more_fields">
                            <div id="more_create">
                                <table class="table">
                                    <tr data-id="conjunto">
                                        <td>Conjunto</td>
                                        <td>
                                            <select id="conjuntoSelect" name="conjuntoSelect">
                                               
                                            </select>
                                        </td>
                                    </tr>
                                    <tr data-id="ubicacion">
                                        <td>Ubicación</td>
                                        <td>
                                            <select id="ubicacionSelect" name="ubicacionSelect">
                                                <option value=null>Seleccione</option>
                                            </select>
                                        </td>
                                    </tr>
                                    <tr data-id="departamento">
                                        <td>Departamento</td>
                                        <td>
                                            <select id="departamentoSelect" name="departamentoSelect">
                                                @ViewData["departList"]
                                            </select>
                                        </td>
                                    </tr>
                                    <tr data-id="serie">
                                        <td>Serie</td>
                                        <td>
                                            <input type="text" /></td>
                                    </tr>
                                    <tr data-id="price">
                                        <td>Precio de compra</td>
                                        <td>
                                            <input type="text" /></td>
                                    </tr>
                                    <tr data-id="date">
                                        <td>Fecha de compra</td>
                                        <td>
                                            <input type="date" />
                                        </td>
                                    <tr data-id="label">
                                        <td>Tipo de etiquetado</td>
                                        <td>
                                            <select>
                                                <option value="normal">NORMAL</option>
                                                <option value="no_etiquetable">NO ETIQUETABLE</option>
                                            </select>
                                        </td>
                                    <tr>
                                        <td></td>
                                        <td>
                                            <button class="btn green" id="assign">Asignar datos</button>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div id="more_notes">
                                <h5>Motivo de rechazo</h5>
                                <textarea name="denied_notes" class="standard_textarea"></textarea>
                                <div class="denied_user">
                                    <span>Usuario: </span>
                                    <input type="text" name="denied_user" disabled/>
                                </div>
                                <button class="btn green pull-right" id="deny_notes_button">Guardar Motivo</button>
                            </div>
                            <div id="more_delete">
                            </div>
                        </div>
                        <div>
                            <div class="tipoObs">
                                <table class="table">
                                    <tr data-id="serie">
                                        <td>
                                            <div id="DivtipoObs">
                                                Tipo de Obsolescencia
                                                <select multiple class="span11" id="selectObs">
                                                <option value="1">OBSOLESCENCIA 1</option>
                                                <option value="2">OBSOLESCENCIA 2</option>
                                                <option value="3">OBSOLESCENCIA 3</option>
                                                <option value="4">OBSOLESCENCIA 4</option>
                                                <option value="5">OBSOLESCENCIA 5</option>
                                            </select>
                                                
                                            </div>

                                           
                                        </td>
                                        <td>
                                            <button class="btn blue" id="VertiposObs"><i class="icon-question-sign"></i></button>
                                        </td>
                                    </tr>
                                    <tr>

                                        <td colspan="2">
                                            <button class="btn green" id="assign1">Asignar</button>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="tab-pane" id="dictamenSection">
                <div class="row-fluid">
                    <div class="formContainer span6">
                        <table>
                            <tr>
                                <td>Dictaminador</td>
                                <td>
                                    <input type="text" name="dictamen_dictaminador" id="dictamen_dictaminador" disabled />
                                </td>
                            </tr>
                            <tr>
                                <td>Folio Dictamen</td>
                                <td>
                                    <input type="text" name="dictamen_folio" id="dictamen_folio" disabled />
                                </td>
                            </tr>
                            <tr>
                                <td>FECHA DE AUTORIZACIÓN</td>
                                <td>
                                    <input type="text" name="dictamen_date" id="dictamen_date" disabled />
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="formContainer span6">
                        <div class="showDCTPDF">
                            <button class="btn red" id="showDCTPDFButton">
                                <i class="icon-file"></i>
                                Ver Dictamen
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="aditionalSection">
                <div id="aditionalDiv" class="row-fluid">
                    <div class="span8">
                        <table class="table table-striped table-hover" id="orderTable2">
                            <thead>
                                <tr>
                                    <th class="check_field">
                                        <div id="check_all_text"></div>
                                        <input type="checkbox" id="check_all" />
                                    </th>
                                    <th>Foto</th>
                                    <th>Descripción</th>
                                    <th>Ubicación</th>
                                    <th class="sold_price_field">Precio sugerido de venta</th>
                                    <th class="buyer_field">Comprador</th>
                                    <th class="donation_benefit_field">Beneficiario de la donación</th>
                                    <th class="rfc_field">RFC</th>
                                    <th class="type_act_field">Tipo de Acta de Destrucción</th>
                                    <th class="options_field">Opciones</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    
                </div>

                <div class="formContainer hide" id="sold_drop_container">
                    <table>
                        <tr>
                            <td>Precio sugerido de venta</td>
                            <td>
                                <input type="text" name="sold_price" disabled />
                            </td>
                        </tr>
                        <tr>
                            <td>Comprador</td>
                            <td>
                                <input type="text" name="buyer" disabled />
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="formContainer hide" id="donation_drop_container">
                    <table>
                        <tr>
                            <td>Beneficiario de la donación</td>
                            <td>
                                <input type="text" name="donation_benefit" disabled />
                            </td>
                        </tr>
                        <tr>
                            <td>RFC</td>
                            <td>
                                <input type="text" name="rfc" disabled />
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="formContainer hide" id="destruction_drop_container">
                    <table>
                        <tr>
                            <td>Tipo de Acta de Destrucción</td>
                            <td>
                                <select id="selectActa">
                                    <option value="1" selected>Via SAT</option>
                                    <option value="2">Via Notario</option>
                                </select>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="tab-pane" id="accountingSection">
                <div id="accountingDiv" class="row-fluid">
                    <div class="span8">
                        <table class="table table-striped table-hover" id="orderTable3">
                            <thead>
                                <tr>
                                    <th class="check_field">
                                        <div id="check_all_text"></div>
                                        <input type="checkbox" id="check_all" />
                                    </th>
                                    <th>Foto</th>
                                    <th>Descripción</th>
                                    <th>Ubicación</th>
                                 @*<th class="value_field">Valor en libros</th>*@
                                    <th class="owner_field">Propietaria (razón social)</th>
                                    <th class="account_field">cuenta de depósito</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>

                </div>

            </div>

            <div class="tab-pane" id="revisionSection">
                <div class="pull-right">
                    <input type="radio" name="repaired" value="1" />
                    <span>Reparado</span>
                    <input type="radio" name="repaired" value="0" />
                    <span>No reparado</span>
                </div>
                <div>
                    <span>Describa brevemente la repación del activo o la razón por la cual no pudo ser reparado</span>
                    <textarea name="repaired_reason" class="standard_textarea"></textarea>
                </div>
                <div class="row-fluid">
                    <div class="span4">
                        <div class="well-header">
                            <h5>Revisa</h5>
                        </div>
                        <div class="well-content">
                            <div class="staticField">
                                <span>Nombre</span>
                                <input type="text" name="checker_name" />
                                <span>Empresa</span>
                                <input type="text" name="checker_company" />
                            </div>
                        </div>
                    </div>
                    <div class="span8">
                        <div class="well-header text-normal">
                            <h5>Proveedor y/o Personal que efectúa la revisión y/o reparación</h5>
                        </div>
                        <div class="well-content">
                            <div class="center">
                                <span>Fecha de envío</span>
                                <input type="date" name="send_date" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="assetBackSection">
                <div class="row-fluid">
                    <div class="span5">
                        <div class="row-fluid">
                            <div class="span12">
                                <div class="well-header">
                                    <h5>Re-ingreso</h5>
                                </div>
                                <div class="well-content">
                                    <div class="staticField">
                                        <span>Fecha de re-ingreso del activo</span>
                                        <input type="date" name="return-date" />
                                        <span>GERENTE DEL CONJNUTO</span>
                                        <input type="text" name="manager_sign" value="0000xxx" disabled />
                                        <input type="text" name="manager_name" value="Manager name" disabled />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--div class="row-fluid">
                            <div class="span12">
                                <div class="well-header text-normal">
                                    <h5>Movimientos ligados a solicitud</h5>
                                    <div class="btn-group">
                                        <button class="btn btn-mini dark_green" id="addRelatedMovement" rel="tooltip" title="Agregar movimiento ligado">
                                            <i class="icon-plus icon-white"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="well-content">
                                    <div class="staticField">
                                        <table class="table table-striped" id="relatedDemands">
                                            <thead>
                                                <tr>
                                                    <th>Tipo de movimiento</th>
                                                    <th>Folio</th>
                                                    <th>Remover</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div-->
                        </div>
                  
                    <div id="reing" class="span7">
                        <div class="well-header">
                            <h5>Activos</h5>
                        </div>
                        <div class="well-content overflow">
                            <table class="table table-striped" id="returnedObjectsTable">
                                <thead>
                                    <tr>
                                        <th>Regresa Activo</th>
                                        <th>Descripción</th>
                                        <th>Marca</th>
                                        <th>Modelo</th>
                                        <th>Serie</th>
                                        <th>EPC</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>
                                           
                                       <input class="checkactiv" type="checkbox" checked />
                                        </td>
                                        <td>Proyector TDX</td>
                                        <td>Sony</td>
                                        <td>TDX-500</td>
                                        <td>0556456</td>
                                        <td>65A4DS6F4DS5F444D5F7E5F6</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div id="notreing" data-idact="" class="span12">
                        <div class="row-fluid">
                            <div class="span12">
                                <div class="well-header">
                                    <h5>Información de el activo</h5>
                                </div>
                                <div class="well-content">
                                    <div class="staticField">
                                        <div class="row-fluid">
                                        <div class="span6">
                                            <span class="span12" style="margin-left:0px">EPC</span>
                                            <input type="text" name="epc_new" disabled />
                                            <span class="span12" style="margin-left:0px">Marca</span>
                                            <input type="text" name="marca_new" placeholder="Marca" disabled />
                                            <span class="span12" style="margin-left:0px">Modelo</span>
                                            <input type="text" name="modelo_new" placeholder="Modelo" disabled />
                                          </div>

                                       <div class="span6">

                                           <span class="span12" style="margin-left:0px">#Serie</span>
                                        <input type="text" name="serie_new" placeholder="#Serie" disabled />
                                           <span class="span12" style="margin-left:0px">Descripción del activo</span>
                                        <input type="text" name="name_new" disabled />
                                           <div class="row-fluid">
                                            <div class="span6 archivo_new" >
                                                <div class="btn red btn-file">
                                                    <span class="fileupload-new">Seleccionar Imagen</span>
                                                    <input type="file" id="file_new" name="file_new" value="Default" accept="image/*" />
                                                </div>
                                                <div class="">
                                                    <img class='preview zoom' style="height: 100px; width:150px;" id="img_prenew">
                                                </div>
                                            </div>
                                           <div class="span6 archivo_new">
                                               <div class="btn red btn-file">
                                                   <span class="fileupload-new">Seleccionar Imagen</span>
                                                   <input type="file" id="file_new1" name="file_new1" value="Default" accept="image/*" />
                                               </div>
                                               <div class="">
                                                   <img class='preview zoom' style="height: 100px; width: 150px;" id="img_prenew1">
                                               </div>
                                           </div>
                                               </div>
                                          </div>
                                            </div>
                                        <button class="btn green" id="assignnew">Asignar datos</button>

                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="tab-pane" id="receiptSection">
                <div class="row-fluid">
                    <div class="formContainer span6" title="Baja Planeada/No planeada">
                        <table id="tablefactura">
                         

                            <tr><td colspan="4"></td></tr>

                            <tr id="trBajaPlaneada1">
                                <td > <label class="comprobanteReq"></label></td>
                                <td><label class="labelnom"></label> </td>
                                <td>
                                        <div class="span6">
                                        <img style="max-height: 200px; max-width:200px;" alt="Documento" id="img_pre1">
                                        </div>
                                </td>
                                <td>
                                        <div class="span4">
                                        <div class="archivo">
                                            <div class="btn red btn-file">
                                                <span class="fileupload-new">Seleccionar Archivo</span>
                                                <input type="file" id="fileb1" name="fileb1" value="Default" />
                                                </div>

                                                </div>
                                            </div>
                                </td>
                                <td>
                                    <button class="btn dark_green" id="btnOtroDocumento"><i class="icon-plus"></i></button>
                                    <button class="btn red" id="btnQuitarDocumento1" ><i class="icon-minus"></i></button>
                                    <button class="btn red" id="showFileButton" disabled>
                                        <i class="icon-file"></i>
                                    </button>
                                </td>
                            </tr>

                            <tr id="trBajaPlaneada2">
                                <td> <label class="comprobanteReq"></label></td>
                                <td><label class="labelnom"></label> </td>
                                <td>
                                    <div class="span6">
                                        <img style="max-height: 200px; max-width:200px;" alt="Documento" id="img_pre2">
                                    </div>
                                </td>
                                <td>
                                    <div class="span4">
                                        <div class="archivo">
                                            <div class="btn red btn-file">
                                                <span class="fileupload-new">Seleccionar Archivo</span>
                                                <input type="file" id="fileb2" name="fileb2" value="Default" />
                                            </div>

                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <button class="btn dark_green" id="btnOtroDocumento1"><i class="icon-plus"></i></button>
                                    <button class="btn red" id="btnQuitarDocumento2"><i class="icon-minus"></i></button>
                                    <button class="btn red" id="showFileButton3" >
                                        <i class="icon-file"></i>
                                    </button>
                                </td>
                            </tr>

                            <tr id="trBajaPlaneada3">
                                <td> <label class="comprobanteReq"></label></td>
                                <td><label class="labelnom"></label> </td>
                                <td>
                                    <div class="span6">
                                        <img style="max-height: 200px; max-width:200px;" alt="Documento" id="img_pre3">
                                    </div>
                                </td>
                                <td>
                                    <div class="span4">
                                        <div class="archivo">
                                            <div class="btn red btn-file">
                                                <span class="fileupload-new">Seleccionar Archivo</span>
                                                <input type="file" id="fileb3" name="fileb3" value="Default" />
                                            </div>

                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <button class="btn red" id="showFileButton4" >
                                        <i class="icon-file"></i>
                                    </button>
                                </td>
                            </tr>
                        
                            <tr id="trBajaNoPlaneada">
                                <td> <label class="comprobanteReq"></label></td>
                                <td><label class="labelnom"></label> </td>
                                <td>
                                    <div class="span4">
                                        <div class="archivo">
                                            <div class="btn red btn-file">
                                                <span class="fileupload-new">Seleccionar Archivo</span>
                                                <input type="file" id="file3" name="file3" value="Default" />
                                            </div>

                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <button class="btn red" id="showFileButton2" disabled>
                                        <i class="icon-file"></i>
                                    </button>
                                </td>
                            </tr>
                        </table>
                        <div id="more_files"></div>

                       
                    </div>
                </div>
                <div class="row-fluid">
                    <div id="actacontainer" class="formContainer span6" title="Baja Planeada">

                        <table>
                            <tr>
                                <td colspan="2">Acta de Destrucción</td>
                            </tr>
                            <tr>
                                <td>Folio del Acta
                                    <br />
                                    <input type="text" name="acta_folio" id="acta_folio" disabled />

                                </td>
                                <td>
                                    <div class="showACTPDF">
                                        <button class="btn red" id="showActaButton" disabled>
                                            <i class="icon-file"></i>
                                            Ver Acta
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <div class="tab-pane" id="facturaSection">
                <div class="row-fluid">
                    <div class="formContainer span6" title="Baja Planeada/No planeada">
                        <table id="tablefactura1">
                            <tr id="trfactura1">
                                <td> Factura</td>
                                <td>
                                    <div class="span6">
                                        <img style="max-height: 200px; max-width:200px;" alt="Factura" id="img_pref">
                                    </div>
                                </td>
                                <td>
                                    <div class="span4">
                                        <div class="archivof">
                                            <div class="btn red btn-file">
                                                <span class="fileupload-new">Seleccionar Archivo</span>
                                                <input type="file" id="filef" name="filef" value="Default" />
                                            </div>

                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <button class="btn red" id="showFileButtonf" disabled>
                                        <i class="icon-file"></i>
                                    </button>
                                </td>
                            </tr>

                        </table>
                    </div>
                </div>
              
            </div>
            @ViewData["formInitialContent"]
        </div>
    </div>
    <div class="modal-footer">
        <span width="80%" id="final_msg" class="error_msg"></span>
        <input value="Guardar" class="btn blue" type="submit" id="save_button">
        <input value="Cancelar" class="btn grey" type="button" id="cancel_button">
    </div>
    @*</form>*@
    @* Dont use FORM tag *@
</div>
@* Modal Details *@
<div id="detallesModal" class="modal  hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
                <h4 class="modal-title" id="myModalLabel">Solicitudes</h4>
            </div>
            <div class="modal-body">
                <!-- Tabs -->
                <div class="navbar-inner">
                    <ul class="nav nav-tabs" id="tabDetalles">
                        <li class="active" id="staticInfoDetalles"><a href="#tabContentDemand" data-toggle="tab">Inf. General</a></li>
                        <li id="staticInfoAuthorization"><a href="#tabContentAuthorization" data-toggle="tab">Autorizaciones</a></li>
                    </ul>
                </div>
                <!-- Tabs Content -->
                <div class="tab-content" id="tabContentDetalles">
                    <!--Processes Section -->
                    <div class="tab-pane active" id="tabContentDemand">
                        <div class="span5">
                            <h5>Información General</h5>
                            <div id="datosDemand">
                            </div>
                        </div>

                        <div id="divobjetosreales2">

                            <label id="labeltitulo"></label>
                            <br />
                            <br />
                            <table id="tableobjetos2" class="table table-striped table-bordered table-hover datatable">
                                <tbody></tbody>
                            </table>

                        </div>
                    </div>

                    <!-- Movement Section -->
                    <div class="tab-pane" id="tabContentAuthorization">
                        <div id="autorizacion">
                            <div class="row-fluid">
                                <div class="span12">
                                    <div class="light_blue set_color">
                                        <div class="well-header widgetclient titleclient">
                                            <h5>Lista de Autorizaciones</h5>
                                        </div>
                                        <div class="well-content no-search">
                                            <table id="authorizationTable" class="table table-striped table-bordered table-hover datatable">
                                                <thead>
                                                    <tr>
                                                        <th>Perfil</th>
                                                        <th>Usuario</th>
                                                        <th>Autorizo</th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                            <div id="divmotivo">
                                                <div class="staticField">
                                                    <label>Motivo: </label>
                                                    <label id="lblmotivo"></label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input value="Aceptar" class="btn blue" type="button" id="cancel_buttonProcess" data-dismiss="modal">
            </div>
        </div>
    </div>
</div>

@* Confirm Modal *@
<div id="passconfirmmodal" class="modal hide fade" data-backdrop="static">
    <div class="modal-header">
        <h3 class="modal-header-text">Denegar Solicitud</h3>
    </div>
    <div class="modal-body">
        <div id="divmot">
            <label>Motivo: </label>
            <div class="staticField">
                <textarea id="txtmotivo" required="required" style="width: 100%; height: 100px;"></textarea>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <span width="80%" id="pass_msg" class="error_msg"></span>
        <input value="Denegar" data-iddemand="" data-tipo="" class="btn red" type="button" id="passyes_button">
        <input value="Cancelar" class="btn grey" type="button" id="passnon_button">
    </div>
</div>

@*Location Modal *@
<div id="location_modal_process" class="modal hide fade modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>*@
        <h5 class="modal-header-text">Agregar Ubicación</h5>
    </div>
    <div class="modal-header">
        <div class="divTreeSmall">
            @*<div class="well-content no-search">*@
            <div class="portlet-body fuelux">
                <ul class="tree" id="location_tree3"></ul>
            </div>
            @*</div>*@
        </div>
    </div>
    <div class="modal-footer">
        <span width="80%" id="final_msglocation" class="error_msg"></span>
        <button class="btn blue" type="button" id="save_location" data-objid="null">Guardar</button>
        <button class="btn" type="button" data-dismiss="modal">Cancelar</button>
    </div>
</div>

@*tipos de obsolescencia *@
<div id="ObsolescenciaModal" class="modal  hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
                <h4 class="modal-title" id="myModalLabel">Tipos de Obsolescencia</h4>
            </div>
            <div class="modal-body">
                <ol>
                    <li>De acuerdo al diagnóstico de reparación su costo de mantenimiento es mayor al 51% del costo del equipo 
                         según consta en el histórico de consumo de refacciones en el sistema MAXIMO y la lista de precios del proveedor.
                    </li>
                    <li>De acuerdo al diagnóstico de reparación no encuentran refacciones para su puesta en marcha nuevamente al ser
                        un modelo descontinuado según informes del proveedor y/o fabricante del equipo.
                    </li>
                    <li>Se quedó sin uso para el negocio debido a que se modificó el proceso de elaboración, según consta
                        en el Manual de Operación del Negocio.
                    </li>
                    <li>Se quedó sin uso para el negocio debido a que fue sustituido por uno de mayor capacidad, según consta
                        en el Manual de Operación del Negocio.
                    </li>
                    <li>Se quedó sin uso para el conjunto debido a que no va con la nueva imagen y decoración, según consta
                        en el proyecto.
                    </li>
                </ol>
            </div>
            <div class="modal-footer">
                <input value="Aceptar" class="btn blue" type="button" id="cancel_buttonObs" data-dismiss="modal">
            </div>
        </div>
    </div>
</div>

<div id="addDemandRelationModal" class="modal  hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
                <h4 class="modal-title" id="myModalLabel">Seleccionar moviento</h4>
            </div>
            <div class="modal-body">
                <div class="filterSelector">
                    <label>Filtrar: </label>
                    <select>
                        <option value="">NINGUNO</option>
                        <option value="ALTA">ALTAS</option>
                        <option value="BAJA">BAJAS</option>
                    </select>
                </div>
                <table width="100%" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th width="7%"></th>
                            <th>Folio</th>
                            <th>Tipo</th>
                            <th>Fecha de Solicitud</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
            <div class="modal-footer">
                <input value="Agregar" class="btn blue" type="button" id="add_buttonRel" data-dismiss="modal">
            </div>
        </div>
    </div>
</div>


@*User Scripts*@
<script src="~/Content/Scripts/jquery.maskMoney.min.js"></script>

<script src="~/RivkaBase/Scripts/RivkaViewer2/RivkaViewer.js"></script>
<script src="~/RivkaBase/Scripts/RivkaTree/RivkaTree.js"></script>

<script type="text/javascript">
    //Make it global

    var Movements = null;
    var OrderTable = null;
    var OrderTable2 = null;
    var OrderTable3 = null;
    var deletePhotos = null;
    var idactx = "@idact";
    var typemovex = "@typemov";
    var tabselectx = "@tabselect";
    function setactive() {
        var tab1 = jQuery("#lista").attr("class");
        var tab2 = jQuery("#listaHeader").attr("class");
         jQuery("#lista").attr("class", tab1 + " active") ;
          jQuery("#listaHeader").attr("class", tab2 + " active");

    }
    function setactive1() {
        function setactive1() {
            alert("solicitud con folio :@folio")

            var tab2 = jQuery("#autorizacionesHeader").attr("class");
            jQuery("#autorizacionesHeader").attr("class", tab2 + " active");

            setTimeout(jQuery("#tabContent2 #autorizaciones").attr("class", "tab-pane autorizaciones autorizacionmargen active"), 1000);
            jQuery("#authoTable").find("[data-iddemand=" + idactx + "]").click();


        } jQuery("#authoTable").find("[data-iddemand=" + idactx + "]").click();
    }
    function setAct() {
        _loading();
        debugger;
        jQuery("#tabHeader2 li").removeClass("active");
        jQuery("#tabContent2 div").removeClass("active");


        var select, select1;
        select = typemovex;
        select1 = jQuery("#estatusSelect").val();
        if (tabselectx == "0") {
            jQuery.ajax({
                url: "/ObjectAdmin/Demand/getDemamdTable",
                data: { movement: select, stats: select1 },
                type: "POST",

                beforeSend: _loading(),
                success: function (data) {
                    jQuery("#moveprofileSelect2 ").find("[value=" + select + "]").attr("selected", "selected")
                    data = JSON.parse(data);
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].movement == "Salida Temporal") {
                            data[i].status = movementStatus["temporal"][data[i].status];
                        } else {
                            try {
                                data[i].status = movementStatus[data[i].typeStatus][data[i].status];
                            } catch (ex) {

                            }
                        }
                    }
                    data = JSON.stringify(data);
                    model.demandData = data;
                    var dataOptions = { id: "_id", name: "folio", permissions: ["@del"] };
                    viewer.setData(model.demandData, dataOptions);
                    table.print();
                    _loading();
                    jQuery("#demandsTable_rvtable").find("[data-id=" + idactx + "]").find("a").click();
                    setTimeout(setactive(), 20);
                }

            });
        } else {
            LoadAutorizacionauto(typemovex, setactive1);
            LoadLastMovements();
            // setTimeout(setactive1(),20);

        }
        _loading();
    }
    var movementStatus = {
        "delete": {
            1: "DICTAMEN PENDIENTE",
            2: "CON DICTAMEN Y EN ESPERA DE DATOS ADICIONALES",
            3: "CON DICTAMEN, DATOS ADICIONALES Y EN ESPERA DE AUTORIZACIONES",
            4: "CON DICTAMEN, DATOS ADICIONALES, AUTORIZACIONES Y EN ESPERA DE COMPROBANTES",
            5: "CON DICTAMEN, DATOS ADICIONALES, AUTORIZACIONES, COMPROBANTES Y EN ESPERA DEL VOBO",
            6: "SOLICITUD AUTORIZADA Y APLICADA",
            7: "DENEGADA"

        },
        "create": {
            3: "SOLICITUD EN PROCESO",
            5: "ESPERA DE VISTO BUENO",
            6: "SOLICITUD AUTORIZADA Y APLICADA",
            7: "DENEGADA"
        },
        "movement": {
            3: "SOLICITUD EN PROCESO",
            5: "ESPERA DE VISTO BUENO",
            6: "SOLICITUD AUTORIZADA Y APLICADA",
            7: "DENEGADA"
        },
        "temporal": {
            3: "SOLICITUD EN ESPERA DE APROBACIÓN",
            5: "ESPERA DE VISTO BUENO",
            6: "LOS ACTIVOS YA HAN SALIDO",
            7: "DENEGADA",
            8: "LOS ACTIVOS YA HAN REGRESADO"
        }
    };

    jQuery(function ($) { //DOM Ready

        //relatedMovement = {

        //    objectsChecker: {

        //        objectsById: null,
        //        objectsByReference: null,

        //        start: function () {
        //            debugger;
        //            relatedMovement.objectsChecker.objectsById = {};
        //            relatedMovement.objectsChecker.objectsByReference = {};
        //            var trs = $("#returnedObjectsTable tbody tr");
        //            for (var i = 0; i < trs.length; i++) {
        //                relatedMovement.objectsChecker.objectsById[$(trs[i]).data("id")] = $(trs[i]).data("reference");
        //                var pass= relatedMovement.objectsChecker.objectsByReference.hasOwnProperty($(trs[i]).data("reference"));
        //                if (!pass) {
        //                    relatedMovement.objectsChecker.objectsByReference[$(trs[i]).data("reference")] = Array();
        //                }
        //                relatedMovement.objectsChecker.objectsByReference[$(trs[i]).data("reference")].push($(trs[i]).data("id"));
        //            }

        //            relatedMovement.objectsChecker.bindCheckBoxs();
        //        },

        //        bindCheckBoxs: function () {
        //            $("#returnedObjectsTable tbody tr input[type=checkbox]").unbind("change.modify");
        //            $("#returnedObjectsTable tbody tr input[type=checkbox]").bind("change.modify", function () {

        //            });
        //        },

        //        removeObjectsFrom: function (data) {
        //            var tr = $(data);
        //            console.log(tr);
        //            return false;
        //        }

        //    },

        //    init: function () {
        //        relatedMovement.bindElements();
        //    },

        //    setRelatedMovements: function (data) {
        //        if (typeof data == "undefined") return;
        //        for (var i = 0; i < data.length; i++) {
        //            var newElement = $("<tr/>").attr("data-id", data[i].movementID).append(
        //                $("<td class='type'/>").text(data[i].type)
        //            ).append(
        //                $("<td class='folio'/>").text(data[i].folio)
        //            );
        //            $("#relatedDemands tbody").append(newElement);
        //        }
        //    },

        //    addDemandRow: function (data) {
        //        var data = $(data);
        //        var newElement = $("<tr/>").attr("data-id", data.data("id")).append(
        //            $("<td class='type'/>").text(data.find("td.type").text())
        //        ).append(
        //            $("<td class='folio'/>").text(data.find("td.folio").text())
        //        ).append(
        //            $("<td class='removeButton'/>").append(
        //                $("<button class='btn btn-mini red'/>").append(
        //                    $("<i class='icon-remove'/>")
        //                )
        //            ).bind("click.remove", function () {
        //                var element = $(this);
        //                _confirm({
        //                    title: "Remover Movimiento",
        //                    message: "¿Seguro que desea remover el movimiento cpn folio " + element.closest("tr").find("td.folio").text() + "?",
        //                    action: function () {
        //                        element.closest("tr").remove()
        //                    }
        //                });
        //            })
        //        );
        //        $("#relatedDemands tbody").append(newElement);
        //    },

        //    onSelectDemandAction: function () {
        //        var row = $(this);
        //        var td = row.find(".checkrow");

        //        if (td.hasClass("selected")) {
        //            td.empty().removeClass("selected");
        //        } else {
        //            td.append(
        //                $("<i class='icon-ok'/>")
        //            ).addClass("selected");
        //        }
        //    },

        //    loadRelationModalContent: function (filter) {
        //        $.ajax({
        //            url: "/ObjectAdmin/Demand/getRelatedDemandsData",
        //            type: "POST",
        //            beforeSend: _loading,
        //            data: { filter: filter },
        //            success: function (data) {
        //                var data = JSON.parse(data);
        //                var newElement = null;
        //                $("#addDemandRelationModal table tbody").empty();
        //                for (var i = 0; i < data.length; i++) {
        //                    newElement = $("<tr data-id='" + data[i]._id + "' data-objects='" + data[i].objects + "'/>").append(
        //                        $("<td class='checkrow'/>")
        //                    ).append(
        //                        $("<td class='folio'/>").text(data[i].folio)
        //                    ).append(
        //                        $("<td class='type'/>").text(data[i].type)
        //                    ).append(
        //                        $("<td class='date'/>").text(data[i].CreatedDate)
        //                    ).bind("click.select", relatedMovement.onSelectDemandAction).css("cursor", "pointer");

        //                    //do not show the elements already assigned
        //                    if ($("#relatedDemands tbody tr[data-id=" + data[i]._id + "]").length == 0) {
        //                        $("#addDemandRelationModal table tbody").append(newElement);
        //                    }
        //                }
        //                $("#addDemandRelationModal").modal("show");
        //                _loading();
        //            },
        //            error: function (errorThrown) {
        //                _loading();
        //                _alert("error", "Ha ocurrido un error");
        //            }
        //        });
        //    },

        //    filterOptions: function (filter) {

        //    },

        //    bindElements: function () {
        //        $("#addRelatedMovement").unbind("click.openModal");
        //        $("#addRelatedMovement").bind("click.openModal", function () {
        //            relatedMovement.loadRelationModalContent();
        //        });

        //        $("#addDemandRelationModal .filterSelector select").unbind("change.filter");
        //        $("#addDemandRelationModal .filterSelector select").bind("change.filter", function () {
        //            relatedMovement.loadRelationModalContent($(this).val());
        //        });

        //        $("#add_buttonRel").unbind("click.add");
        //        $("#add_buttonRel").bind("click.add", function () {
        //            var selecteds = $("#addDemandRelationModal tbody tr td.selected").closest("tr");
        //            var notAddedFolios = Array();
        //            for (var i = 0; i < selecteds.length; i++) {
        //                if (relatedMovement.objectsChecker.removeObjectsFrom(selecteds[i])) {
        //                    relatedMovement.addDemandRow(selecteds[i]);
        //                } else {
        //                    notAddedFolios.push($(selecteds[i]).find("td.folio").text());
        //                }
        //            }
        //            if (notAddedFolios.length > 0) { //creating the not added folios message
        //                var message = "Los folios: [";
        //                for (var i = 0; i < notAddedFolios.length; i++) {
        //                    message += notAddedFolios[i];
        //                    if (i < notAddedFolios.length - 1) {
        //                        message += ",";
        //                    }
        //                }
        //                message += "] no han sido añadidos por que no cuentan con objetos relacionados a esta solicitud.";
        //                _alert("error",message);
        //            }
        //        });
        //    }
        //};

        //relatedMovement.init();

        temporalMovement = {
            newact: [],
            init: function () {
                temporalMovement.bindElements();
            },

            fillFields: function (data) {
                $("#extraTemporalSection input").each(function () {
                    try {
                        var input = $(this);
                        input.val(data[input.attr("name")]);
                    } catch (e) { }
                });
            },

            fillUpdatedFields: function (data) {
                var option = data["repaired"];
                jQuery("#revisionSection input[name=repaired][value=" + option + "]").attr("checked", true);
                jQuery("#revisionSection textarea[name=repaired_reason]").val(data["repaired_reason"]);
                jQuery("#revisionSection input[name=checker_name]").val(data["checker_name"]);
                jQuery("#revisionSection input[name=checker_company]").val(data["checker_company"]);
                jQuery("#revisionSection input[name=send_date]").val(data["send_date"]);
                jQuery("#assetBackSection input[name=return-date]").val(data["return-date"]);

                var returnedObjects = data["returnedObjects"];
                for (var i = 0; i < returnedObjects.length; i++) {
                    $("#returnedObjectsTable tbody tr[data-id=" + returnedObjects[i] + "] input[type=checkbox]").attr("checked", true);
                }

                //relatedMovement.setRelatedMovements(data["relatedMovements"]);
            },

            doNotEditable: function () {
                $("#revisionSection input").attr("disabled", true);
                $("#revisionSection textarea").attr("disabled", true);
                $("#assetBackSection input").attr("disabled", true);
                $("#assetBackSection textarea").attr("disabled", true);
                $("#assignnew").attr("disabled", true);
                $("#assignnew").hide();
            },

            doEditable: function () {
                $("#revisionSection input").attr("disabled", false);
                $("#revisionSection textarea").attr("disabled", false);
                $("#assetBackSection input").attr("disabled", false);
                $("#assetBackSection textarea").attr("disabled", false);
                $("#assignnew").attr("disabled", false);
                $("#assignnew").show();
            },

            getUpdateInfo: function () {
                var result = {};
                try {
                    var option = jQuery("#revisionSection input[name=repaired]:checked").val();
                    result["repaired"] = option == undefined ? "" : option;
                    result["repaired_reason"] = jQuery("#revisionSection textarea[name=repaired_reason]").val();
                    result["checker_name"] = jQuery("#revisionSection input[name=checker_name]").val();
                    result["checker_company"] = jQuery("#revisionSection input[name=checker_company]").val();
                    result["send_date"] = jQuery("#revisionSection input[name=send_date]").val();
                    result["return-date"] = jQuery("#assetBackSection input[name=return-date]").val();

                    var selectedInputs = $("#returnedObjectsTable tbody input[type=checkbox]:checked").closest("tr");
                    var unselectedInputs = $("#returnedObjectsTable tbody input[type=checkbox]:unchecked").closest("tr");
                    var returnedObjects = new Array();
                    var newObjects = new Array();
                    for (var i = 0; i < selectedInputs.length; i++) {
                        returnedObjects.push($(selectedInputs[i]).data("id"));
                    }
                    for (var i = 0; i < unselectedInputs.length; i++) {
                        var ida = $(unselectedInputs[i]).data("id");
                        for (var j = 0; j < temporalMovement.newact.length; j++) {
                            if (ida == temporalMovement.newact[j].id) {
                                newObjects.push(temporalMovement.newact[j]);
                            }
                        }
                    }

                    result["newObjects"] = newObjects;
                    result["returnedObjects"] = returnedObjects;

                    //var relatedMovements = Array();
                    //var relatedSelecteds = $("#relatedDemands tbody tr");
                    //for (var i = 0; i < relatedSelecteds.length; i++) {
                    //    var newObject = {};
                    //    var element = $(relatedSelecteds[i]);
                    //    newObject["movementID"] = element.data("id");
                    //    newObject["folio"] = element.find("td.folio").text();
                    //    newObject["type"] = element.find("td.type").text();
                    //    relatedMovements.push(newObject);
                    //}
                    //result["relatedMovements"] = relatedMovements;
                } catch (e) { }

                return result;
            },

            createTableClone: function () {
                var table = $("#returnedObjectsTable");
                table.html("");
                table.append($("#orderTable thead").clone());
                table.append($("#orderTable tbody").clone());
                $("#returnedObjectsTable thead th:first").remove();
                $("#returnedObjectsTable thead th:first").remove();
                $("#returnedObjectsTable thead th:last").remove();
                $("#returnedObjectsTable thead tr:first").prepend($("<th>Regresa Activo</th>"))
                $("#returnedObjectsTable tbody tr").each(function () {
                    $(this).find("td:first").remove();
                    $(this).find("td:first").remove();
                });
                $("#returnedObjectsTable tbody tr").each(function () {
                    $(this).find("td:last").remove();
                });
                $("#returnedObjectsTable tbody tr").prepend($("<td><input type='checkbox' /></td>"));
                temporalMovement.bindElementsnew();
            },
            validateNewFields: function () {
                if (jQuery("[name=epc_new]").val().trim() == "") {
                    _alert("error", "El Epc es necesario");
                    return false;
                } else if (jQuery("[name=serie_new]").val().trim() == "") {
                    _alert("error", "El número de serie es necesario");
                    return false;
                } else if (jQuery("[name=name_new]").val().trim() == "") {
                    _alert("error", "La descripción es necesaria");
                    return false;
                }
                return true;
            },
            validateUpdateFields: function () {
                if (jQuery("#revisionSection input[name=repaired]:checked").length == 0) {
                    _alert("error", "Se necesita seleccionar si los activos fueron reparados");
                    return false;
                } else if (jQuery("#revisionSection textarea[name=repaired_reason]").val().trim() == "") {
                    _alert("error", "La descripción es necesaria");
                    return false;
                } else if (jQuery("#revisionSection input[name=checker_name]").val().trim() == "") {
                    _alert("error", "El nombre de quién revisa es necesario");
                    return false;
                } else if (jQuery("#revisionSection input[name=checker_company]").val().trim() == "") {
                    _alert("error", "La empresa de quien revisa es necesaria");
                    return false;
                } else if (jQuery("#revisionSection input[name=send_date]").val().trim() == "") {
                    _alert("error", "La fecha de envío es necesaria");
                    return false;
                } else if (jQuery("#assetBackSection input[name=return-date]").val() == "") {
                    _alert("error", "La fecha de ingreso es necesaria");
                    return false;
                }
                return true;
            },

            updateMovement: function () {
                var data = temporalMovement.getUpdateInfo();
                var formData = new FormData();
                var filephoto = $("#file_new")[0].files[0];
                formData.append("id", Movements.idMovement);
                formData.append("file", filephoto);
                formData.append("data", JSON.stringify(data));
                if (temporalMovement.validateUpdateFields()) {
                    $.ajax({
                        url: "/ObjectAdmin/Demand/updateTemporal",
                        type: "POST",
                        data: formData,
                        contentType: false,
                        processData: false,
                        beforeSend: _loading,
                        success: function (data) {
                            model.init();
                            $("#admin_panel").modal("hide");
                            OrderTable2.removeAllRows();
                            OrderTable3.removeAllRows();
                            LoadAutorizacion2();
                            LoadLastMovements();
                            _loading();
                            _alert("success", "Actualizado Correctamente");
                        },
                        error: function (data) {
                            $("#admin_panel").modal("hide");
                            _loading();
                            _alert("error", "Ha ocurrido un error");
                        }
                    });
                }
            },

            generateMovementPDF: function () {
                window.open("/ObjectAdmin/Demand/generateTempPDF?demandid=" + Movements.idMovement);
                //$.ajax({
                //    url: "/ObjectAdmin/Demand/generateTempPDF",
                //    type: "POST",
                //    data: { demandid: Movements.idMovement },
                //    beforeSend: function () { _loading() },
                //    success: function (data) {
                //        window.open("/Uploads/Dictamenes/documentos/" + data, "_blank");
                //    },
                //    complete: function () { _loading() }
                //});
            },
            bindElementsnew: function () {
                $("#returnedObjectsTable tbody tr").unbind("click.tract");
                $("#returnedObjectsTable tbody tr").bind("click.tract", function () {
                    $("#notreing").find("input").each(function () {
                        $(this).val("");
                    })
                    $('#img_prenew').attr("src", "");
                    $('#img_prenew1').attr("src", "");
                    jQuery(".zoomContainer").remove();
                    bindzoom(10)
                    $("#reing").find(".selectedblue").removeClass("selectedblue");
                    $(this).addClass("selectedblue");
                    var idselect = $(this).data("id");
                    var idloc = $(this).find(".location").data("id");
                    $("#notreing").data("idact", idselect);
                    $("#notreing").data("idloc", idloc);
                    for (var j = 0; j < temporalMovement.newact.length; j++) {
                        if (idselect == temporalMovement.newact[j].id) {
                            $("#notreing").find("[name=epc_new]").val(temporalMovement.newact[j].epc);
                            $("#notreing").find("[name=marca_new]").val(temporalMovement.newact[j].marca);
                            $("#notreing").find("[name=modelo_new]").val(temporalMovement.newact[j].modelo);
                            $("#notreing").find("[name=serie_new]").val(temporalMovement.newact[j].serie);
                            $("#notreing").find("[name=name_new]").val(temporalMovement.newact[j].descripcion);
                            $('#img_prenew').attr("src", temporalMovement.newact[j].image);
                            $('#img_prenew1').attr("src", temporalMovement.newact[j].image1);
                        }
                    }
                    jQuery(".zoomContainer").remove();
                    bindzoom(10)
                });
                $("#assignnew").unbind("click.assingnew");
                $("#assignnew").bind("click.assingnew", function () {
                    var idact = jQuery("#notreing").data("idact");
                    var idloc = jQuery("#notreing").data("idloc");

                    for (var j = 0; j < temporalMovement.newact.length; j++) {
                        if (idact == temporalMovement.newact[j].id) {
                            temporalMovement.newact.splice(j, 1);
                        }
                    }
                    var validuncheck = false;
                    jQuery("#returnedObjectsTable tbody input[type=checkbox]:unchecked").closest("tr").each(function () {
                        if (idact == jQuery(this).data("id")) {
                            validuncheck = true;
                        }
                    });
                    var image = "";
                    var image1 = "";
                    try {
                        if (jQuery('#img_prenew').attr("src").length > 0) {
                            image = jQuery('#img_prenew').attr("src");
                        }
                        if (jQuery('#img_prenew1').attr("src").length > 0) {
                            image1 = jQuery('#img_prenew1').attr("src");
                        }
                    } catch (ex) {
                        console.log(ex)
                    }
                    if (temporalMovement.validateNewFields()) {
                        if (validuncheck) {
                            var elementnew = {
                                id: idact,
                                epc: $("#notreing").find("[name=epc_new]").val(),
                                marca: $("#notreing").find("[name=marca_new]").val(),
                                modelo: $("#notreing").find("[name=modelo_new]").val(),
                                serie: $("#notreing").find("[name=serie_new]").val(),
                                image: image,
                                image1: image1,
                                descripcion: $("#notreing").find("[name=name_new]").val(),
                                location: idloc
                            }
                            temporalMovement.newact.push(elementnew);

                            _alert("success", "datos asignados correctamente");
                        } else {
                            _alert("error", "Seleccione un activo de la lista y desmarque la columna:Regresa Activo");
                        }
                    }
                });
                $(".newcheck").unbind("click.newcheck");
                $(".newcheck").bind("click.newcheck", function () {
                    var idd = $(this).closest("tr").data("id");
                    if (jQuery(this).is(":checked")) {
                        for (var j = 0; j < temporalMovement.newact.length; j++) {
                            if (idd == temporalMovement.newact[j].id) {
                                temporalMovement.newact.splice(j, 1);
                            }
                        }
                    }

                    var idloc = $(this).closest("tr").find(".location").data("id");
                    $("#notreing").data("idact", idd);
                    $("#notreing").data("idloc", idloc);
                    $("#notreing").find("input").each(function () {
                        $(this).val("");
                    })
                    $('#img_prenew').attr("src", "");
                    $('#img_prenew1').attr("src", "");
                    jQuery(".zoomContainer").remove();
                    bindzoom(10)

                });

            },
            bindElements: function () {
                $("#pdftButton").unbind("click.generatePDF");
                $("#pdftButton").bind("click.generatePDF", function () {
                    temporalMovement.generateMovementPDF();
                });
            }
        };

        temporalMovement.init();

        deletePhotos = {
            photos: Array(),
            created: false,
            selectedID: null,
            containerID: "more_delete",
            rowCounter: 0,
            maxFiles: 3,
            currentUps: 0,

            readURL: function (input, previewElement) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        previewElement.attr('src', e.target.result);

                        previewElement.data('zoom-images', e.target.result);
                        jQuery(".zoomContainer").remove();
                        //  bindzoom(10)
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            },

            start: function () {
                deletePhotos.photos = Array();
                deletePhotos.created = false;
                deletePhotos.selectedID = null;
                deletePhotos.rowCounter = 0;
                $("#more_delete").empty();
            },

            init: function () {
                deletePhotos.bindAll();
            },

            draw: function () {
                deletePhotos.rowCounter = 0;
                deletePhotos.createContainer();
                deletePhotos.created = true;
            },

            getRowPhotos: function (id) {
                if (deletePhotos.selectedID != null) { //save the last row set, just in case it's not set yet
                    deletePhotos.photos[deletePhotos.selectedID] = $("#" + deletePhotos.containerID + " .deletePhotosContainer:first").html();
                }
                var element = deletePhotos.photos[id];
                var inputs = $(element).find("input");
                var photos = Array();
                inputs.each(function () {
                    var file = $(this).data("uploadedfile");
                    if (typeof file != "undefined" && file != undefined && file != "") {
                        photos.push($(this).data("uploadedfile"));
                    }
                });
                return photos;
            },

            bindPhotosSelectorsToRowView: function (row) {
                $(row).unbind("click.openPhotos");
                $(row).bind("click.openPhotos", function () {
                    var images = $(this).data("images").split(",");
                    var container = $("<div class='deletePhotosContainer'/>");
                    $("#" + deletePhotos.containerID).empty();
                    $("#" + deletePhotos.containerID).append(
                        $("<h4/>").text("Imagenes:")
                    ).append(
                        container
                    );
                    for (var i = 0; i < images.length; i++) {
                        if (images[i] != "") {
                            container.append(
                                $("<div class='deletePhotosRow'/>").append(
                                    $("<div class='filePicker'/>").append(
                                        $("<img class='preview zoom' data-zoom-images='/Uploads/Dictamenes/imagenes/" + images[i] + "'/>").attr("src", "/Uploads/Dictamenes/imagenes/" + images[i])

                                    )
                                )
                            );
                        }
                    }
                    jQuery(".zoomContainer").remove();
                    //   bindzoom(10)
                });
            },

            bindPhotosSelectorsToRow: function (row) {
                $(row).unbind("click.openPhotos");
                $(row).bind("click.openPhotos", function () {
                    var id = $(row).data("id");
                    deletePhotos.openRow(id);
                });
            },

            createContainer: function () {
                $("#" + deletePhotos.containerID).empty();
                $("#" + deletePhotos.containerID).append(
                    $("<h4/>").text("Imagenes:")
                ).append(
                    $("<div class='deletePhotosContainer'/>").append(
                        deletePhotos.createNewRow()
                    )
                );
                deletePhotos.bindAll();
            },

            openRow: function (id) {
                if (deletePhotos.selectedID != null) {
                    deletePhotos.photos[deletePhotos.selectedID] = $("#" + deletePhotos.containerID + " .deletePhotosContainer:first").html();
                }
                deletePhotos.selectedID = id;
                if (typeof deletePhotos.photos[deletePhotos.selectedID] == "undefined") {
                    deletePhotos.draw();
                } else {
                    $("#" + deletePhotos.containerID + " .deletePhotosContainer:first").html(deletePhotos.photos[deletePhotos.selectedID]);
                    deletePhotos.rowCounter = $("#" + deletePhotos.containerID).find(".deletePhotosRow").length;
                    deletePhotos.created = true;
                    $("#" + deletePhotos.containerID + " .deletePhotosContainer .deletePhotosRow").each(function () {
                        deletePhotos.bindRow(this);
                    });
                }
            },

            closeRow: function (id) {
                deletePhotos.selectedID = null;
            },

            createNewRow: function () {
                var newRow = $("<div/>").addClass("deletePhotosRow");
                newRow.append(
                    $("<div class='inputs hide'/>").append(
                        $("<input type='file'/ class='photo'>")
                    )
                );
                newRow.append(
                    $("<div class='filePicker'/>").append(
                        $("<button class='btn red'/>").append(
                            $("<i class='icon-file'>")
                        ).text("Seleccionar Archivo")
                    )
                );

                var buttons = $("<div class='buttons'>");
                if (deletePhotos.rowCounter < deletePhotos.maxFiles - 1) {
                    buttons.append(
                        $("<button class='btn btn dark_green fileinput-button addFile' data-original-title='Agregar Otro Archivo' rel='tooltip' data-placement='top'/>").append(
                            $("<i class='icon-plus icon-white'/>")
                        )
                    );
                } else {
                    buttons.append(
                        deletePhotos.createRemoveButton()
                    );
                }
                newRow.append(buttons);
                deletePhotos.bindRow(newRow);
                deletePhotos.rowCounter++;
                return newRow;
            },

            removeRow: function (row) {
                row.remove();
                if (deletePhotos.rowCounter == 1) {
                    $("#" + deletePhotos.containerID + " .deletePhotosContainer").append(deletePhotos.createNewRow());
                } else if (deletePhotos.rowCounter >= 2) {
                    var lastRow = $("#" + deletePhotos.containerID + " .deletePhotosRow:last");
                    if (lastRow.find("input[type=file]").val().trim() == "") {
                        lastRow.find(".buttons .removeField").remove();
                    }
                    if (lastRow.find(".buttons .addFile").length == 0) {
                        lastRow.find(".buttons").append(
                            $("<button class='btn btn dark_green fileinput-button addFile' data-original-title='Agregar Otro Archivo' rel='tooltip' data-placement='top'/>").append(
                                $("<i class='icon-plus icon-white'/>")
                            )
                        )
                    }
                    deletePhotos.bindRow(lastRow);
                }
                deletePhotos.rowCounter--;
            },

            onRemovePhoto: function (row) {
                var uploadedFile = row.find("input").data("uploadedfile");
                if (uploadedFile != undefined) {
                    $.ajax({
                        url: "/ObjectAdmin/Demand/deleteObjectFile",
                        type: "POST",
                        data: { name: uploadedFile },
                        beforeSend: _loading,
                        success: function (data) {
                            deletePhotos.removeRow(row);
                            _loading();
                        },
                        errorThrown: function () {
                            _loading();
                            _alert("_error", "Ha ocurrido un error");
                        }
                    });
                } else {
                    deletePhotos.removeRow(row);
                }
            },

            createRemoveButton: function () {
                var button = $("<button class='btn btn red fileinput-button removeFile' data-original-title='Eliminar Archivo' rel='tooltip' data-placement='top'/>").append(
                    $("<i class='icon-minus icon-white'/>")
                );
                return button;
            },

            bindRow: function (row) {
                row = $(row);
                row.find("div.buttons button.addFile").unbind("click.addPhoto");
                row.find("div.buttons button.addFile").bind("click.addPhoto", function () {
                    $(this).remove();
                    if (row.find("div.buttons .removeFile").length == 0) {
                        row.find("div.buttons").append(
                            deletePhotos.createRemoveButton()
                        );
                    }
                    $(".deletePhotosContainer").append(
                        deletePhotos.createNewRow()
                    )
                    deletePhotos.bindRow(row);
                });
                row.find("div.buttons button.removeFile").unbind("click.removeFile");
                row.find("div.buttons button.removeFile").bind("click.removeFile", function () {
                    deletePhotos.onRemovePhoto(row);
                });
                row.find("div.filePicker button").unbind("click.addFile");
                row.find("div.filePicker button").bind("click.addFile", function () {
                    row.find(".inputs input[type=file]").click();
                });

                row.find(".inputs input").unbind("change.save");
                row.find(".inputs input").bind("change.save", function () {
                    var element = this;
                    if ($(element).val().length > 3) {
                        var uploaded = false;
                        var formData = new FormData();
                        formData.append("file", $(this)[0].files[0]);
                        formData.append("id", deletePhotos.selectedID);
                        $.ajax({
                            url: "/ObjectAdmin/Demand/saveObjectFile",
                            type: "POST",
                            data: formData,
                            beforeSend: _loading,
                            contentType: false,
                            processData: false,
                            success: function (data) {
                                $(element).attr("data-uploadedfile", data);
                                var container = $(element).closest(".deletePhotosRow").find(".filePicker").empty();
                                container.append(
                                    jQuery("<img class='preview zoom'/>")
                                );
                                deletePhotos.readURL(element, container.find("img:first"));
                                _loading();
                            },
                            errorThrown: function () {
                                _loading();
                                _alert("error", "Ha ocurrido un error al intentar subir la foto.");
                            }
                        });
                    }
                });
            },

            bindAll: function () {
                $("#addDemandButton").unbind("click.photos");
                $("#addDemandButton").bind("click.photos", function () {
                    deletePhotos.start();
                });
            }
        };

        deletePhotos.init();

        //********************************
        receiptFiles = {
            photos: Array(),
            created: false,
            selectedID: null,
            containerID: "more_files",
            rowCounter: 0,
            maxFiles: 3,
            currentUps: 0,

            readURL: function (input, previewElement) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        previewElement.attr('src', e.target.result);
                        previewElement.data('zoom-images', e.target.result);
                        jQuery(".zoomContainer").remove();
                        bindzoom(10)
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            },

            start: function () {
                receiptFiles.photos = Array();
                receiptFiles.created = false;
                receiptFiles.selectedID = null;
                receiptFiles.rowCounter = 0;
                $("#more_delete").empty();
            },

            init: function () {
                receiptFiles.bindAll();
            },

            draw: function () {
                receiptFiles.rowCounter = 0;
                receiptFiles.createContainer();
                receiptFiles.created = true;
            },

            getRowPhotos: function () {
                if (receiptFiles.selectedID != null) { //save the last row set, just in case it's not set yet
                    receiptFiles.photos[receiptFiles.selectedID] = $("#" + receiptFiles.containerID + " .receiptFilesContainer:first").html();
                }
                // var element = receiptFiles.photos[id];
                var inputs = $("#more_files").find("input");
                var photos = Array();
                inputs.each(function () {
                    var file = $(this).data("name");
                    if (typeof file != "undefined" && file != undefined && file != "") {
                        photos.push($(this).data("name"));
                    }
                });
                return photos;
            },

            bindPhotosSelectorsToRowView: function (receiptf) {

                var images = receiptf;//$(this).data("images").split(",");
                var container = $("<div class='receiptFilesContainer'/>");
                $("#" + receiptFiles.containerID).empty();
                $("#" + receiptFiles.containerID).append(
                    $("<h4/>").text("Documentos:")
                ).append(
                    container
                );
                for (var i = 0; i < images.length; i++) {
                    if (images[i] != "") {
                        container.append(
                            $("<div class='receiptFilesRow'/>").append(
                                $("<div class='filePicker'/>").append(
                                  $("<img class='preview zoom' data-zoom-images='/Uploads/Dictamenes/imagenes/" + images[i] + "'/>").attr("src", "/Uploads/Dictamenes/imagenes/" + images[i])
                             )
                            )
                        );
                    }
                }
            },

            bindPhotosSelectorsToRow: function (row) {
                $(row).unbind("click.openfiles");
                $(row).bind("click.openfiles", function () {
                    var id = $(row).data("id");
                    receiptFiles.openRow(id);
                });
            },

            createContainer: function () {
                $("#" + receiptFiles.containerID).empty();
                $("#" + receiptFiles.containerID).append(
                    $("<h4/>").text("Imagenes:")
                ).append(
                    $("<div class='receiptFilesContainer'/>").append(
                        receiptFiles.createNewRow()
                    )
                );
                receiptFiles.bindAll();
            },

            openRow: function (id) {
                if (receiptFiles.selectedID != null) {
                    receiptFiles.photos[receiptFiles.selectedID] = $("#" + receiptFiles.containerID + " .receiptFilesContainer:first").html();
                }
                receiptFiles.selectedID = id;
                if (typeof receiptFiles.photos[receiptFiles.selectedID] == "undefined") {
                    receiptFiles.draw();
                } else {
                    $("#" + receiptFiles.containerID + " .receiptFilesContainer:first").html(receiptFiles.photos[receiptFiles.selectedID]);
                    receiptFiles.rowCounter = $("#" + receiptFiles.containerID).find(".receiptFilesRow").length;
                    receiptFiles.created = true;
                    $("#" + receiptFiles.containerID + " .receiptFilesContainer .receiptFilesRow").each(function () {
                        receiptFiles.bindRow(this);
                    });
                }
            },

            closeRow: function (id) {
                receiptFiles.selectedID = null;
            },

            createNewRow: function () {
                var newRow = $("<div/>").addClass("receiptFilesRow");
                newRow.append(
                    $("<div class='inputs hide'/>").append(
                        $("<input type='file'/ class='photo'>")
                    )
                );
                newRow.append(
                    $("<div class='filePicker'/>").append(
                        $("<button class='btn red'/>").append(
                            $("<i class='icon-file'>")
                        ).text("Seleccionar Archivo")
                    )
                );

                var buttons = $("<div class='buttons'>");
                if (receiptFiles.rowCounter < receiptFiles.maxFiles - 1) {
                    buttons.append(
                        $("<button class='btn btn dark_green fileinput-button addFile' data-original-title='Agregar Otro Archivo' rel='tooltip' data-placement='top'/>").append(
                            $("<i class='icon-plus icon-white'/>")
                        )
                    );
                } else {
                    buttons.append(
                        receiptFiles.createRemoveButton()
                    );
                }
                newRow.append(buttons);
                receiptFiles.bindRow(newRow);
                receiptFiles.rowCounter++;
                return newRow;
            },

            removeRow: function (row) {
                row.remove();
                if (receiptFiles.rowCounter == 1) {
                    $("#" + receiptFiles.containerID + " .receiptFilesContainer").append(receiptFiles.createNewRow());
                } else if (receiptFiles.rowCounter >= 2) {
                    var lastRow = $("#" + receiptFiles.containerID + " .receiptFilesRow:last");
                    if (lastRow.find("input[type=file]").val().trim() == "") {
                        lastRow.find(".buttons .removeField").remove();
                    }
                    if (lastRow.find(".buttons .addFile").length == 0) {
                        lastRow.find(".buttons").append(
                            $("<button class='btn btn dark_green fileinput-button addFile' data-original-title='Agregar Otro Archivo' rel='tooltip' data-placement='top'/>").append(
                                $("<i class='icon-plus icon-white'/>")
                            )
                        )
                    }
                    receiptFiles.bindRow(lastRow);
                }
                receiptFiles.rowCounter--;
            },

            onRemovePhoto: function (row) {
                var uploadedFile = row.find("input").data("uploadedfile");
                //if (uploadedFile != undefined) {
                //    $.ajax({
                //        url: "/ObjectAdmin/Demand/deleteObjectFile",
                //        type: "POST",
                //        data: { name: uploadedFile },
                //        beforeSend: _loading,
                //        success: function (data) {
                //            deletePhotos.removeRow(row);
                //            _loading();
                //        },
                //        errorThrown: function () {
                //            _loading();
                //            _alert("_error", "Ha ocurrido un error");
                //        }
                //    });
                //} else {
                receiptFiles.removeRow(row);
                // }
            },

            createRemoveButton: function () {
                var button = $("<button class='btn btn red fileinput-button removeFile' data-original-title='Eliminar Archivo' rel='tooltip' data-placement='top'/>").append(
                    $("<i class='icon-minus icon-white'/>")
                );
                return button;
            },

            bindRow: function (row) {
                row = $(row);
                row.find("div.buttons button.addFile").unbind("click.addfile");
                row.find("div.buttons button.addFile").bind("click.addfile", function () {
                    $(this).remove();
                    if (row.find("div.buttons .removeFile").length == 0) {
                        row.find("div.buttons").append(
                            receiptFiles.createRemoveButton()
                        );
                    }
                    $(".receiptFilesContainer").append(
                        receiptFiles.createNewRow()
                    )
                    receiptFiles.bindRow(row);
                });
                row.find("div.buttons button.removeFile").unbind("click.removeFile");
                row.find("div.buttons button.removeFile").bind("click.removeFile", function () {
                    receiptFiles.onRemovePhoto(row);
                });
                row.find("div.filePicker button").unbind("click.addFile");
                row.find("div.filePicker button").bind("click.addFile", function () {
                    row.find(".inputs input[type=file]").click();
                });

                //row.find(".inputs input").unbind("change.save");
                //row.find(".inputs input").bind("change.save", function () {
                //    var element = this;
                //    if ($(element).val().length > 3) {
                //        var uploaded = false;
                //        var formData = new FormData();
                //        formData.append("file", $(this)[0].files[0]);
                //        formData.append("id", deletePhotos.selectedID);
                //        $.ajax({
                //            url: "/ObjectAdmin/Demand/saveObjectFile",
                //            type: "POST",
                //            data: formData,
                //            beforeSend: _loading,
                //            contentType: false,
                //            processData: false,
                //            success: function (data) {
                //                $(element).attr("data-uploadedfile", data);
                //                var container = $(element).closest(".deletePhotosRow").find(".filePicker").empty();
                //                container.append(
                //                    jQuery("<img class='preview'/>")
                //                );
                //                deletePhotos.readURL(element, container.find("img:first"));
                //                _loading();
                //            },
                //            errorThrown: function () {
                //                _loading();
                //                _alert("error", "Ha ocurrido un error al intentar subir la foto.");
                //            }
                //        });
                //    }
                //});
            },

            bindAll: function () {
                //$("#addDemandButton").unbind("click.photos");
                //$("#addDemandButton").bind("click.photos", function () {
                //    receiptFiles.start();
                //});
            }
        };

        receiptFiles.init();
        //Object to control the Order Table
        OrderTable = {

            table: $("#orderTableSection #orderTable tbody"),

            //More Fields function
            moreFields: {
                idObject: null,
                reference: null,
                form: $(".more_fields #more_create"),
                form_img: $(".more_fields #more_delete"),
                form_notes: $(".more_fields #more_notes"),

                //Setting values to the form
                setValues: function (allFields) {
                    //Trying to set all fields
                    try {
                        this.form.find("tr[data-id=conjunto] select").val(allFields.conjunto);
                        LoadSubLocations(allFields.conjunto);
                        this.form.find("tr[data-id=ubicacion] select").val(allFields.location);
                        this.form.find("tr[data-id=departamento] select").val(allFields.department);
                        this.form.find("tr[data-id=serie] input").val(allFields.serie);
                        this.form.find("tr[data-id=price] input").val(allFields.price);
                        this.form.find("tr[data-id=date] input").val(allFields.date);
                        this.form.find("tr[data-id=label] select").val(allFields.label);

                        //Denied notes
                        this.form_notes.find("textarea").val(allFields.denied_note);
                        this.form_notes.find("[name=denied_user]").val(allFields.denied_user);
                    }
                    catch (Exception) { }

                },

                disableForm: function (disable) {
                    this.form.find("input, textarea, select").prop("disabled", disable);
                },

                setValuesDelete: function (allFields) {
                    //Trying to set all fields
                    try {
                        $("#DivtipoObs select").select2("val", allFields.typeObs);
                        //  jQuery("#selectObs").find("option:selected").val(allFields.typeObs);
                    }
                    catch (Exception) { }
                },

                //Set values to the selected object
                saveValues: function () {
                    var allFields = {
                        conjunto: this.form.find("tr[data-id=conjunto] select").val(),
                        location: this.form.find("tr[data-id=ubicacion] select").val(),
                        locationText: jQuery("#ubicacionSelect").find("option:selected").text(),
                        department: this.form.find("tr[data-id=departamento] select").val(),
                        departmentText: jQuery("#departamentoSelect").find("option:selected").text(),
                        serie: this.form.find("tr[data-id=serie] input").val().trim(),
                        price: this.form.find("tr[data-id=price] input").val().trim(),
                        date: this.form.find("tr[data-id=date] input").val().trim(),
                        label: this.form.find("tr[data-id=label] select").val()
                    }

                    var setRow = $("#orderTable tbody tr.selected");

                    if (setRow.length == 0) {
                        _alert("error", "No hay elementos seleccionados");
                        return false;
                    }

                    //if (allFields.serie == "") {
                    //    _alert("error", "Campo de serie es requerido");
                    //    return false;
                    //}
                    //if (allFields.price == "") {
                    //    _alert("error", "Campo de precio de compra es requerido");
                    //    return false;
                    //}
                    //if (allFields.date == "") {
                    //    _alert("error", "Campo de fecha de compra es requerido");
                    //    return false;
                    //}
                    if (allFields.label == null) {
                        _alert("error", "Campo de tipo de etiquetado es requerido");
                        return false;
                    }
                    if (allFields.conjunto == null) {
                        _alert("error", "Campo de Conjunto es requerido");
                        return false;
                    }
                    if (allFields.location == null) {
                        _alert("error", "Campo de Ubicación es requerido");
                        return false;
                    }
                    if (allFields.department == null) {
                        _alert("error", "Campo de Departamento es requerido");
                        return false;
                    }
                    var flag = 0;
                    if (allFields.serie != "") {
                        var allRows = jQuery("#orderTable").find(".serie");
                        // if (allRows.length > 0) { }
                        allRows.each(function () {
                            if (jQuery(this).val() == allFields.serie) {
                                flag = 1;
                            }
                        });

                    }

                    if (setRow.length > 1) {
                        var cadena = "";
                        if (allFields.serie != "") {
                            //_alert("error", "No puede repetir numero de serie");
                            //return false;
                            if (flag == 1) {
                                cadena = "El número de serie introducido ya está asignado, desea  asignarlo  a los " + setRow.length + " objetos seleccionados?";
                            } else {
                                cadena = "Desea asignar el mismo número de serie a los " + setRow.length + " objetos seleccionados?";
                            }

                        } else {
                            cadena = "Desea asignar los datos a los " + setRow.length + " objetos seleccionados?";

                        }

                        _confirm({
                            title: "Asignar datos",
                            message: cadena,
                            action: function () {
                                setRow.find(".location").data("id", allFields.location);
                                setRow.find(".location").data("conjunto", allFields.conjunto);
                                setRow.find(".location").text(allFields.locationText);
                                setRow.find(".depart").data("depart", allFields.department);
                                setRow.find(".depart").text(allFields.departmentText);
                                setRow.find(".serie").val(allFields.serie);
                                setRow.find(".price").val(allFields.price);
                                setRow.find(".date").val(allFields.date);
                                setRow.find(".label").val(allFields.label);
                                _alert("success", "Datos asignados");
                            }
                        });

                    }
                    else {
                        if (flag == 1) {
                            //_alert("error", "No puede repetir numero de serie");
                            //return false;
                            _confirm({
                                title: "Asignar datos",
                                message: "El número de serie introducido ya está asignado, desea  asignarlo  al objeto seleccionado?",
                                action: function () {
                                    setRow.find(".location").data("id", allFields.location);
                                    setRow.find(".location").data("conjunto", allFields.conjunto);
                                    setRow.find(".location").text(allFields.locationText);
                                    setRow.find(".depart").data("depart", allFields.department);
                                    setRow.find(".depart").text(allFields.departmentText);
                                    setRow.find(".serie").val(allFields.serie);
                                    setRow.find(".price").val(allFields.price);
                                    setRow.find(".date").val(allFields.date);
                                    setRow.find(".label").val(allFields.label);
                                    _alert("success", "Datos asignados");
                                }
                            });

                        } else {
                            setRow.find(".location").data("id", allFields.location);
                            setRow.find(".location").data("conjunto", allFields.conjunto);
                            setRow.find(".location").text(allFields.locationText);
                            setRow.find(".depart").data("depart", allFields.department);
                            setRow.find(".depart").text(allFields.departmentText);
                            setRow.find(".serie").val(allFields.serie);
                            setRow.find(".price").val(allFields.price);
                            setRow.find(".date").val(allFields.date);
                            setRow.find(".label").val(allFields.label);
                            _alert("success", "Datos asignados");
                        }

                    }
                },

                saveDeniedNote: function () {
                    var deniedRows = $("#orderTable tbody tr.red");
                    var note = this.form_notes.find("[name=denied_notes]").val().trim();
                    if (note == "")
                        _alert("error", "Indique el motivo de rechazo");
                    else {
                        this.reference.find(".denied_notes textarea").val(note);
                        _alert("success", "Motivo guardado");
                    }
                },

                saveValuesDelete: function () {
                    var allselect = Array();
                    var fieldsObj = jQuery("#DivtipoObs select").select2("data");
                    for (i = 0; i < fieldsObj.length; i++) {
                        allselect.push(fieldsObj[i].id);
                    }
                    var allFields = {
                        typeObs: allselect
                    }
                    var setRow = OrderTable.table.find("tr[data-id=" + this.idObject + "]");
                    setRow.attr("typeObs", allFields.typeObs.toString());
                    var demand = Movements.idMovement;

                    $.ajax({
                        url: "/ObjectAdmin/Demand/updateObjectsAdjudicated",
                        method: "POST",
                        data: { iddemand: demand, idObject: this.idObject, tipoObs: allFields.typeObs.toString() },
                        success: function (data) {
                            _alert("success", "Tipo de Obsolescencia guardado");
                        }
                    });
                }
            },

            setCheckAllTitle: function (title) {
                if (title == undefined)
                    title = "";
                $("#check_all_text").text(title);
            },

            //Mark rows has denied
            setToDenied: function (rows) {
                //select all denied objects
                rows.each(function () {
                    this.addClass("red");
                });
            },

            getSelectedObjects: function () {
                var objects = {
                    accepted: [],
                    denied: []
                };
                var tempAccepted = [],
                    tempDenied = [];
                //Accepted
                var rows = this.table.find("input[type=checkbox]:checked").each(function () {
                    tempAccepted.push($(this).closest("tr"));
                });
                objects.accepted = $(tempAccepted);
                //Denied
                var rows = this.table.find("input[type=checkbox]:not(:checked)").each(function () {
                    if (!$(this).closest("tr").hasClass("denied"))
                        tempDenied.push($(this).closest("tr"));
                });
                objects.denied = $(tempDenied);

                return objects;
            },

            //Get all objects in the order table
            getObjects: function () {
                var objects = [];
                var rows = this.table.find("tr");
                var orderNumber = 1;
                if (Movements.type == "create") {
                    rows.each(function () {
                        var element = {
                            id: $(this).data("id"),
                            orderNumber: orderNumber,
                            objectReference: $(this).data("id"),
                            serie: $(this).find(".serie").val(),
                            price: $(this).find(".price").val(),
                            date: $(this).find(".date").val(),
                            label: $(this).find(".label").val(),
                            quantity: 1,
                            location: $(this).find(".location").data("id"),
                            locationText: $(this).find(".location").text(),
                            conjunto: $(this).find(".location").data("conjunto"),
                            department: $(this).find(".depart").data("depart"),
                            departmentText: $(this).find(".depart").val()
                        }
                        objects.push(element);
                        orderNumber++;
                    });
                }
                else if (Movements.type == "movement") {
                    rows.each(function () {
                        var element = {
                            id: $(this).data("id"),
                            orderNumber: orderNumber,
                            objectReference: $(this).data("reference"),
                            location: $(this).find(".location").data("id"),
                            locationDestiny: $(this).find(".location_destiny").data("id"),
                        }
                        objects.push(element);
                        orderNumber++;
                    });
                }
                else if (Movements.type == "delete") {
                    rows.each(function () {
                        var element = {
                            id: $(this).data("id"),
                            orderNumber: orderNumber,
                            objectReference: $(this).data("reference"),
                            location: $(this).find(".location").data("id"),
                            marca: $(this).find(".marca").text(),
                            modelo: $(this).find(".modelo").text(),
                            images: deletePhotos.getRowPhotos($(this).data("id")),
                            typeObs: ($(this).attr("typeObs")).split(",")
                        }

                        objects.push(element);
                        orderNumber++;
                    });
                }
                return objects;
            },

            removeAllRows: function () {
                var rows = this.table.find("tr");
                rows.each(function () {
                    OrderTable.removeRow(this);
                });
            },

            //Add a new row
            addRow: function (item, extra, type, isNew) {
                var itemMarca = "";
                var itemModelo = "";

                //trying to get Marca field
                try {
                    if (typeof (item.profileFields) == "object") {
                        if (item.profileFields["_HTKFieldmarca"] != undefined)
                            itemMarca = item.profileFields["_HTKFieldmarca"];

                        if (item.profileFields["_HTKFieldmodelo"] != undefined)
                            itemModelo = item.profileFields["_HTKFieldmodelo"];
                    }
                }
                catch (Exception) { }

                if (type == "create") {
                    item.conjunto = (item.conjunto != undefined) ? item.conjunto : "";
                    item.location = (item.location != undefined) ? item.location : "";
                    item.locationText = (item.locationText != undefined) ? item.locationText : "";
                    item.department = (item.department != undefined) ? item.department : "";
                    item.departmentText = (item.departmentText != undefined) ? item.departmentText : "";
                    item.price = (item.price != undefined) ? item.price : "";
                    item.serie = (item.serie != undefined) ? item.serie : "";
                    item.date = (item.date != undefined) ? item.date : "";
                    item.label = (item.label != undefined) ? item.label : "";
                    item.denied_note = (item.denied_note != undefined && item.denied_note != "") ? item.denied_note : "";
                    item.denied_user = (item.denied_user != undefined && item.denied_note != "") ? item.denied_user.name : "";

                    var classDenied = "";
                    if (item.denied_user != "")
                        classDenied = "denied";

                    this.table.append(
                        $("<tr>", { "data-id": item["_id"], "class": classDenied }).append(
                            $("<td class='check_field'>").html("<input type='checkbox' />")
                        ).append(
                            $("<td>").append(
                                $("<div class=thumb_tile>").css("background-image", "url(" + item.image + ")")
                            )
                        ).append(
                            $("<td>").html(item.name)
                        ).append(//Marca
                            $("<td>").html(itemMarca)
                        ).append(//Modelo
                            $("<td>").html(itemModelo)
                        ).append(
                            $("<td class='price_field hide'>").html("<input class='price' type='text' value='" + item.price + "' />")
                        ).append(
                            $("<td class='serie_field hide'>").html("<input class='serie' type='text' value='" + item.serie + "' />")
                        ).append(
                            $("<td class='date_field hide'>").html("<input class='date' type='text' value='" + item.date + "' />")
                        ).append(
                            $("<td class='label_field hide'>").html("<input class='label' type='text' value='" + item.label + "' />")
                        ).append(
                            $("<td class='denied_notes hide'>").html("<textarea>" + item.denied_note + "</textarea>")
                        ).append(
                            $("<td class='denied_user hide'>").html("<input value='" + item.denied_user + "'>")
                        ).append(
                            $("<td class='hide'>").html("<input type='text' class='orderNumber' value='" + item.orderNumber + "'>")
                        ).append(
                            $("<td>").html("<span class='location' data-id='" + item.location + "'  data-conjunto='" + item.conjunto + "' >" + item.locationText)
                        ).append(
                            $("<td class='depart_field hide'>").html("<span class='depart' data-depart='" + item.department + "'>" + item.departmentText)
                        ).append(
                            $("<td class='asset_type_field hide'>").html("<select disabled><option></option><option value='system'>Sistemas</option><option value='manteinance'>Mantenimiento</option><option value='sound'>Proyección y Sonido</option></select")
                        )
                    );
                    //Add the assetType value
                    if (item.assetType != undefined && item.assetType != "")
                        this.table.find("tr").last().find(".asset_type_field select").val(item.assetType);


                    //Add show more details event
                    this.table.find("tr").last().click(function () {
                        OrderTable.moreFields.idObject = $(this).data("id");
                        OrderTable.moreFields.reference = $(this);

                        var allFields = {};
                        allFields.location = $(this).find(".location").data("id");
                        allFields.locationText = $(this).find(".location").text();
                        allFields.conjunto = $(this).find(".location").data("conjunto");
                        allFields.department = $(this).find(".depart").data("depart");
                        allFields.departmentText = $(this).find(".depart").val();
                        allFields.serie = $(this).find(".serie").val();
                        allFields.price = $(this).find(".price").val();
                        allFields.date = $(this).find(".date").val();
                        allFields.label = $(this).find(".label").val();
                        allFields.denied_note = $(this).find(".denied_notes textarea").val();
                        allFields.denied_user = $(this).find(".denied_user input").val();

                        OrderTable.moreFields.setValues(allFields);

                        //Add class selected
                        $(this).addClass("selected");
                        //Remove class selected
                        $(this).siblings().find("input[type=checkbox]:not(:checked)").closest("tr").removeClass("selected");

                        if ($(this).hasClass("red") || $(this).hasClass("denied")) {
                            OrderTable.moreFields.form_notes.show();
                            if (item.denied_user != "") {
                                OrderTable.moreFields.form_notes.find("#deny_notes_button").hide();
                                OrderTable.moreFields.form_notes.find(".denied_user").show();
                                OrderTable.moreFields.form_notes.find("textarea").prop("disabled", true);
                            }
                            else {
                                OrderTable.moreFields.form_notes.find("#deny_notes_button").show()
                                OrderTable.moreFields.form_notes.find(".denied_user").hide();
                                OrderTable.moreFields.form_notes.find("textarea").prop("disabled", false);
                            }
                        }
                        else
                            OrderTable.moreFields.form_notes.hide();

                    }).trigger("click");
                }
                else if (type == "movement") {
                    item.denied_note = (item.denied_note != undefined) ? item.denied_note : "";
                    item.denied_user = (item.denied_user != undefined) ? item.denied_user.name : "";

                    var classDenied = "";
                    if (item.denied_user != "")
                        classDenied = "denied";

                    this.table.append(
                        $("<tr>", { "data-id": item["_id"], "class": classDenied, "data-reference": item["objectReference"] }).append(
                            $("<td class='check_field'>").html("<input type='checkbox' />")
                        ).append(
                            $("<td>").append(
                                $("<div class=thumb_tile>").css("background-image", "url(" + item.image + ")")
                            )
                        ).append(
                            $("<td class='name'>").html(item.name)
                        ).append(
                            $("<td>").html(itemMarca)
                        ).append(
                            $("<td>").html(itemModelo)
                        ).append(
                            $("<td class='epc_field'>").html(item.EPC)
                        ).append(
                            $("<td>").html("<span class='location' data-id='" + extra.location + "'>" + extra.locationText)
                        ).append(
                            $("<td class='denied_notes hide'>").html("<textarea>" + item.denied_note + "</textarea>")
                        ).append(
                            $("<td class='location_destiny_field'>").html("<span class='location_destiny' data-id='" + extra.locationDestiny + "'>" + extra.locationDestinyText + "</span><select class='location_destiny_vb'></select>")
                        ).append(
                            $("<td class='hide'>").html("<input type='text' class='orderNumber' value='" + item.orderNumber + "'>")
                        ).append(
                            $("<td class='denied_user hide'>").html("<input value='" + item.denied_user + "'>")
                        )
                    );

                    LoadLocationsAlls2(item["_id"]);
                    console.log(extra.locationDestiny);
                    this.table.find("tr[data-id=" + item["_id"] + "]").find(".location_destiny_vb").val(extra.locationDestiny);

                    //Add show more details event
                    this.table.find("tr").last().click(function () {
                        OrderTable.moreFields.idObject = $(this).data("id");
                        OrderTable.moreFields.reference = $(this);

                        var allFields = {};
                        allFields.denied_note = $(this).find(".denied_notes textarea").val();
                        allFields.denied_user = $(this).find(".denied_user input").val();
                        OrderTable.moreFields.setValues(allFields);

                        //Add class selected
                        $(this).addClass("selected");
                        //Remove class selected
                        $(this).siblings().find("input[type=checkbox]:not(:checked)").closest("tr").removeClass("selected");

                        if ($(this).hasClass("red") || $(this).hasClass("denied")) {
                            Movements.showMoreFields(true);
                            OrderTable.moreFields.form.hide();
                            OrderTable.moreFields.form_notes.show();
                            if (item.denied_user != "") {
                                OrderTable.moreFields.form_notes.find("#deny_notes_button").hide();
                                OrderTable.moreFields.form_notes.find(".denied_user").show();
                                OrderTable.moreFields.form_notes.find("textarea").prop("disabled", true);
                            }
                            else {
                                OrderTable.moreFields.form_notes.find("#deny_notes_button").show()
                                OrderTable.moreFields.form_notes.find(".denied_user").hide();
                                OrderTable.moreFields.form_notes.find("textarea").prop("disabled", false);
                            }
                        }
                        else {
                            Movements.showMoreFields(false);
                            OrderTable.moreFields.form_notes.hide();
                        }

                    }).trigger("click");
                }
                else if (type == "delete") {
                    item.denied_note = (item.denied_note != undefined) ? item.denied_note : "";
                    item.denied_user = (item.denied_user != undefined) ? item.denied_user.name : "";

                    var classDenied = "";
                    if (item.denied_user != "")
                        classDenied = "denied";

                    var tObs = "";
                    if (item["typeObs"] != undefined) { tObs = item["typeObs"].toString(); }

                    var newRow = $("<tr>", { "data-id": item["_id"], "data-reference": item["objectReference"], "typeObs": tObs }).append(
                            $("<td class='check_field'>").html("<input type='checkbox' />")
                        ).append(
                            $("<td>").append(
                                $("<div class=thumb_tile>").css("background-image", "url(" + item.image + ")")
                            )
                        ).append(
                            $("<td class='name'>").html(item.name)
                        ).append(
                            $("<td>").html(itemMarca)
                        ).append(
                            $("<td>").html(itemModelo)
                        ).append(
                            $("<td class='epc_field'>").html(item.EPC)
                        ).append(
                            $("<td class='denied_notes hide'>").html("<textarea>" + item.denied_note + "</textarea>")
                        ).append(
                            $("<td class='hide'>").html("<input type='text' class='orderNumber' value='" + item.orderNumber + "'>")
                        ).append(
                            $("<td class='denied_user hide'>").html("<input value='" + item.denied_user + "'>")
                        ).append(
                            $("<td>").html("<span class='location' data-id='" + extra.location + "'>" + extra.locationText)
                        ).attr("data-images", item.images)
                        .append(
                            $("<td class='value_books_field hide'>").html("<input class='value_books' type='text' value='' />")
                        );


                    OrderTable.bindSelectTypeObs(newRow);
                    if (isNew == true) {
                        //jQuery("#selectObs").find("option:selected").val("undefined");
                        var alls = Array();
                        jQuery("#DivtipoObs option").each(function () { alls.push(jQuery(this).val()) });
                        $("#DivtipoObs select").select2("val", alls);
                        deletePhotos.bindPhotosSelectorsToRow(newRow);
                    } else {
                        $("#DivtipoObs select").select2("val", item.typeObs);
                        //jQuery("#selectObs").find("option[value = " + item.typeObs + "]").attr("selected", "selected");
                        deletePhotos.bindPhotosSelectorsToRowView(newRow);

                    }
                    this.table.append(
                        newRow
                    );

                    if (item.value_book != undefined && item.value_book != "")
                        this.table.find("tr").last().find(".value_books_field input").val(item.value_book);

                    //Add show more details event
                    this.table.find("tr").last().click(function () {
                        OrderTable.moreFields.idObject = $(this).data("id");
                        OrderTable.moreFields.reference = $(this);

                        var allFields = {};
                        allFields.denied_note = $(this).find(".denied_notes textarea").val();
                        allFields.denied_user = $(this).find(".denied_user input").val();
                        OrderTable.moreFields.setValues(allFields);

                        //Add class selected
                        $(this).addClass("selected");
                        //Remove class selected
                        $(this).siblings().removeClass("selected");

                        if ($(this).hasClass("red") || $(this).hasClass("denied")) {
                            OrderTable.moreFields.form_notes.show();
                            if (item.denied_user != "") {
                                OrderTable.moreFields.form_notes.find("#deny_notes_button").hide();
                                OrderTable.moreFields.form_notes.find(".denied_user").show();
                                OrderTable.moreFields.form_notes.find("textarea").prop("disabled", true);
                            }
                            else {
                                OrderTable.moreFields.form_notes.find("#deny_notes_button").show()
                                OrderTable.moreFields.form_notes.find(".denied_user").hide();
                                OrderTable.moreFields.form_notes.find("textarea").prop("disabled", false);
                            }
                        }
                        else {
                            OrderTable.moreFields.form_notes.hide();
                        }

                    }).trigger("click");
                }

                //Disable checkbox
                if (item.denied_user != "") {
                    this.table.find("tr").last().find("[type=checkbox]").prop("disabled", true);
                    this.table.find("tr").last().addClass("red");
                }

                //Add delete row
                if (isNew == true) {
                    this.table.find("tr").last().append(
                        $("<td>").append(
                            $("<a>", {
                                "class": "btn",
                                "href": "#"
                            }).html("<i class='icon-trash''>").on("click", function () {
                                var row = $(this).closest("tr");
                                _confirm({
                                    title: "Eliminar registro",
                                    message: "Desea eliminar este registro?",
                                    action: function () {
                                        OrderTable.removeRow(row);
                                    }
                                })

                            })
                        )
                    );
                }
                else {
                    var addTr = this.table.find("tr").last();
                    addTr.append(
                       $("<td>")
                    );
                    addTr.find(".price").val(item.price).prop("disabled", true);
                    addTr.find(".serie").val(item.serie).prop("disabled", true);

                }

                this.updateCounter();
            },

            //Show the table headers in the array
            // param headers["idHeader"]
            showHeaders: function (headers) {
                for (var h in headers) {
                    $("#orderTableSection").find("." + headers[h] + "_field").show();
                }
            },

            //Hide the table headers in the array
            // param headers["idHeader"]
            hideHeaders: function (headers) {
                //    debugger;
                for (var h in headers) {
                    $("#orderTableSection").find("." + headers[h] + "_field").hide();
                }
            },

            removeRow: function (row) {
                row.remove();
                this.updateCounter();
            },

            count: function () {
                var counter = this.table.find("tr").length;
                return counter
            },

            //Updates the badge counter
            updateCounter: function () {
                var count = this.table.find("tr").length
                if (count > 0)
                    $("a[href=#orderTableSection] span").html(count);
                else
                    $("a[href=#orderTableSection] span").html("");
            },

            bindSelectTypeObs: function (row) {
                $(row).unbind("click.selectTypeObs");
                $(row).bind("click.selectTypeObs", function () {
                    var tipo = $(this).attr("typeObs");
                    //jQuery("#selectObs option[value = " + tipo + "]").attr("selected", "selected");
                    $("#DivtipoObs select").select2("val", tipo.split(","));

                });
            },


            //Initializes all events on the table
            init: function () {
                //Create the assign event
                OrderTable.moreFields.form.find("#assign").click(function () {
                    OrderTable.moreFields.saveValues();
                });
                OrderTable.moreFields.form_notes.find("#deny_notes_button").click(function () {
                    OrderTable.moreFields.saveDeniedNote();
                });

                $("#check_all").unbind("click.checkall");
                $("#check_all").bind("click.checkall", function () {
                    if ($(this).prop("checked") == true) {
                        $("tbody .check_field [type=checkbox]:not(:checked)").trigger("click");
                    }
                    else {
                        $("tbody .check_field [type=checkbox]:checked").trigger("click");
                    }
                });

                $("#assign1").click(function () {
                    OrderTable.moreFields.saveValuesDelete();
                });

                $("#VertiposObs").click(function () {
                    $("#ObsolescenciaModal").modal("show");

                });

                $("#cancel_buttonObs").click(function () {
                    $("#ObsolescenciaModal").modal("hide");

                });
            }

        }

        //Object to control the Order Table
        OrderTable2 = {

            table: $("#aditionalSection #orderTable2 tbody"),

            //More Fields function
            moreFields: {
                idObject: null,
                reference: null,
                destinyOptions: null,
                //Setting values to the form

                disableForm: function (disable) {
                    this.form.find("input, textarea, select").prop("disabled", disable);
                },

                //Set values to the selected object
                saveValues: function () {
                    switch (OrderTable2.moreFields.destinyOptions) {
                        case "venta":
                            var allFields = {
                                sold_price: this.form.find(".sold_price").val(),
                                buyer: this.form.find(".buyer").val()
                            }
                            break;
                        case "donacion":
                            var allFields = {
                                donation_benefit: this.form.find(".donation_benefit").val(),
                                rfc: this.form.find(".rfc").val()
                            }
                            break;
                        case "destruccion":
                            var allFields = {
                                type_act: this.form.find(".type_act select").val()
                            }
                            break;
                    }

                    var setRow = $("#orderTable2 tbody tr.selected");

                    //if (setRow.length == 0) {
                    //    _alert("error", "No hay elementos seleccionados");
                    //    return false;
                    //}

                    //if (allFields.conjunto == null) {
                    //    _alert("error", "Campo de Conjunto es requerido");
                    //    return false;
                    //}
                    //if (allFields.location == null) {
                    //    _alert("error", "Campo de Ubicación es requerido");
                    //    return false;
                    //}
                    //if (allFields.department == null) {
                    //    _alert("error", "Campo de Departamento es requerido");
                    //    return false;
                    //}

                }
            },

            setCheckAllTitle: function (title) {
                if (title == undefined)
                    title = "";
                $("#check_all_text").text(title);
            },

            getSelectedObjects: function () {
                var objects = {
                    accepted: [],
                    denied: []
                };
                var tempAccepted = [],
                    tempDenied = [];
                //Accepted
                var rows = this.table.find("input[type=checkbox]:checked").each(function () {
                    tempAccepted.push($(this).closest("tr"));
                });
                objects.accepted = $(tempAccepted);
                //Denied
                var rows = this.table.find("input[type=checkbox]:not(:checked)").each(function () {
                    if (!$(this).closest("tr").hasClass("denied"))
                        tempDenied.push($(this).closest("tr"));
                });
                objects.denied = $(tempDenied);

                return objects;
            },

            //Get all objects in the order table
            getObjects: function () {
                var objects = [];
                var rows = this.table.find("tr");
                var orderNumber = 1;
                rows.each(function () {
                    if (OrderTable2.moreFields.destinyOptions == "venta") {

                        var element = {
                            id: $(this).data("id"),
                            orderNumber: orderNumber,
                            sold_price: $(this).find(".sold_price").val(),
                            buyer: $(this).find(".buyer").val()
                        }
                    }
                    if (OrderTable2.moreFields.destinyOptions == "donacion") {
                        var element = {
                            id: $(this).data("id"),
                            orderNumber: orderNumber,
                            donation_benefit: $(this).find(".donation_benefit").val(),
                            rfc: $(this).find(".rfc").val()
                        }
                    }
                    if (OrderTable2.moreFields.destinyOptions == "destruccion") {
                        var element = {
                            id: $(this).data("id"),
                            orderNumber: orderNumber,
                            type_act: $(this).find(".type_act").val()
                        }
                    }
                    objects.push(element);
                    orderNumber++;
                });
                return objects;
            },

            removeAllRows: function () {
                var rows = this.table.find("tr");
                rows.each(function () {
                    OrderTable2.removeRow(this);
                });
            },

            //Add a new row
            addRow: function (item, extra, type) {
                OrderTable2.moreFields.destinyOptions = type;
                // if (type == "create") {
                item.sold_price = (item.sold_price != undefined) ? item.sold_price : "";
                item.buyer = (item.buyer != undefined) ? item.buyer : "";
                item.donation_benefit = (item.donation_benefit != undefined) ? item.donation_benefit : "";
                item.rfc = (item.rfc != undefined) ? item.rfc : "";
                item.type_act = (item.type_act != undefined) ? item.type_act : "";

                if (type == "venta") {
                    this.table.append(
                        $("<tr>", { "data-id": item["_id"] }).append(
                            $("<td class='check_field'>").html("<input type='checkbox' />")
                        ).append(
                            $("<td>").append(
                                $("<div class=thumb_tile>").css("background-image", "url(" + item.image + ")")
                            )
                        ).append(
                            $("<td>").html(item.name)
                        ).append(
                            $("<td>").html("<span class='location' data-id='" + extra.location + "'   >" + extra.locationText)
                        ).append(
                            $("<td class='sold_price_field '>").html("<input class='sold_price' type='text' value='" + item.sold_price + "' />")
                        ).append(
                            $("<td class='buyer_field '>").html("<input class='buyer' type='text' value='" + item.buyer + "' />")
                        ).append(
                            $("<td class='donation_benefit_field hide'>").html("<input class='donation_benefit' type='text' value='" + item.donation_benefit + "' />")
                        ).append(
                            $("<td class='rfc_field hide'>").html("<input class='rfc' type='text' value='" + item.rfc + "' />")
                        ).append(
                            $("<td class='type_act_field hide'>").html("<select disabled><option></option><option value='sat'>Via SAT</option><option value='notario'>Via Notario</option></select")
                        )
                    );
                } else if (type == "donacion") {
                    this.table.append(
                            $("<tr>", { "data-id": item["_id"] }).append(
                                $("<td class='check_field'>").html("<input type='checkbox' />")
                            ).append(
                                $("<td>").append(
                                    $("<div class=thumb_tile>").css("background-image", "url(" + item.image + ")")
                                )
                            ).append(
                                $("<td>").html(item.name)
                            ).append(
                                $("<td>").html("<span class='location' data-id='" + extra.location + "'   >" + extra.locationText)
                            ).append(
                                $("<td class='sold_price_field hide'>").html("<input class='sold_price' type='text' value='" + item.sold_price + "' />")
                            ).append(
                                $("<td class='buyer_field hide'>").html("<input class='buyer' type='text' value='" + item.buyer + "' />")
                            ).append(
                                $("<td class='donation_benefit_field '>").html("<input class='donation_benefit' type='text' value='" + item.donation_benefit + "' />")
                            ).append(
                                $("<td class='rfc_field '>").html("<input class='rfc' type='text' value='" + item.rfc + "' />")
                            ).append(
                                $("<td class='type_act_field hide'>").html("<select disabled><option></option><option value='sat'>Via SAT</option><option value='notario'>Via Notario</option></select")
                            )
                        );
                }
                else if (type == "destruccion") {
                    this.table.append(
                        $("<tr>", { "data-id": item["_id"] }).append(
                            $("<td class='check_field'>").html("<input type='checkbox' />")
                        ).append(
                            $("<td>").append(
                                $("<div class=thumb_tile>").css("background-image", "url(" + item.image + ")")
                            )
                        ).append(
                            $("<td>").html(item.name)
                        ).append(
                            $("<td>").html("<span class='location' data-id='" + extra.location + "'   >" + extra.locationText)
                        ).append(
                            $("<td class='sold_price_field hide'>").html("<input class='sold_price' type='text' value='" + item.sold_price + "' />")
                        ).append(
                            $("<td class='buyer_field hide'>").html("<input class='buyer' type='text' value='" + item.buyer + "' />")
                        ).append(
                            $("<td class='donation_benefit_field hide'>").html("<input class='donation_benefit' type='text' value='" + item.donation_benefit + "' />")
                        ).append(
                            $("<td class='rfc_field hide'>").html("<input class='rfc' type='text' value='" + item.rfc + "' />")
                        ).append(
                            $("<td class='type_act_field '>").html("<select disabled><option></option><option value='sat'>Via SAT</option><option value='notario'>Via Notario</option></select")
                        )
                    );
                    //Add the assetType value
                    if (item.type_act != undefined && item.type_act != "")
                        this.table.find("tr").last().find(".type_act_field select").val(item.type_act);
                }



                //}
                //else if (type == "delete") {

                //    var newRow = $("<tr>", { "data-id": item["_id"], "data-reference": item["objectReference"], "typeObs": tObs }).append(
                //            $("<td class='check_field'>").html("<input type='checkbox' />")
                //        ).append(
                //            $("<td>").append(
                //                $("<div class=thumb_tile>").css("background-image", "url(" + item.image + ")")
                //            )
                //        ).append(
                //            $("<td class='name'>").html(item.name)
                //        ).append(
                //            $("<td>").html(itemMarca)
                //        ).append(
                //            $("<td>").html(itemModelo)
                //        ).append(
                //            $("<td class='epc_field'>").html(item.EPC)
                //        ).append(
                //            $("<td class='denied_notes hide'>").html("<textarea>" + item.denied_note + "</textarea>")
                //        ).append(
                //            $("<td class='hide'>").html("<input type='text' class='orderNumber' value='" + item.orderNumber + "'>")
                //        ).append(
                //            $("<td class='denied_user hide'>").html("<input value='" + item.denied_user + "'>")
                //        ).append(
                //            $("<td>").html("<span class='location' data-id='" + extra.location + "'>" + extra.locationText)
                //        ).attr("data-images", item.images);


                //    this.table.append(
                //        newRow
                //    );

                //}

                //Disable checkbox

                this.updateCounter();
            },

            //Show the table headers in the array
            // param headers["idHeader"]
            showHeaders: function (headers) {
                for (var h in headers) {
                    $("#aditionalSection").find("." + headers[h] + "_field").show();
                }
            },

            //Hide the table headers in the array
            // param headers["idHeader"]
            hideHeaders: function (headers) {
                for (var h in headers) {
                    $("#aditionalSection").find("." + headers[h] + "_field").hide();
                }
            },

            removeRow: function (row) {
                row.remove();
                this.updateCounter();
            },

            count: function () {
                var counter = this.table.find("tr").length;
                return counter
            },

            //Updates the badge counter
            updateCounter: function () {
                var count = this.table.find("tr").length
                if (count > 0)
                    $("a[href=#aditionalSection] span").html(count);
                else
                    $("a[href=#aditionalSection] span").html("");
            },

            //Initializes all events on the table
            init: function () {

                $("#check_all").unbind("click.checkall");
                $("#check_all").bind("click.checkall", function () {
                    if ($(this).prop("checked") == true) {
                        $("tbody .check_field [type=checkbox]:not(:checked)").trigger("click");
                    }
                    else {
                        $("tbody .check_field [type=checkbox]:checked").trigger("click");
                    }
                });
            }

        }

        OrderTable3 = {

            table: $("#accountingSection #orderTable3 tbody"),

            //More Fields function
            moreFields: {
                idObject: null,
                reference: null,
                destinyOptions: null,
                //Setting values to the form

                disableForm: function (disable) {
                    this.form.find("input, textarea, select").prop("disabled", disable);
                },

                //Set values to the selected object
                saveValues: function () {
                    if (OrderTable3.moreFields.destinyOptions == "venta") {
                        //var allFields = {
                        //    value: $(table.find("tr[data-id='" + $(this).data("id") + "']")).find(".value_price").val(),
                        //    owner: $($("#accountingSection #orderTable3 tbody").find("tr[data-id='" + $(this).data("id") + "']")).find(".owner").val(),
                        //    account: $($("#accountingSection #orderTable3 tbody").find("tr[data-id='" + $(this).data("id") + "']")).find(".account").val()
                        //    sold_price: this.form.find(".sold_price").val(),
                        //    buyer: this.form.find(".buyer").val()
                        //}
                    }

                    var setRow = $("#orderTable3 tbody tr.selected");

                }
            },

            setCheckAllTitle: function (title) {
                if (title == undefined)
                    title = "";
                $("#check_all_text").text(title);
            },

            getSelectedObjects: function () {
                var objects = {
                    accepted: [],
                    denied: []
                };
                var tempAccepted = [],
                    tempDenied = [];
                //Accepted
                var rows = this.table.find("input[type=checkbox]:checked").each(function () {
                    tempAccepted.push($(this).closest("tr"));
                });
                objects.accepted = $(tempAccepted);
                //Denied
                var rows = this.table.find("input[type=checkbox]:not(:checked)").each(function () {
                    if (!$(this).closest("tr").hasClass("denied"))
                        tempDenied.push($(this).closest("tr"));
                });
                objects.denied = $(tempDenied);

                return objects;
            },

            //Get all objects in the order table
            getObjects: function () {
                var objects = [];
                var rows = this.table.find("tr");
                var orderNumber = 1;
                rows.each(function () {
                    if (OrderTable2.moreFields.destinyOptions == "venta") {

                        var element = {
                            id: $(this).data("id"),
                            orderNumber: orderNumber,
                            //   value: $(this).find(".value_price").val(),
                            owner: $(this).find(".owner").val(),
                            account: $(this).find(".account").val()
                        }
                    }
                    objects.push(element);
                    orderNumber++;
                });
                return objects;
            },

            removeAllRows: function () {
                var rows = this.table.find("tr");
                rows.each(function () {
                    OrderTable3.removeRow(this);
                });
            },

            //Add a new row
            addRow: function (item, extra, type) {
                OrderTable3.moreFields.destinyOptions = type;
                // if (type == "create") {
                item.value = (item.value != undefined) ? item.value : "";
                item.owner = (item.owner != undefined) ? item.owner : "";
                item.account = (item.account != undefined) ? item.account : "";

                this.table.append(
                    $("<tr>", { "data-id": item["_id"] }).append(
                        $("<td class='check_field'>").html("<input type='checkbox' />")
                    ).append(
                        $("<td>").append(
                            $("<div class=thumb_tile>").css("background-image", "url(" + item.image + ")")
                        )
                    ).append(
                        $("<td>").html(item.name)
                    ).append(
                        $("<td>").html("<span class='location' data-id='" + extra.location + "'   >" + extra.locationText)
                    //).append(
                    //    $("<td class='value_field '>").html("<input class='value_price' type='text' value='" + item.value + "' />")
                    ).append(
                        $("<td class='owner_field '>").html("<input class='owner' type='text' value='" + item.owner + "' />")
                    ).append(
                        $("<td class='account_field '>").html("<input class='account' type='text' value='" + item.account + "' />")
                    )
                );
                //Disable checkbox

                this.updateCounter();
            },

            //Show the table headers in the array
            // param headers["idHeader"]
            showHeaders: function (headers) {
                for (var h in headers) {
                    $("#accountingSection").find("." + headers[h] + "_field").show();
                }
            },

            //Hide the table headers in the array
            // param headers["idHeader"]
            hideHeaders: function (headers) {
                for (var h in headers) {
                    $("#accountingSection").find("." + headers[h] + "_field").hide();
                }
            },

            removeRow: function (row) {
                row.remove();
                this.updateCounter();
            },

            count: function () {
                var counter = this.table.find("tr").length;
                return counter
            },

            //Updates the badge counter
            updateCounter: function () {
                var count = this.table.find("tr").length
                if (count > 0)
                    $("a[href=#accountingSection] span").html(count);
                else
                    $("a[href=#accountingSection] span").html("");
            },

            //Initializes all events on the table
            init: function () {

                $("#check_all").unbind("click.checkall");
                $("#check_all").bind("click.checkall", function () {
                    if ($(this).prop("checked") == true) {
                        $("tbody .check_field [type=checkbox]:not(:checked)").trigger("click");
                    }
                    else {
                        $("tbody .check_field [type=checkbox]:checked").trigger("click");
                    }
                });
            }

        }

        //Object to control the movements view
        Movements = {
            idMovement: null,
            type: "",
            movementId: "",
            view: $("#movementView"),
            useViewer: null,
            status: null,
            temp: false,
            profileFields: null,

            //All required filters
            filters: {
                categories: null,
                locations: null,
                assetType: null
            },

            selectedElements: null,
            results: null,

            //Restart all movement data
            restart: function () {
                $("#results").html("");
                jQuery("#aditionalSection input").val("");
                OrderTable.removeAllRows();
                OrderTable2.removeAllRows();
                OrderTable3.removeAllRows();
            },

            //Loads the filter fields required to do the searches
            loadFields: function (profile) {
                //Hide all filters first
                $("#categoryFilter, #locationFilter, #locationDestinyFilter, #deleteFilter, #assetTypeFilter,#destinyOptions_A2, .tempMovement").hide();

                //Show and hide .no-filters div
                if (this.type == undefined)
                    $(".no-filters").show();
                else
                    $(".no-filters").hide();


                if (this.type == "create") {
                    OrderTable.showHeaders(["check", "options"]);
                    OrderTable.hideHeaders(["epc", "location_destiny", "price", "serie", "depart", "asset_type"]);

                    //Show or load Categories
                    if (this.filters.categories != null) {
                        $("#categoryFilter").show();
                        $("#categoryFilter select").trigger("change");
                    }
                    else { //Load this filter
                        var loading = $("#movementView #filters").append(
                            $("<div>", { "class": "gLoading" })
                        ).find(".gLoading");

                        $.ajax({
                            url: "/Home/GetSources",
                            method: "POST",
                            data: { customSources: JSON.stringify(["Categories"]) },
                            beforeSend: function () { },
                            success: function (data) {
                                var source = JSON.parse(data);
                                $("#categoryFilter select").append(
                                            $("<option>", {
                                                "value": null
                                            }).html("Todas")
                                        );
                                for (var s in source.Categories) {
                                    $("#categoryFilter select").append(
                                            $("<option>", {
                                                "value": source.Categories[s].id
                                            }).html(source.Categories[s].value)
                                        );
                                }
                                $("#categoryFilter").show();
                                $("#categoryFilter select").select2();
                                $("#categoryFilter select").on("change", function () {
                                    Movements.loadSearch();
                                });

                                $("#categoryFilter select").trigger("change");

                                Movements.filters.categories = "loaded";
                            },
                            complete: function () {
                                loading.remove();
                            }
                        });
                    }
                    //Show or load Locations
                    //if (this.filters.locations != null) {
                    //    $("#locationFilter").show();
                    //    //Remove events
                    //    $("#locationFilter").unbind("change.loadObjects");
                    //}
                    //else { //Load this filter
                    //    var loading = $("#movementView #filters").append(
                    //        $("<div>", { "class": "gLoading" })
                    //    ).find(".gLoading");

                    //    $.ajax({
                    //        url: "/Home/GetSources",
                    //        method: "POST",
                    //        data: { customSources: JSON.stringify(["Locations"]) },
                    //        beforeSend: function () { },
                    //        success: function (data) {
                    //            var source = JSON.parse(data);

                    //            for (var s in source.Locations) {
                    //                $("#locationFilter select").append(
                    //                        $("<option>", {
                    //                            "value": source.Locations[s].id
                    //                        }).html(source.Locations[s].value)
                    //                    );
                    //                $("#locationDestinyFilter select").append(
                    //                        $("<option>", {
                    //                            "value": source.Locations[s].id
                    //                        }).html(source.Locations[s].value)
                    //                    );
                    //            }
                    //            $("#locationFilter").show();
                    //            $("#locationFilter select").select2();
                    //            $("#locationDestinyFilter select").select2();
                    //            Movements.filters.locations = "loaded";
                    //        },
                    //        complete: function () {
                    //            loading.remove();
                    //        }
                    //    });

                    //}
                }
                else if (this.type == "movement") {
                    OrderTable.hideHeaders(["price", "serie", "depart", "asset_type"]);
                    OrderTable.showHeaders(["check", "epc", "location_destiny", "options"]);

                    var localTempFilters = function () {
                        //Filters for Temporal Movements "Salida Temporal"
                        if (Movements.temp == true) {
                            $("#locationDestinyFilter").hide();
                            $(".tempMovement").show();
                            OrderTable.hideHeaders(["location_destiny"]);
                        }
                    }

                    //Show or load Locations
                    if (this.filters.locations != null) {
                        $("#locationFilter").show();
                        $("#locationDestinyFilter").show();

                        //Add events
                        $("#selectOrigen").unbind("change.loadObjects");
                        $("#selectOrigen").bind("change.loadObjects", function () {
                            Movements.loadSearch();
                        });
                        $("#selectOrigen").trigger("change");
                        localTempFilters();
                    }
                    else { //Load this filter
                        var loading = $("#movementView #filters").append(
                            $("<div>", { "class": "gLoading" })
                        ).find(".gLoading");

                        $.ajax({
                            url: "/Home/GetSources",
                            method: "POST",
                            data: { customSources: JSON.stringify(["Locations"]) },
                            beforeSend: function () { },
                            success: function (data) {
                                var source = JSON.parse(data);

                                //for (var s in source.Locations) {
                                //    $("#locationFilter select").append(
                                //            $("<option>", {
                                //                "value": source.Locations[s].id
                                //            }).html(source.Locations[s].value)
                                //        );
                                //    $("#locationDestinyFilter select").append(
                                //            $("<option>", {
                                //                "value": source.Locations[s].id
                                //            }).html(source.Locations[s].value)
                                //        );
                                //}
                                $("#locationFilter").show();
                                $("#locationDestinyFilter").show();
                                $("#locationFilter select").select2();
                                $("#locationDestinyFilter select").select2();
                                //Add events
                                $("#selectOrigen").bind("change.loadObjects", function () {
                                    Movements.loadSearch();
                                })
                                $("#selectOrigen").trigger("change");

                                Movements.filters.locations = "loaded";
                                localTempFilters();
                            },
                            complete: function () {
                                loading.remove();
                            }
                        });

                    }
                }
                else if (this.type == "delete") {
                    OrderTable.hideHeaders(["price", "serie", "depart", "location_destiny", "asset_type"]);
                    OrderTable.showHeaders(["epc", "check", "options"]);

                    //Show or load AssetType
                    if (this.filters.assetType != null) {
                        $("#assetTypeFilter").show();

                        //Add events
                        $("#assetTypeFilter select").unbind("change.loadObjects");
                        $("#assetTypeFilter select").bind("change.loadObjects", function () {
                            Movements.loadSearch();
                        });

                    }
                    else { //Load this filter
                        var loading = $("#movementView #filters").append(
                            $("<div>", { "class": "gLoading" })
                        ).find(".gLoading");

                        $.ajax({
                            url: "/Home/GetSources",
                            method: "POST",
                            data: { customSources: JSON.stringify(["AssetType"]) },
                            beforeSend: function () { },
                            success: function (data) {
                                var source = [];
                                try {
                                    source = JSON.parse(data);
                                }
                                catch (Exception) { }

                                for (var s in source.AssetType) {
                                    $("#assetTypeFilter select").append(
                                            $("<option>", {
                                                "value": source.AssetType[s].id
                                            }).html(source.AssetType[s].value)
                                        );
                                }
                                $("#assetTypeFilter").show();
                                $("#assetTypeFilter select").select2();

                                //Add events
                                $("#assetTypeFilter select").bind("change.loadObjects", function () {
                                    Movements.loadSearch();
                                })

                                Movements.filters.assetType = "loaded";
                            },
                            complete: function () {
                                loading.remove();
                            }
                        });

                    }

                    //Show or load Locations
                    if (this.filters.locations != null) {
                        $("#locationFilter, #deleteFilter").show();

                        //Add events
                        $("#selectOrigen").unbind("change.loadObjects");
                        $("#selectOrigen").bind("change.loadObjects", function () {
                            Movements.loadSearch();
                        });
                        $("#selectOrigen").trigger("change");
                    }
                    else { //Load this filter
                        var loading = $("#movementView #filters").append(
                            $("<div>", { "class": "gLoading" })
                        ).find(".gLoading");

                        $.ajax({
                            url: "/Home/GetSources",
                            method: "POST",
                            data: { customSources: JSON.stringify(["Locations"]) },
                            beforeSend: function () { },
                            success: function (data) {
                                var source = [];
                                try {
                                    source = JSON.parse(data);
                                }
                                catch (Exception) { }

                                //for (var s in source.Locations) {
                                //    $("#locationFilter select").append(
                                //            $("<option>", {
                                //                "value": source.Locations[s].id
                                //            }).html(source.Locations[s].value)
                                //        );
                                //    $("#locationDestinyFilter select").append(
                                //            $("<option>", {
                                //                "value": source.Locations[s].id
                                //            }).html(source.Locations[s].value)
                                //        );
                                //}
                                $("#locationFilter, #deleteFilter").show();
                                $("#locationFilter select").select2();
                                $("#locationDestinyFilter select").select2();
                                //Add events
                                $("#selectOrigen").bind("change.loadObjects", function () {
                                    Movements.loadSearch();
                                })
                                $("#selectOrigen").trigger("change");

                                Movements.filters.locations = "loaded";
                            },
                            complete: function () {
                                loading.remove();
                            }
                        });

                    }

                    //TODO::Set condition before applying select2 method
                    $("#deleteFilter select").select2();

                    //On change delete type
                    $("select[name=deleteType]").unbind("change.type");
                    $("select[name=deleteType]").bind("change.type", function () {
                        if (this.value == "planeada") {
                            $("#destinyOptions_A").show();
                            $("#destinyOptions_A2").show();
                            $("#destinyOptions_B").hide();
                        }
                        else {
                            $("#destinyOptions_A").hide();
                            $("#destinyOptions_B").show();
                            $("#destinyOptions_A2").hide();
                        }
                    }).trigger("change");

                }

                demandModal.loadProfileFields(profile, false);
                demandModal.loadProfileFieldsTitles(profile, $("#staticFormHeader a"));

            },

            //Searches for all elements that match the filters
            loadSearch: function () {
                var catFilter = $("#categoryFilter select").val();
                var locFilter = $("#selectOrigen").val();
                var locDesFilter = $("#selectDestiny").val();
                var assetTypeFilter = $("#assetTypeFilter select").val();
                var urlResource = "";
                var sendData = {};

                if (this.type == 'create') {
                    urlResource = "loadObjectsReference";
                    sendData = { categoryId: catFilter }
                }
                else if (this.type == "movement" || this.type == "delete") {
                    urlResource = "GetAllSubObjects";
                    sendData = { locationId: locFilter }

                    if (this.type == "delete")
                        sendData.assetType = assetTypeFilter;

                    this.useViewer.setDisplayMethod(RivkaViewer.METHODS.TABLE);
                }

                var loading = $("#movementView #results").append(
                    $("<div>", { "class": "gLoading" })
                ).find(".gLoading");

                $.ajax({
                    url: "/ObjectAdmin/Demand/" + urlResource,
                    method: "POST",
                    data: sendData,
                    beforeSend: function () { },
                    success: function (data) {
                        Movements.results = data;
                        Movements.useViewer.removeSelectedItems();
                        Movements.useViewer.setData(data);
                        Movements.useViewer.printView();

                        $("#movementView #results .page").css("height", "320px").css("position", "relative").css("overflow", "hidden");
                        $("#movementView #results .page").perfectScrollbar({
                            wheelSpeed: 250
                        });

                        loading.remove();
                    },
                    complete: function () { }
                });

            },
            //Show details for selected element
            setDetails: function (details) {
                var detailsContainer = $("#details");
                detailsContainer.find(".title").html(details.name);
                detailsContainer.find(".photo").css("background-image", "url(" + details.image + ")");

                var detailsTable = detailsContainer.find(".details tbody");
                detailsTable.html("");
                //Create the details section
                detailsTable.append(
                    $("<tr>").append(
                        $("<td>").html("Categoria")
                    ).append(
                        $("<td>").html(details.categoryName)
                    )
                ).append(
                    $("<tr>").append(
                        $("<td>").html("Nombre")
                    ).append(
                        $("<td>").html(details.name)
                    )
                );

                if (this.type == "movement") {
                    detailsTable.append(
                        $("<tr>").append(
                            $("<td>").html("EPC")
                        ).append(
                            $("<td>").html(details.EPC)
                        )
                    )
                }

                //Check for custom fields
                var moreDetails = details.profileFields;
                var oKeys = [];
                try {
                    oKeys = Object.keys(moreDetails);
                }
                catch (Exception) { }

                for (var o in oKeys) {
                    var attr = oKeys[o].split("_HTKField");
                    if (attr.length > 1) {
                        detailsTable.append(
                            $("<tr>").append(
                                $("<td>").html(attr[1])
                            ).append(
                                $("<td>").html(moreDetails[oKeys[o]])
                            )
                        )
                    }
                }
            },

            //Show details container
            showDetails: function () {
                $("#details").removeClass("hide");
                $("#results").parent().removeClass("span9").addClass("span6");
            },

            //Hide details container
            hideDetails: function () {
                $("#details").addClass("hide");
                $("#results").parent().removeClass("span6").addClass("span9");
            },

            //Show or Hide details container
            showHideDetails: function () {
                var hide = $("#details").hasClass("hide");
                if (hide) {
                    $("#details").removeClass("hide");
                    $("#results").parent().removeClass("span9").addClass("span6");
                }
                else {
                    $("#details").addClass("hide");
                    $("#results").parent().removeClass("span6").addClass("span9");
                }
            },

            //Show or Hide the extra fields
            showMoreFields: function (show) {
                if (show == true) {
                    $(".more_fields").show();
                    $("#orderTableSection .span12").first().removeClass("span12").addClass("span8");
                }
                else {
                    $(".more_fields").hide();
                    $("#orderTableSection .span8").first().removeClass("span8").addClass("span12");
                }
                if (Movements.type == "create") {
                    $(".more_fields #more_create").show();
                    $(".more_fields #more_delete").hide();
                }
                else if (Movements.type == "movement") {
                    $(".more_fields #more_create").hide();
                    $(".more_fields #more_delete").hide();
                }
                else if (Movements.type == "delete") {
                    $(".more_fields #more_delete").show();
                    $(".more_fields #more_create").hide();
                }

            },

            hideOptionalsElements: function () {
                $("#save_button").hide();
                $(".after-dictamining").hide();
                $(".after-authorized").hide();
                $(".after-receipt").hide();
                $("#extraTemporalSection").hide();
                $(".temp_movement").hide();
                $(".updateOptions").hide();
                $(".updateOptions2").hide();
                $(".pdfOptions").hide();
                temporalMovement.doEditable();
                //$("#addRelatedMovement").hide();
                //$("#relatedDemands thead th:last").hide();
                $(".asset_type_field").hide();
                $(".value_books_field").hide();

            },

            //Shows the movement info, for watching
            showInfo: function (showAutho) {
                this.restart();
                $(".modal-header-text").text("Información de Solicitud");
                $("#admin_panel").modal("show");
                var iduser = "@Session["_id"].ToString()";
                $("#staticFormHeader").hide();
                $("#movementInfoTab").show();
                $(".tipoObs").hide();
                $("#DivtipoObs").hide();
                $(".deleteInfoSection, .temp_movement").hide();
                jQuery("#tabHeader1 a[href=#accountingSection]").closest("li").hide();
                $(".showACTPDF").hide();
                $("#showFileButton").hide();
                $("#showFileButton2").hide();
                $("#updateOptions2").hide();
                $(".updateOptions3").hide();
                $(".location_destiny_vb").hide();
                $.ajax({
                    url: "/ObjectAdmin/Demand/getDemandDetails",
                    method: "POST",
                    data: { selectedID: this.idMovement, userid: iduser },
                    beforeSend: _loading(),
                    success: function (data) {
                        var result = JSON.parse(data);
                        Movements.hideOptionalsElements();
                        //Set movement type and disable it
                        $("#moveprofileSelect").val(result.movementId).prop("disabled", true);

                        Movements.status = result.status;
                        Movements.profileFields = {};
                        if (typeof (result.profileFields) == "object")
                            Movements.profileFields = result.profileFields;

                        //Sets the Demand's folio number
                        $("#folioSection").show();
                        $("#folioNumber").html(result.folio);
                        if (showAutho == "authorize") {
                            jQuery("#tabHeader1 a[href=#aditionalSection]").closest("li").hide(); //hiding aditional tab
                        }

                        //Sets Movement Info
                        var statusVal = movementStatus[result.typeMovement][result.status];
                        if (result.movement == "Salida Temporal") {
                            statusVal = movementStatus["temporal"][result.status];
                        }
                        $("textarea[name=movementStatus]").val(statusVal);
                        $("input[name=movementUser]").val("");
                        $("textarea[name=movementComments]").val("");
                        Movements.type = result.typeMovement; //used to know the movement in showMoreInfo
                        Movements.showMoreFields(false);

                        //Set Authorizers --------------------------------------------------------------
                        $("#authorizersTable tbody tr").remove();
                        var authorizers = [];
                        if (typeof (result.authorizations) == "object")
                            authorizers = result.authorizations;
                        else {
                            try {
                                authorizers = JSON.parse(result.authorizations);
                            }
                            catch (Exception) { }
                        }

                        if (result.status == 7) {
                            for (var a in authorizers) {
                                var auth = authorizers[a];
                                if (auth.approved == 2) {
                                    $("input[name=movementUser]").val(auth.lastname + " " + auth.name);
                                    $("textarea[name=movementComments]").val(auth.note);
                                }
                            }
                        }

                        //Sets authorizers
                        for (var a in authorizers) {
                            var approved = "NO";
                            var fechaautorize = "";
                            if (authorizers[a].approved == 1) {
                                approved = "SI";
                                fechaautorize = authorizers[a].date;
                            }

                            $("#authorizersTable tbody").append(
                                $("<tr id='authorizer" + authorizers[a].id_user + "'>").append(
                                    $("<td>").html(
                                        authorizers[a].lastname + " " + authorizers[a].name
                                    )
                                ).append(
                                    $("<td>").html(approved)
                                ).append(
                                    $("<td>").html(fechaautorize)
                                )
                            );
                        }

                        var demandobj = {
                            id: result._id,
                            folio: result.folio,
                            movement: result.movement,
                            status: statusVal,
                            CreatorLastName: "",
                            CreatorName: "",
                            DateCreated: ""
                        };

                        //guardar historial
                        SaveLastMovements(JSON.stringify(demandobj));

                        // debugger;
                        if (showAutho == "authorize") {
                            var checkingAuthorizers = $("#authorizersTable #authorizer" + iduserthis);
                            if (result.status == "3" && checkingAuthorizers.length > 0 && checkingAuthorizers.find("td:last").text() != "SI") {
                                $("#authorizeMovement,#denyMovement").show();
                            } else {
                                $("#authorizeMovement,#denyMovement").hide();
                            }
                        }

                        /**------------------------END AUTHORIZATIONS-------------------------*/
                        var vobo = "no";
                        //Set visto bueno
                        $("#approversTable tbody tr").remove();
                        var approvers = [];
                        if (typeof (result.approval) == "object")
                            approvers = result.approval;
                        else {
                            try {
                                approvers = JSON.parse(result.approval);
                            }
                            catch (Exception) { }
                        }


                        //Sets authorizers
                        var approvednew = false;
                        for (var a in approvers) {
                            var approved = "NO";
                            var fechaapproved = "";
                            if (approvers[a].approved == 1) {
                                approved = "SI";
                                fechaapproved = approvers[a].date;
                                approvednew = true;
                            }

                            $("#approversTable tbody").append(
                                $("<tr id='approver" + approvers[a].id_user + "'>").append(
                                    $("<td>").html(
                                        approvers[a].lastname + " " + approvers[a].name
                                    )
                                ).append(
                                    $("<td>").html(approved)
                                ).append(
                                $("<td>").html(fechaapproved)
                                )
                            );
                        }

                        var ente = true;
                        try {
                            temporalMovement.newact = result.updateInfo.newObjects;
                            path = "/Uploads/Dictamenes/Imagenes/";
                            for (var j = 0; j < temporalMovement.newact.length; j++) {
                                if (temporalMovement.newact[j].image != "") {
                                    temporalMovement.newact[j].image = path + temporalMovement.newact[j].image;
                                }
                                if (temporalMovement.newact[j].image1 != "") {
                                    temporalMovement.newact[j].image1 = path + temporalMovement.newact[j].image1;
                                }
                            }
                            (result.updateInfo.newObjects == undefined) ? false : true;

                        } catch (ex) {
                            console.log(ex);
                        }
                        if (showAutho == "authorize") {
                            var checkingApprovers = $("#approversTable #approver" + iduserthis);// &&
                            if (checkingApprovers.length > 0 && checkingApprovers.find("td:last").text() != "SI") {
                                if (result.status == "5") {
                                    $("#approveMovement,#denyMovement").show();
                                } else if (result.status < 5) {
                                    $("#denyMovement").show();
                                } else if (result.status == "8") {
                                    if (approvednew) {
                                        $("#approveMovement,#denyMovement").hide();
                                    } else {
                                        $("#approveMovement,#denyMovement").show();
                                    }

                                }

                                //enable asset type select
                                $(".asset_type_field select").prop("disabled", false);
                                vobo = "si";
                            } else {
                                $("#approveMovement").hide();
                            }
                        }
                        //end visto bueno
                        //Show objects
                        if (result.typeMovement == "create") {
                            Movements.showMoreFields(true);
                            $("#assign").hide();
                            OrderTable.moreFields.disableForm(true);
                            OrderTable.showHeaders(["check"]);
                            OrderTable.hideHeaders(["epc", "location_destiny", "price", "serie", "depart", "options"]);

                            for (var ob in result.objects) {
                                var obj = result.objects[ob]
                                obj["_id"] = obj.id;
                                var extra = {
                                    location: obj.location,
                                    locationText: obj.locationName
                                };
                                OrderTable.addRow(obj, extra, "create", false);
                            }
                            if (Movements.status >= 5) {
                                $(".asset_type_field").show();
                            }
                            else
                                $(".asset_type_field").hide();

                            //enable asset type select
                            if (showAutho == "authorize") {
                                var checkingApprovers = $("#approversTable #approver" + iduserthis);
                                if (result.status == "5" && checkingApprovers.length > 0 && checkingApprovers.find("td:last").text() != "SI") {
                                    $(".asset_type_field select").each(function () {
                                        if (!$(this).closest("tr").hasClass("denied"))
                                            $(this).prop("disabled", false);
                                    })
                                }
                            }

                        }
                        else if (result.typeMovement == "movement") {

                            for (var ob in result.objects) {
                                var obj = result.objects[ob]
                                obj["_id"] = obj.id;
                                var extra = {
                                    location: obj.location,
                                    locationText: obj.locationName,
                                    locationDestiny: obj.locationDestiny,
                                    locationDestinyText: obj.locationDestinyName
                                };
                                OrderTable.addRow(obj, extra, "movement", false);
                            }
                            OrderTable.hideHeaders(["price", "serie", "depart", "options"]);
                            OrderTable.showHeaders(["epc", "location_destiny", "check"]);
                            if (result.movement == "Salida Temporal") {
                                OrderTable.hideHeaders(["location_destiny"]);
                            }

                            if (result.status > 4) {
                                jQuery(".location_destiny_vb").show();
                                jQuery(".location_destiny").hide();

                            }
                            else {
                                jQuery(".location_destiny_vb").hide();
                                jQuery(".location_destiny").show();
                            }
                        }
                        else if (result.typeMovement == "delete") {
                            Movements.showMoreFields(true);
                            OrderTable.hideHeaders(["price", "serie", "location_destiny", "options"]);
                            OrderTable.showHeaders(["epc", "check"]);

                            for (var ob in result.objects) {
                                var obj = result.objects[ob]
                                obj["_id"] = obj.id;
                                var extra = {
                                    location: obj.location,
                                    locationText: obj.locationName
                                };
                                OrderTable.addRow(obj, extra, "delete", false);
                            }
                        }

                        if (result.movement == "Salida Temporal") {
                            temporalMovement.fillFields(result.extras);
                            $("#extraTemporalSection").show();

                            switch (result.status) {
                                case "6":
                                    //$("#addRelatedMovement").show();
                                    //$("#relatedDemands thead th:last").show();
                                    $(".temp_movement").show();
                                    $(".pdfOptions").show();
                                    if (showAutho != "authorize") {
                                        $(".updateOptions").show();
                                    }
                                    temporalMovement.createTableClone();
                                    //relatedMovement.objectsChecker.start(); //start objects id counting
                                    break;

                                case "8":
                                    $(".temp_movement").show();
                                    $(".pdfOptions").show();
                                    temporalMovement.createTableClone();
                                    temporalMovement.fillUpdatedFields(result.updateInfo);
                                    temporalMovement.doNotEditable();
                                    break;
                            }
                        } else if (result.typeMovement == "delete") { //Show delete info

                            $(".deleteInfoSection").show();
                            var deleteType = "";
                            var destinyOptions = "";
                            var documento = "Comprobante";
                            Movements.deleteType = result.deleteType;
                            switch (result.deleteType) {
                                case "planeada": deleteType = "Planeada"; $("#DivtipoObs").show(); break;
                                case "no_planeada": deleteType = "No planeada"; break;
                            }
                            Movements.destinyOptions = result.destinyOptions;
                            // OrderTable2.showHeaders(["check"]);

                            switch (result.destinyOptions) {
                                case "venta":
                                    OrderTable2.hideHeaders(["donation_benefit", "rfc", "type_act", "options"]);
                                    OrderTable2.showHeaders(["sold_price", "buyer"]);

                                    if (Movements.status >= 5) {
                                        OrderTable.hideHeaders(["depart"]);
                                        OrderTable.showHeaders(["value_books"]);
                                        $(".value_books_field").show();
                                    }
                                    else
                                        $(".value_books_field").hide();

                                    //   OrderTable3.hideHeaders(["donation_benefit", "rfc", "type_act", "options"]);
                                    OrderTable3.showHeaders(["value", "owner", "account"]);
                                    for (var ob in result.objects) {
                                        var obj = result.objects[ob]
                                        obj["_id"] = obj.id;
                                        var extra = {
                                            location: obj.location,
                                            locationText: obj.locationName
                                        };
                                        OrderTable3.addRow(obj, extra, result.destinyOptions);
                                    }
                                    break;
                                case "donacion":
                                    OrderTable2.hideHeaders(["sold_price", "buyer", "type_act", "options"]);
                                    OrderTable2.showHeaders(["donation_benefit", "rfc"]);
                                    break;
                                case "destruccion":
                                    OrderTable2.hideHeaders(["sold_price", "buyer", "donation_benefit", "rfc", "options"]);
                                    OrderTable2.showHeaders(["type_act"]);
                                    break;
                            }


                            for (var ob in result.objects) {
                                var obj = result.objects[ob]
                                obj["_id"] = obj.id;
                                var extra = {
                                    location: obj.location,
                                    locationText: obj.locationName
                                };
                                OrderTable2.addRow(obj, extra, result.destinyOptions);
                            }
                            //jQuery("#aditionalDiv").show();

                            $("input[name=movementDeleteType]").val(deleteType);
                            $("input[name=movementDestinyOptions]").val(destinyOptions);
                            $("input[name=movementAdjudicating]").val(result.adjudicating);

                            $("#dictamen_dictaminador").val(result.adjudicating);
                            $("#dictamen_folio").val(result.dctFolio);
                            $("#dictamen_date").val(result.dctDate);

                            $(".tipoObs").show();

                            $("#assign1").hide();
                            $(".archivo").hide();
                            $("#showFileButton2").attr("disabled", false);
                            $("#showFileButton").attr("disabled", false);
                            jQuery('.labelnom').text(result.receiptFile);
                            jQuery("#DivtipoObs select").select2('disable');
                            $("#accountingSection input").attr("disabled", true);
                            $("#facturaTab").hide();
                            switch (result.status) { //showing elements according to the demand status
                                case "7":
                                    $("#tabHeader1 li.after-dictamining").show();
                                    $("#dictamen_dictaminador").val(result.adjudicating);
                                    $("#dictamen_folio").val(result.dctFolio);
                                    $("#dictamen_date").val(result.dctDate);
                                    if (deleteType == "Planeada") { $("#showFileButton").show(); }
                                    else {
                                        $("#showFileButton2").show();
                                    }

                                    break;

                                case "6":
                                    if (deleteType == "Planeada") { $("#showFileButton").show(); }
                                    else {
                                        $("#showFileButton2").show();
                                    }
                                    break;
                                case "5":
                                    if (result.destinyOptions != "robo") {
                                        $("#tabHeader1 li.after-authorized").show();
                                        //if (showAutho == "authorize") {
                                        //    $("#tabHeader1 li.after-authorized").show();
                                        //}
                                        $("#receiptSection input").attr("disabled", true);
                                        $("#actacontainer").hide();
                                        $("#more_files").hide();

                                        $("#trfactura").hide();
                                        $("#trBajaPlaneada1").hide();
                                        $("#trBajaPlaneada2").hide();
                                        $("#trBajaPlaneada3").hide();
                                        $("#trBajaNoPlaneada").hide();
                                        $("#btnOtroDocumento").hide();
                                        $("#btnQuitarDocumento1").hide();
                                        if (deleteType == "Planeada") {
                                            $(".archivo").hide();
                                            $("#btnOtroDocumento").hide();
                                            $("#btnOtroDocumento1").hide();
                                            $("#btnQuitarDocumento2").hide();

                                            if (result.receiptFile.length > 0) {
                                                $("#img_pre1").attr("src", "/Uploads/Dictamenes/documentos/" + result.receiptFile[0]);
                                                $("#trBajaPlaneada1").show();
                                                jQuery("#trBajaPlaneada1").find(".labelnom").text(result.receiptFile[0]);
                                                $("#fileb1").attr("name", result.receiptFile[0]);
                                                $("#showFileButton").show();
                                            }
                                            if (result.receiptFile.length > 1) {
                                                $("#img_pre2").attr("src", "/Uploads/Dictamenes/documentos/" + result.receiptFile[1]);
                                                $("#trBajaPlaneada2").show();
                                                jQuery("#trBajaPlaneada2").find(".labelnom").text(result.receiptFile[1]);
                                                $("#fileb2").attr("name", result.receiptFile[1]);
                                                $("#showFileButton3").show();
                                            }
                                            if (result.receiptFile.length > 2) {
                                                $("#img_pre3").attr("src", "/Uploads/Dictamenes/documentos/" + result.receiptFile[2]);
                                                $("#trBajaPlaneada3").show();
                                                jQuery("#trBajaPlaneada3").find(".labelnom").text(result.receiptFile[2]);
                                                $("#fileb3").attr("name", result.receiptFile[2]);
                                                $("#showFileButton4").show();
                                            }

                                            if (result.destinyOptions == "destruccion") {
                                                $("#actacontainer").show();
                                                $(".showACTPDF").show();
                                                $("#acta_folio").attr("disabled", true);
                                                $("#acta_folio").val(result.ActFolio);
                                                //   $("#showActaButton").attr("disabled", false);
                                            } else if (result.destinyOptions == "venta") {

                                                // if (result.invoiceRequired == 1) $("#trfactura").show();
                                            }
                                        } else {
                                            $("#file3").attr("name", result.receiptFile);
                                            $("#file3").attr("disabled", true);
                                            $("#showFileButton2").show();
                                            $("#trBajaNoPlaneada").show();
                                            jQuery(".comprobanteReq").text("REPORTE DE SEGUROS Y FINANZAS");

                                        }
                                    }

                                case "4":

                                    if (showAutho != "authorize" && result.destinyOptions != "robo") {
                                        $("#tabHeader1 li.after-authorized").show();

                                    }
                                case "3":
                                    $("#tabHeader1 li.after-dictamining").show();
                                    $("#dictamen_dictaminador").val(result.adjudicating);
                                    $("#dictamen_folio").val(result.dctFolio);
                                    $("#dictamen_date").val(result.dctDate);

                                    $("#aditionalSection input").attr("disabled", true);

                                    //$("#aditionalSection div:not(.hide) input").each(function () {
                                    //    jQuery(this).val(result[this.name]);
                                    //});
                                    break;

                                case "2":
                                    $("#aditionalSection input").attr("disabled", false);
                                    $("#aditionalSection div:not(.hide) input").each(function () {
                                        jQuery(this).val("");
                                    });
                                    if (showAutho != "authorize") {
                                        $("#tabHeader1 li.after-dictamining").show();

                                        $("#dictamen_dictaminador").val(result.adjudicating);
                                        $("#dictamen_folio").val(result.dctFolio);
                                        $("#dictamen_date").val(result.dctDate);
                                        break;
                                    }

                                case "1":
                                    $("#tabHeader1 li.after-dictamining").hide();
                                    $("#dictamen_dictaminador").val("");
                                    $("#dictamen_folio").val("");
                                    $("#dictamen_date").val("");

                                default:
                                    break;
                            }
                            $(".updateOptions3").hide();
                            if (result.destinyOptions == "venta" && result.status > 3) {
                                jQuery("#tabHeader1 a[href=#accountingSection]").closest("li").show(); //hiding aditional tab
                                if (result.status == 4 && result.userPosition == "contador") {
                                    $(".updateOptions2").show();
                                    $("#accountingSection input").attr("disabled", false);
                                }
                                if (result.destinyOptions == "venta" && result.status.toString() == "6") {
                                    if (result.invoiceRequired == 1) {
                                        $("#showFileButtonf").attr("disabled", false);
                                        $("#facturaTab").show();
                                        $(".archivof").show();
                                        $(".updateOptions3").show();
                                        $("#showFileButtonf").show();
                                    }

                                }
                            } else {
                                jQuery("#tabHeader1 a[href=#accountingSection]").closest("li").hide(); //hiding aditional tab

                            }

                            //if (result.destinyOptions == "robo") {
                            //    jQuery("#receiptTab").hide();
                            //}
                            //else { jQuery("#receiptTab").show(); }
                        }

                        if (deleteType == "no_planeada") {
                            // $("#tabHeader1 li.after-dictamining").hide();
                            jQuery("#createDictamen").text("Generar Dictamen");
                        }
                        else { jQuery("#createDictamen").text("Generar Acta de Hechos"); }

                        $("#comprobanteReq").text(documento);

                        //Show thumbs
                        if (showAutho == "authorize" && (result.status == 3 || result.status == 1 || vobo == "si")) {
                            $(".authorizationOptions").show();
                            if (result.status == 3) {
                                $("#createDictamen").hide();
                                $(".tipoObs").hide();
                            }
                            else if (result.status == 1) {
                                $("#createDictamen").show();
                                $("#denyMovement").show();
                                $(".tipoObs").show();
                                jQuery("#DivtipoObs select").select2('enable');
                                $("#DivtipoObs").show();
                                $("#assign1").show();
                            }
                        }
                        else {
                            $(".authorizationOptions").hide();
                        }

                        if (showAutho != "authorize") {

                            if (result.status == 2 || result.status == 4) {
                                $(".updateOptions").show();
                            }

                            if (result.status > 3) {
                                $("#receiptSection input").attr("disabled", true);
                                $("#actacontainer").hide();
                                $("#more_files").hide();

                                $("#trfactura").hide();
                                $("#trBajaPlaneada1").hide();
                                $("#trBajaPlaneada2").hide();
                                $("#trBajaPlaneada3").hide();
                                $("#trBajaNoPlaneada").hide();
                                // receiptFiles.start();
                                $("#documento1").attr("disabled", false);
                                $("#archivobtn").attr("disabled", false);

                                if (deleteType == "Planeada") {
                                    if (result.status == 4) {
                                        $("#fileb1").attr("disabled", false);
                                        $("#showFileButton").hide();
                                        $(".archivo").show();
                                        $("#trBajaPlaneada1").show();
                                        $("#btnOtroDocumento").show();
                                        $("#btnQuitarDocumento1").hide();
                                    }
                                    else {
                                        $(".archivo").hide();
                                        $("#btnOtroDocumento").hide();
                                        $("#btnOtroDocumento1").hide();
                                        $("#btnQuitarDocumento2").hide();

                                        if (result.receiptFile.length > 0) {
                                            $("#img_pre1").attr("src", "/Uploads/Dictamenes/documentos/" + result.receiptFile[0]);
                                            $("#trBajaPlaneada1").show();
                                            jQuery("#trBajaPlaneada1").find(".labelnom").text(result.receiptFile[0]);
                                            $("#fileb1").attr("name", result.receiptFile[0]);
                                            $("#showFileButton").show();
                                        }
                                        if (result.receiptFile.length > 1) {
                                            $("#img_pre2").attr("src", "/Uploads/Dictamenes/documentos/" + result.receiptFile[1]);
                                            $("#trBajaPlaneada2").show();
                                            jQuery("#trBajaPlaneada2").find(".labelnom").text(result.receiptFile[1]);
                                            $("#fileb2").attr("name", result.receiptFile[1]);
                                            $("#showFileButton3").show();
                                        }
                                        if (result.receiptFile.length > 2) {
                                            $("#img_pre3").attr("src", "/Uploads/Dictamenes/documentos/" + result.receiptFile[2]);
                                            $("#trBajaPlaneada3").show();
                                            jQuery("#trBajaPlaneada3").find(".labelnom").text(result.receiptFile[2]);
                                            $("#fileb3").attr("name", result.receiptFile[2]);
                                            $("#showFileButton4").show();
                                        }
                                    }

                                    if (result.destinyOptions == "destruccion") {
                                        $("#actacontainer").show();
                                        $(".showACTPDF").show();
                                        $("#acta_folio").attr("disabled", true);
                                        $("#acta_folio").val(result.ActFolio);
                                        $("#showActaButton").show();
                                        $("#showActaButton").attr("disabled", false);
                                    } else if (result.destinyOptions == "venta") {
                                        //   if (result.invoiceRequired == 1) $("#trfactura").show();
                                    }
                                }

                                if (deleteType == "No planeada") {
                                    if (result.status == 4) {
                                        $(".archivo").show();
                                    }
                                    else {
                                        $("#showFileButton2").attr("disabled", false);
                                    }
                                    $("#file3").attr("name", result.receiptFile);
                                    $("#file3").attr("disabled", false);
                                    $("#trBajaNoPlaneada").show();
                                    jQuery(".comprobanteReq").text("REPORTE DE SEGUROS Y FINANZAS");
                                }
                            }
                        }

                        demandModal.loadProfileFields(result.movementId, true);
                        demandModal.loadProfileFieldsTitles(result.movementId, $("#movementInfoTab a"));
                        LoadLastMovements();
                    },
                    error: function () {
                        $("#admin_panel").modal("hide");
                        _alert("error", "Ocurrió un error");
                    },
                    complete: function () { _loading(); }
                });
            },

            //Returns the extra fields needed for the order
            getExtraFields: function () {
                var extraFields = {};
                $("div.tempMovement input").each(function () {
                    var input = $(this);
                    var key = input.attr("name");
                    var value = input.val();
                    extraFields[key] = value;
                });
                return extraFields;
            },

            getProfileFields: function () {
                var profileFields = {};
                var tabs = $("[id^=HTKTab]").find("input, textarea, select").each(function () {
                    profileFields[$(this).attr("name")] = $(this).val();
                });
                return profileFields;
            },

            setProfileFields: function () {
                for (var f in this.profileFields) {
                    $("[name=" + f + "]").val(this.profileFields[f])
                }
            },

            //Validate the required fields
            validateFields: function () {
                var valid = true;
                if (this.type == "movement" && this.temp == true) {
                    if (jQuery(".tempMovement input[name=verify_name]").val().trim() == "" || jQuery(".tempMovement input[name=verify_position]").val().trim() == "") {
                        _alert("error", "La información de quien verifica el daño es requerida");
                        valid = false;
                    } else {
                        valid = true;
                    }
                }
                else if (this.type == "create") {
                    var objects = OrderTable.getObjects();
                    for (var ob in objects) {
                        if (objects[ob].label == "" || objects[ob].serie == "" || objects[ob].department == "") {
                            valid = false;
                            _alert("error", "Información adicional es requerida");
                            OrderTable.table.find("tr").eq(objects[ob].orderNumber - 1).click();
                            break;
                        }
                    }
                }
                return valid;
            },

            //"report_id" : "123",
            //"out_date" : "2015-01-09",
            //"tracking_number" : "1235",
            //"verify_name" : "luis",
            //"verify_position" : "asd"

            //Validate and updates the movement
            updateMovement: function () {
                var formData = new FormData();
                var pass = true;
                formData.append("id", Movements.idMovement);
                if (Movements.status == 2 || (Movements.status == 4 && Movements.deleteType == "planeada")) {

                    //  var shownContainer = jQuery("#aditionalSection div:not(.hide)");
                    var aditionalInfo = OrderTable2.getObjects();

                    for (var a in aditionalInfo) {
                        if (Movements.destinyOptions == "venta") {
                            if (aditionalInfo[a].sold_price == "" || aditionalInfo[a].buyer == "") {
                                _alert("error", "Complete los datos adicionales");
                                pass = false;
                                return false;
                            }
                        }
                        if (Movements.destinyOptions == "donacion") {
                            if (aditionalInfo[a].donation_benefit == "" || aditionalInfo[a].rfc == "") {
                                _alert("error", "Complete los datos adicionales");
                                pass = false;
                                return false;
                            }
                        }
                        if (Movements.destinyOptions == "destruccion") {
                            if (aditionalInfo[a].type_act == "") {
                                _alert("error", "Complete los datos adicionales");
                                pass = false;
                                return false;
                            }
                        }

                        //aditionalInfo[this.name] = this.value;
                    }
                    if (!pass) return false;
                    formData.append("aditional", JSON.stringify(aditionalInfo));
                    //guardar imagenes
                    if (Movements.status == 4) {
                        var archivo = null;
                        if (document.getElementById("fileb1").disabled == false) {
                            archivo = jQuery('#fileb1')[0].files[0];
                            formData.append('file', archivo);
                        }
                        if (document.getElementById("fileb2").disabled == false) {
                            archivo = jQuery('#fileb2')[0].files[0];
                            formData.append('file1', archivo);
                        }
                        if (document.getElementById("fileb3").disabled == false) {
                            archivo = jQuery('#fileb3')[0].files[0];
                            formData.append('file2', archivo);
                        }
                        // if (archivo == null) { _alert("error", "Debe seleccionar archivo"); return false; }

                    }



                } else if (Movements.status == 4 && Movements.deleteType == "no_planeada") {
                    var archivo = null;
                    if (document.getElementById("file3").disabled == false) {
                        archivo = jQuery('#file3')[0].files[0];
                    }
                    if (archivo == null) { _alert("error", "Debe seleccionar archivo"); return false; }

                    formData.append('file', archivo);
                } else if (Movements.status == 6) { //if it is a temporal movement and the status is authorized "6"
                    temporalMovement.updateMovement();
                    return;
                }
                _confirm({
                    title: "Actualizar Movimiento",
                    message: "Desea actualizar este movimiento?",
                    action: function () {
                        $.ajax({
                            url: "/ObjectAdmin/Demand/UpdateMovement",
                            method: "POST",
                            data: formData,
                            contentType: false,
                            processData: false,
                            beforeSend: _loading(),
                            success: function (data) {
                                var rest = data;
                                //if (Movements.deleteType == "planeada" && Movements.destinyOptions == "destruccion") {
                                //    window.open("/Uploads/Dictamenes/documentos/" + data + ".pdf");
                                //}
                                model.init();
                                LoadAutorizacion2();
                                LoadLastMovements();
                                OrderTable2.removeAllRows();
                                OrderTable3.removeAllRows();
                                _alert("success", "Solicitud actualizada correctamente");
                                $("#admin_panel").modal("hide");
                            },
                            error: function () {
                                _alert("error", "Ocurrio un error");
                            },
                            complete: function () {
                                _loading();
                            }
                        });
                    }

                });
            },

            updateDeleteObjects: function (demand) {

            },

            //*************
            updateMovement2: function () {
                var formData = new FormData();
                var pass = true;
                formData.append("id", Movements.idMovement);
                if (Movements.status == 4) {

                    //  var shownContainer = jQuery("#aditionalSection div:not(.hide)");
                    var aditionalInfo = OrderTable3.getObjects();

                    for (var a in aditionalInfo) {

                        if (aditionalInfo[a].sold_price == "" || aditionalInfo[a].buyer == "") {
                            _alert("error", "Complete los datos contables");
                            pass = false;
                            return false;
                        }


                        //aditionalInfo[this.name] = this.value;
                    }
                    if (!pass) return false;
                    formData.append("accounting", JSON.stringify(aditionalInfo));
                }
                _confirm({
                    title: "Actualizar Movimiento",
                    message: "Desea actualizar este movimiento?",
                    action: function () {
                        $.ajax({
                            url: "/ObjectAdmin/Demand/UpdateMovementAccounting",
                            method: "POST",
                            data: formData,
                            contentType: false,
                            processData: false,
                            beforeSend: _loading(),
                            success: function (data) {
                                model.init();
                                LoadAutorizacion2();
                                LoadLastMovements();
                                OrderTable3.removeAllRows();
                                _alert("success", "Solicitud actualizada correctamente");
                                $("#admin_panel").modal("hide");
                            },
                            error: function () {
                                _alert("error", "Ocurrio un error");
                            },
                            complete: function () {
                                _loading();
                            }
                        });
                    }

                });
            },

            //****--------------
            updateMovement3: function () {
                var formData = new FormData();
                var pass = true;
                var archivo = null;
                if (document.getElementById("filef").disabled == false) {
                    archivo = jQuery('#filef')[0].files[0];
                }
                if (archivo == null) { _alert("error", "Debe seleccionar archivo"); return false; }

                formData.append('file', archivo);
                formData.append("id", Movements.idMovement);
                _confirm({
                    title: "Actualizar Movimiento",
                    message: "Desea actualizar este movimiento?",
                    action: function () {
                        $.ajax({
                            url: "/ObjectAdmin/Demand/UpdateInvoice",
                            method: "POST",
                            data: formData,
                            contentType: false,
                            processData: false,
                            beforeSend: _loading(),
                            success: function (data) {
                                model.init();
                                LoadAutorizacion2();
                                LoadLastMovements();
                                OrderTable3.removeAllRows();
                                _alert("success", "Solicitud actualizada correctamente");
                                $("#admin_panel").modal("hide");
                            },
                            error: function () {
                                _alert("error", "Ocurrio un error");
                            },
                            complete: function () {
                                _loading();
                            }
                        });
                    }

                });
            },


            //Init all required events
            init: function () {
                //Initializes table events
                OrderTable.init();

                //Hide all options
                $("#categoryFilter, #locationFilter, #locationDestinyFilter").hide();

                $("#moveprofileSelect").unbind("change.movement");
                $("#moveprofileSelect").bind("change.movement", function () {
                    var sure = true;

                    try {
                        if (OrderTable.count() > 0)
                            sure = confirm("Tiene una solicitud pendiente, se perderán los registros al cambiar de tipo de solicitud, Desea Continuar?");
                    }
                    catch (Exception) { }

                    if (sure) {
                        var movementType = $(this.selectedOptions).data("type");
                        var movementTemp = $(this.selectedOptions).data("temp");

                        Movements.restart();
                        Movements.type = movementType;
                        Movements.showMoreFields(false);

                        if (movementTemp == "True")
                            Movements.temp = true;
                        else
                            Movements.temp = false;

                        if (movementType == "create") {
                            Movements.useViewer = resultCategories;
                            Movements.showMoreFields(true);
                            LoadLocationsUser();
                            jQuery("#conjuntoSelect").trigger("change");
                        }
                        else if (movementType == "movement" || movementType == "delete") {
                            Movements.useViewer = resultObjects;
                            if (movementType == "delete")
                                Movements.showMoreFields(true);

                            LoadLocationsUser();
                            LoadLocationsAlls();
                            jQuery("#selectConjuntoOrigen").trigger("change");
                            jQuery("#selectConjuntoDestiny").trigger("change");
                        }

                        Movements.movementId = this.value;
                        Movements.loadFields(this.value);
                    }
                    else {
                        $(this).val(Movements.movementId);
                    }
                });

                $("select[name=destinyOptions_A]").unbind("change.type2");
                $("select[name=destinyOptions_A]").bind("change.type2", function () {
                    if (this.value == "venta") {
                        $("#destinyOptions_A2").show();

                    }
                    else {
                        $("#destinyOptions_A2").hide();
                    }
                });

                $("#addDemandButton").unbind("click.save");
                $("#addDemandButton").bind("click.save", function () {
                    //jQuery("#demandForm")[0].reset();
                    demandModal.cleanMessages();
                    Movements.restart();
                    Movements.hideOptionalsElements();
                    Movements.idMovement = null;
                    Movements.profileFields = {};
                    selectedId = null;
                    $(".modal-header-text").text("Crear Solicitud");
                    $("#folioSection").hide();
                    $(".after-dictamining, .temp_movement").hide();
                    $(".location_destiny_vb").hide();
                    $(".tipoObs").hide();
                    $("#DivtipoObs").hide();
                    $("#save_button").show();
                    $("#assign").show();
                    /*Enable MoreFields*/
                    OrderTable.moreFields.disableForm(false);
                    OrderTable.moreFields.form_notes.hide();

                    //$(".more_fields input, .more_fields select").attr("disabled", false)
                    $("#admin_panel").modal("show");

                    //Restart the selected movement
                    $("#moveprofileSelect").val("null").prop("disabled", false).trigger("change");
                    $(".authorizationOptions").hide();
                    //Show static fields
                    $("#staticFormHeader").show();
                    $("#movementInfoTab").hide();
                    $(".updateOptions").hide();
                    $(".updateOptions2").hide();
                    $(".updateOptions3").hide();
                });

                $("#showDCTPDFButton").unbind()
                $("#showDCTPDFButton").bind("click.show", function () {
                    window.open("/Uploads/Dictamenes/" + $("#dictamen_folio").val() + ".pdf");
                });

                //$("#archivobtn2").unbind()
                //$("#archivobtn2").bind("click.addfile2", function () {
                //    $("#file2").click();
                //});

                $("#showFileButton").unbind()
                $("#showFileButton").bind("click.show1", function () {
                    window.open("/Uploads/Dictamenes/documentos/" + $("#fileb1").attr("name"));
                });

                $("#showFileButton3").unbind()
                $("#showFileButton3").bind("click.show1", function () {
                    window.open("/Uploads/Dictamenes/documentos/" + $("#fileb2").attr("name"));
                });

                $("#showFileButton4").unbind()
                $("#showFileButton4").bind("click.show1", function () {
                    window.open("/Uploads/Dictamenes/documentos/" + $("#fileb3").attr("name"));
                });

                $("#showFileButton2").unbind()
                $("#showFileButton2").bind("click.show2", function () {
                    window.open("/Uploads/Dictamenes/documentos/" + $("#file3").attr("name"));
                });


                $("#btnOtroDocumento").unbind()
                $("#btnOtroDocumento").bind("click.show4", function () {
                    $("#trBajaPlaneada2").show();
                    $("#fileb2").attr("disabled", false);
                    $("#showFileButton3").hide();
                    $("#btnOtroDocumento").hide();
                    $("#btnQuitarDocumento1").show();
                    $("#btnQuitarDocumento2").hide();
                });

                $("#btnOtroDocumento1").unbind()
                $("#btnOtroDocumento1").bind("click.show7", function () {
                    $("#trBajaPlaneada3").show();
                    $("#fileb3").attr("disabled", false);
                    $("#showFileButton4").hide();
                    $("#btnOtroDocumento1").hide();
                    $("#btnQuitarDocumento2").show();
                });

                $("#btnQuitarDocumento1").unbind()
                $("#btnQuitarDocumento1").bind("click.show5", function () {
                    $("#trBajaPlaneada2").hide();
                    $("#btnOtroDocumento").show();
                    $("#btnQuitarDocumento1").hide();

                });

                $("#btnQuitarDocumento2").unbind()
                $("#btnQuitarDocumento2").bind("click.show6", function () {
                    $("#trBajaPlaneada3").hide();
                    $("#btnOtroDocumento1").show();
                    $("#btnQuitarDocumento2").hide();

                });

                $("#showActaButton").unbind()
                $("#showActaButton").bind("click.acta", function () {
                    if ($("#acta_folio").val() == "") {
                        $.ajax({
                            url: "/ObjectAdmin/Demand/generateActaPDF",
                            method: "POST",
                            data: { demandid: Movements.idMovement },
                            success: function (data) {
                                window.open("/Uploads/Dictamenes/documentos/" + data + ".pdf");
                            }
                        });
                    } else {
                        window.open("/Uploads/Dictamenes/documentos/" + $("#acta_folio").val() + ".pdf");
                    }

                });

                //Authorize and Deny functions
                $("#createDictamen").click(function () {
                    var pass = true;
                    var selectedObjects = OrderTable.getSelectedObjects();

                    if (selectedObjects.accepted.length > 0) {
                        //remove denied class
                        selectedObjects.accepted.each(function () {
                            this.removeClass("red");
                        });

                        if (selectedObjects.denied.length > 0) {
                            OrderTable.setToDenied(selectedObjects.denied);

                            //Check for all denied notes
                            var notes = true;
                            selectedObjects.denied.each(function () {
                                var note = this.find(".denied_notes textarea").val().trim();
                                if (note == "") {
                                    _alert("warning", "Indique motivo por cada activo rechazado");
                                    notes = false;
                                    return false;
                                }
                            });
                            if (notes) {
                                //Check for "tipo de obsolescencia"
                                var rows = $("#orderTableSection #orderTable tbody").find("tr:not(.red)");
                                rows.each(function () {
                                    var typeObs = $(this).attr("typeObs");
                                    if (typeObs == "" || typeObs == undefined) {
                                        _alert("error", "Asigne tipos de Obsolescencia");
                                        pass = false;
                                        return false;
                                    }
                                });

                                if (!pass) return false;
                                confirmPass(Movements.idMovement, "Dictaminar");
                            }

                        }
                        else {
                            //Check for "tipo de obsolescencia"
                            var rows = $("#orderTableSection #orderTable tbody").find("tr:not(.red)");
                            rows.each(function () {
                                var typeObs = $(this).attr("typeObs");
                                if (typeObs == "" || typeObs == undefined) {
                                    _alert("error", "Asigne tipos de Obsolescencia");
                                    pass = false;
                                    return false;
                                }
                            });

                            if (!pass) return false;
                            confirmPass(Movements.idMovement, "Dictaminar");
                        }
                    }
                    else
                        _alert("error", "Seleccione los elementos a Autorizar");


                });
                $("#updateMovement").click(function () {
                    Movements.updateMovement();
                });

                $("#updateMovement2").click(function () {
                    Movements.updateMovement2();
                });
                $("#authorizeMovement").click(function () {

                    if ("@upd" == "u" && "@updc" == "u") {
                        var selectedObjects = OrderTable.getSelectedObjects();
                        if (selectedObjects.accepted.length > 0) {
                            //remove denied class
                            selectedObjects.accepted.each(function () {
                                this.removeClass("red");
                            });

                            if (selectedObjects.denied.length > 0) {
                                OrderTable.setToDenied(selectedObjects.denied);

                                //Check for all denied notes
                                var notes = true;
                                selectedObjects.denied.each(function () {
                                    var note = this.find(".denied_notes textarea").val().trim();
                                    if (note == "") {
                                        _alert("warning", "Indique motivo por cada activo rechazado");
                                        notes = false;
                                        return false;
                                    }
                                });
                                if (notes) {
                                    confirmPass(Movements.idMovement, "Autorizar");
                                }

                            }
                            else
                                confirmPass(Movements.idMovement, "Autorizar");
                        }
                        else
                            _alert("error", "Seleccione los elementos a Autorizar");
                    } else {
                        _alert("error", "El usuario no tiene permiso para autorizar");

                    }


                });
                $("#approveMovement").click(function () {
                    var getApproved = true
                    OrderTable.table.find("tr:not(.denied)").each(function () {
                        if ($(this).find("select").val() == "") {
                            getApproved = false;
                            _alert("error", "Asigne un tipo de activo");
                            $(this).find("select").trigger("click");
                            return false;
                        }
                    });
                    if (getApproved)
                        confirmPass(Movements.idMovement, "Approve");
                });

                $("#denyMovement").click(function () {
                    confirmPass(Movements.idMovement, "Denegar");
                });

                //Show hide details
                $(".details-button button").on("click", Movements.showHideDetails);

                //Add selected elements
                $("#addToTable").on("click", function () {
                    if (Movements.type != "" && Movements.type != undefined) {
                        var selectedItems = Movements.useViewer.getSelectedItems();

                        if (selectedItems.length == 0)
                            _alert("warning", "Selecciona al menos 1 elemento");
                        else {
                            var location = $("#selectOrigen").val();
                            var locationText = $("#selectOrigen option:selected").text();

                            var locationDestiny = $("#selectDestiny").val();
                            var locationDestinyText = $("#selectDestiny option:selected").text();

                            // Fields required for creating
                            if (Movements.type == "create") {

                                for (var s in selectedItems) {
                                    var item = selectedItems[s];
                                    var extra = {
                                        location: location,
                                        locationText: locationText
                                    }
                                    OrderTable.addRow(item, extra, "create", true);
                                }
                            }
                                // Fields required for movements
                            else if (Movements.type == "movement") {

                                for (var s in selectedItems) {
                                    var item = selectedItems[s];
                                    var extra = {
                                        location: location,
                                        locationText: locationText,
                                        locationDestiny: locationDestiny,
                                        locationDestinyText: locationDestinyText
                                    };
                                    OrderTable.addRow(item, extra, "movement", true);
                                }
                                if (Movements.temp == true) {
                                    OrderTable.hideHeaders(["location_destiny"]);
                                }
                                $(".location_destiny_vb").hide();
                            }
                            else if (Movements.type == "delete") {
                                for (var s in selectedItems) {
                                    var item = selectedItems[s];
                                    var extra = {
                                        location: location,
                                        locationText: locationText,
                                    };
                                    OrderTable.addRow(item, extra, "delete", true);
                                }
                            }

                            _alert("success", selectedItems.length + " Elementos agregados");
                            OrderTable.updateCounter();
                            Movements.useViewer.removeSelectedItems();
                        }
                    }
                    else {
                        _alert("error", "Seleccione un tipo de movimiento");
                    }
                });

                //Save the generated order
                var saveOrder = function (objects, extra, profileFields) {
                    var order = {};
                    var extraKeys = Object.keys(extra);
                    order.objects = objects;
                    order.type = Movements.type;
                    order.movement = Movements.movementId;
                    order.demandID = selectedId;
                    order.profileFields = profileFields;
                    //Add extra fields to the order
                    order.extras = {};
                    for (var e in extraKeys) {
                        //Only if not repeated
                        if (!order.hasOwnProperty(extraKeys[e])) {
                            order.extras[extraKeys[e]] = extra[extraKeys[e]];
                        }
                    }

                    if (order.type == "delete") {
                        order.deleteType = $("select[name=deleteType]").val();

                        if (order.deleteType == "planeada") {
                            order.destinyOptions = $("select[name=destinyOptions_A]").val();
                            if (order.destinyOptions == "venta") {
                                if ($("#facturarequired").prop("checked") == true) {
                                    order.invoiceRequired = 1;
                                } else { order.invoiceRequired = 0; }
                            }
                        }

                        else if (order.deleteType == "no_planeada")
                            order.destinyOptions = $("select[name=destinyOptions_B]").val();

                        order.assetType = $("#assetTypeFilter select").val();
                    }
                    $.ajax({
                        url: "/ObjectAdmin/Demand/saveDemand",
                        method: "POST",
                        data: { demand: JSON.stringify(order) },
                        beforeSend: function () { _loading() },
                        success: function (data) {
                            $("#admin_panel").modal("hide");
                            $("#estatusSelect").trigger("change");
                            $("#estatusSelect2").trigger("change");
                            LoadAutorizacion2();
                            LoadLastMovements();
                            _alert("success", "Solicitud Guardada");
                        },
                        complete: function () { _loading() }
                    });

                };

                //Event to send the order to save
                jQuery("#save_button").bind("click.validate", function () {
                    var objects = OrderTable.getObjects();
                    var selectedItems = Movements.useViewer.getSelectedItems();

                    if (Movements.validateFields()) {
                        var extraFields = Movements.getExtraFields();
                        var profileFields = Movements.getProfileFields();

                        //No objects in order table, check for selected objects
                        if (objects.length == 0) {
                            if (selectedItems.length == 0)
                                _alert("warning", "Selecciona al menos 1 elemento");
                            else {
                                _confirm({
                                    title: "Guardar Solicitud",
                                    message: "Desea generar esta solicitud con " +
                                        selectedItems.length + " elementos?",
                                    action: function () {
                                        $("#addToTable").trigger("click");
                                        var objects = OrderTable.getObjects();
                                        OrderTable.removeAllRows();

                                        //Send order to save
                                        saveOrder(objects, extraFields, profileFields);
                                    }
                                });
                            }
                        }
                            //Check for objects in order table
                        else {
                            _confirm({
                                title: "Guardar Solicitud",
                                message: "Desea generar esta solicitud con " +
                                    objects.length + " elementos?",
                                action: function () {
                                    var objects = OrderTable.getObjects();
                                    OrderTable.removeAllRows();

                                    //Send order to save
                                    saveOrder(objects, extraFields, profileFields);
                                }
                            });
                        }
                    }

                });

                //Using custom scrollbar
                $("#movementView #details").perfectScrollbar({
                    wheelSpeed: 250
                });

            }
        }// End of Movents object

        Movements.init();

    });

    // Results Table
    var categoriesOptions = {
        id: "_id",
        name: "name",
        image: "image_thumb",
        //permissions: [upd],
        data: { "referenceid": "objectReference" },
        showSelecters: true,
        @{/*
                String columnText = "columnNames: { 'name': 'Nombre', 'nameCategory':'Categoría','EPC': 'EPC', 'profileFields._HTKFieldPreciocmp': 'Precio Compra'";
                foreach(JObject field in (JArray)ViewData["fields"]){
                    columnText += ", '" + field["name"].ToString() + "':'" + field["label"].ToString() + "'";
                }
                columnText += ", 'Creator': 'Creador', 'CreatedDate': 'Fecha de Creación', 'LastmodDate': 'Última Modificación' }";
                new HtmlString(columnText);*/
            }
        columnNames: { "name": "Descripción", "Creator": "Creador", "CreatedDate": "Fecha de Creación" },
        columnShow: { "name": 1, "Creator": 1, "CreatedDate": 1 },
        displayConfiguration: {
            tableOptions: {
                onEditRowAction: null,
                onDeleteRowAction: null,
                onSelectRowAction: function (data, element) {
                    Movements.setDetails(data);
                }
            },

            tilesOptions: {
                onEditTileAction: null,
                onDeleteTileAction: null,
                onSelectTileAction: function (data, element) {
                    //var tr = jQuery(this).closest("div.tile");
                    Movements.setDetails(data);
                },
                showSelectOption: true
            },

            sliderOptions: {
                onEditTileAction: null,
                onDeleteTileAction: null,
                onSelectTileAction: null
            }
        }
    };

    var objectsOptions = {
        id: "_id",
        name: "name",
        image: "image_thumb",
        //permissions: [upd],
        data: { "referenceid": "objectReference" },
        showSelecters: true,
        @{/*
                String columnText = "columnNames: { 'name': 'Nombre', 'nameCategory':'Categoría','EPC': 'EPC', 'serie':'Serie','profileFields._HTKFieldPreciocmp': 'Precio Compra'";
                foreach(JObject field in (JArray)ViewData["fields"]){
                    columnText += ", '" + field["name"].ToString() + "':'" + field["label"].ToString() + "'";
                }
                columnText += ", 'Creator': 'Creador', 'CreatedDate': 'Fecha de Creación', 'LastmodDate': 'Última Modificación' }";
                new HtmlString(columnText);*/
            }
        columnNames: { "name": "Descripción", "EPC": "EPC", "serie": "Serie", "location": "Ubicación", " CreatedDate": "Fecha de Creación" },
        columnShow: { "name": 1, "EPC": 1, "serie": 1, "location": 1, "CreatedDate": 1 },
        displayConfiguration: {
            tableOptions: {
                onEditRowAction: null,
                onDeleteRowAction: null,
                onSelectRowAction: function (data, element) {
                    Movements.setDetails(data);
                }
            },

            tilesOptions: {
                onEditTileAction: null,
                onDeleteTileAction: null,
                onSelectTileAction: function (data, element) {
                    Movements.setDetails(data);
                },
                showSelectOption: true
            },

            sliderOptions: {
                onEditTileAction: null,
                onDeleteTileAction: null,
                onSelectTileAction: null
            }
        }
    };

    var resultCategories = new RivkaViewer("results", categoriesOptions);
    var resultObjects = new RivkaViewer("results", objectsOptions);


</script>
<script src="~/RivkaBase/Scripts/RivkaViewer/RivkaViewer.js"></script>
<script>
        @*var upd = @upd;
        var del = @del;*@
    //var updc = "";
    //var delc = "";
    var categoryid = "";
    var locat = null;
    var viewer = new RivkaViewer("demandsTable");

    var tree = new RivkaTree("category_tree", {
        method: RivkaTree.METHODS.AJAX,
        url: "/ObjectAdmin/Demand/getNodeContent",
        idKey: "_id",
        nameKey: "name",
        onNodeSelectAction: function () {
            var id = jQuery(this).closest("li").data("idcategory");
            loadObjects(id, null);
        }
    });

    var tree2 = new RivkaTree("location_tree", {
        method: RivkaTree.METHODS.AJAX,
        url: "/ObjectAdmin/Demand/getNodeContent2",
        idKey: "_id",
        nameKey: "name",
        onNodeSelectAction: function () {
            var id = jQuery(this).closest("li").data("idcategory");

        }
    });

    var tree3 = new RivkaTree("location_tree2", {
        method: RivkaTree.METHODS.AJAX,
        url: "/ObjectAdmin/Demand/getNodeContent2",
        idKey: "_id",
        nameKey: "name",
        onNodeSelectAction: function () {
            var id = jQuery(this).closest("li").data("idcategory");
            var typemove = jQuery("#moveprofileSelect").data("type");
            locat = id;
            loadObjectsReal(id, typemove, selectedId);
        }
    });

    var tree4 = new RivkaTree("location_tree3", {
        method: RivkaTree.METHODS.AJAX,
        url: "/ObjectAdmin/Demand/getNodeContent2",
        idKey: "_id",
        nameKey: "name",
        onNodeSelectAction: function () {
            var id = jQuery(this).closest("li").data("idcategory");
        }
    });

    //ImagePreview----------------------------------------------------

    var inputnew1 = document.getElementById("file_new1"),
        formdata = false;

    function showUploadedItemnew1(source) {

        jQuery('#img_prenew1').attr('src', source);
        jQuery('#img_prenew1').data("zoom-images")
        jQuery(".zoomContainer").remove();
        bindzoom(10)
    }

    function addPhotonew1(source) {
        if (window.FileReader) {
            reader = new FileReader();
            reader.onloadend = function (e) {
                showUploadedItemnew1(e.target.result);
            };
            reader.readAsDataURL(source);
        }
    }

    if (window.FormData) {
        formdata = new FormData();
    }

    inputnew1.addEventListener('change', function (evt) {
        var file = this.files[0];

        if (!!file.type.match(/image.*/)) {
            addPhotonew1(file);
            // input.attr("name", file.name);
        }

    }, false);
    //ImagePreview----------------------------------------------------
    var inputb1 = document.getElementById("fileb1"),
        formdata = false;

    function showUploadedItem(source) {

        jQuery('#img_pre1').attr('src', source);

    }

    function addPhoto(source) {
        if (window.FileReader) {
            reader = new FileReader();
            reader.onloadend = function (e) {
                showUploadedItem(e.target.result);
            };
            reader.readAsDataURL(source);
        }
    }

    if (window.FormData) {
        formdata = new FormData();
    }

    inputb1.addEventListener('change', function (evt) {
        var file = this.files[0];

        if (!!file.type.match(/image.*/)) {
            addPhoto(file);
            // input.attr("name", file.name);
        }

    }, false);
    //EndImagePreview-------------------------------------


    //ImagePreview----------------------------------------------------
    //ImagePreview----------------------------------------------------

    var inputnew = document.getElementById("file_new"),
        formdata = false;

    function showUploadedItemnew(source) {

        jQuery('#img_prenew').attr('src', source);
        jQuery('#img_prenew').data("zoom-images")
        jQuery(".zoomContainer").remove();
        bindzoom(10)
    }

    function addPhotonew(source) {
        if (window.FileReader) {
            reader = new FileReader();
            reader.onloadend = function (e) {
                showUploadedItemnew(e.target.result);
            };
            reader.readAsDataURL(source);
        }
    }

    if (window.FormData) {
        formdata = new FormData();
    }

    inputnew.addEventListener('change', function (evt) {
        var file = this.files[0];

        if (!!file.type.match(/image.*/)) {
            addPhotonew(file);
            // input.attr("name", file.name);
        }

    }, false);

    var inputb2 = document.getElementById("fileb2"),
        formdata = false;

    function showUploadedItem2(source) {

        jQuery('#img_pre2').attr('src', source);

    }

    function addPhoto2(source) {
        if (window.FileReader) {
            reader = new FileReader();
            reader.onloadend = function (e) {
                showUploadedItem2(e.target.result);
            };
            reader.readAsDataURL(source);
        }
    }

    if (window.FormData) {
        formdata = new FormData();
    }

    inputb2.addEventListener('change', function (evt) {
        var file = this.files[0];

        if (!!file.type.match(/image.*/)) {
            addPhoto2(file);
            // input.attr("name", file.name);
        }

    }, false);
    //EndImagePreview-------------------------------------

    //ImagePreview----------------------------------------------------

    var inputb3 = document.getElementById("fileb3"),
        formdata = false;

    function showUploadedItem4(source) {

        jQuery('#img_pre3').attr('src', source);

    }

    function addPhoto4(source) {
        if (window.FileReader) {
            reader = new FileReader();
            reader.onloadend = function (e) {
                showUploadedItem4(e.target.result);
            };
            reader.readAsDataURL(source);
        }
    }

    if (window.FormData) {
        formdata = new FormData();
    }

    inputb3.addEventListener('change', function (evt) {
        var file = this.files[0];

        if (!!file.type.match(/image.*/)) {
            addPhoto4(file);
            // input.attr("name", file.name);
        }

    }, false);
    //EndImagePreview-------------------------------------

    //ImagePreview----------------------------------------------------

    var input2 = document.getElementById("file3"),
        formdata = false;

    function showUploadedItem3(source) {

        jQuery('.labelnom').text(source);

    }

    function addPhoto3(source) {
        if (window.FileReader) {
            reader = new FileReader();
            reader.onloadend = function (e) {
                showUploadedItem3(e.target.result);
            };
            reader.readAsDataURL(source);
        }
    }

    if (window.FormData) {
        formdata = new FormData();
    }

    input2.addEventListener('change', function (evt) {
        var file = this.files[0];
        jQuery('.labelnom').text(file.name);
      //  if (!!file.type.match(/image.*/)) {
         //   addPhoto3(file);
            // input.attr("name", file.name);
     //   }

    }, false);
    //EndImagePreview-------------------------------------


    //ImagePreview----------------------------------------------------

    var inputf = document.getElementById("filef"),
        formdata = false;

    function showUploadedItemf(source) {
        jQuery('#img_pref').attr('src', source);
        jQuery('.labelnom').text(source);

    }

    function addPhotof(source) {
        if (window.FileReader) {
            reader = new FileReader();
            reader.onloadend = function (e) {
                showUploadedItemf(e.target.result);
            };
            reader.readAsDataURL(source);
        }
    }

    if (window.FormData) {
        formdata = new FormData();
    }

    inputf.addEventListener('change', function (evt) {
        var file = this.files[0];
        jQuery('.labelnom').text(file.name);
        //  if (!!file.type.match(/image.*/)) {
           addPhotof(file);
        // input.attr("name", file.name);
        //   }

    }, false);
    //EndImagePreview-------------------------------------

    jQuery("#total").maskMoney({ allowNegative: false, precision: 0 });

    function getAuthorizationTable(demandid) {
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/setAuthorizationTable",
            type: "POST",
            data: { iddemand: demandid },
            success: function (data) {
                var result = JSON.parse(data);
                var cadena = "";
                if (result.tabla == "") cadena = "<tr><td colspan='3'><p class='passCenter'>No hay autorizaciones...</p></td></tr>";
                else cadena = result.tabla;
                jQuery("#authorizationTable tbody").html(cadena);

                if (result.motivo == "") jQuery("#divmotivo").hide();
                else {
                    jQuery("#lblmotivo").text(result.motivo);
                    jQuery("#divmotivo").show();
                }
            },
            error: function () {
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function loadObjects(categoryid, objectid) {
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/loadObjectsReference",
            data: { categoryid: categoryid },
            success: function (data) {
                jQuery("#ObjectSelect2").html(data);
                if (objectid != null)
                    jQuery("#ObjectSelect2").val(objectid);
            },
            error: function () {
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function loadObjectsReal(loationid, type, demanid) {
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/loadObjects",
            data: { location_id: loationid, typemove: type, demandid: demanid },
            success: function (data) {

                jQuery("#tableobjetos tbody").html(data);

            },
            error: function () {
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function loadObjectsReal2(demandid, type) {
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/loadObjects2",
            data: { demand_id: demandid, typemove: type },
            success: function (data) {
                if (type == "movement") {
                    jQuery("#labeltitulo").text("Los objetos traspasados");
                }
                else {
                    jQuery("#labeltitulo").text("Los objetos eliminados");
                }

                jQuery("#tableobjetos2 tbody").html(data);

                if (data != "") {
                    jQuery("#tableobjetos2").show();
                }

            },
            error: function () {
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function confirmPass(iddemand, tipo) {
        if (tipo == "Denegar") {
            jQuery("#passconfirmmodal").modal("show");
            jQuery(".modal-header-text").text("Denegar Solicitud");
            jQuery("#passyes_button").data("iddemand", iddemand);
            jQuery("#passyes_button").data("tipo", tipo);
        }
        else {
            if (tipo == "Autorizar") {
                _confirm({
                    title: "Autorizar Solicitud",
                    message: "Desea Autorizar esta Solicitud?",
                    action: function () {
                        autorizarSolicitud(iddemand);
                    }
                })
            }
            else if (tipo == "Dictaminar") {

                _confirm({
                    title: "Generar Dictamen",
                    message: "Desea generar el dictamen para esta solicitud?",
                    action: function () {
                        Movements.updateDeleteObjects(iddemand);
                        dictaminarSolicitud(iddemand);
                    }
                })
            } else if (tipo == "Approve") {
                _confirm({
                    title: "Dar Visto Bueno",
                    message: "Desea dar el Visto Bueno para esta solicitud?",
                    action: function () {
                        approveSolicitud(iddemand);
                    }
                })
            }
        }
        //  jQuery("#divmot").hide();

        //jQuery("#passconfirmmodal").find(".modal-header-text").text(tipo + " Solicitud");
        //jQuery("#passyes_button").val(tipo);
        //jQuery("#passconfirmmodal").modal("show");
        //jQuery("#passyes_button").data("iddemand", iddemand);
        //jQuery("#passyes_button").data("tipo", tipo);
    }



    function autorizarSolicitud(iddemand) {
        var iduser = "@Session["_id"].ToString()";
        var selectedObjects = OrderTable.getSelectedObjects();
        var deniedObjects = [];

        selectedObjects.denied.each(function () {
            deniedObjects.push({
                id: this.data("id"),
                orderNumber: this.find(".orderNumber").val(),
                deniedNote: this.find(".denied_notes textarea").val()
            });
        });

        _loading();
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getDemandApproved",
            type: "POST",
            data: { iddemand: iddemand, userid: iduser, deniedObjects: JSON.stringify(deniedObjects) },
            success: function (data) {
                model.init();
                _loading();
                model.restart();
                LoadAutorizacion2();
                LoadLastMovements();
                jQuery("#admin_panel").modal("hide");
                _alert("success", "Guardado Correctamente");
            },
            error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function approveSolicitud(iddemand) {
        var iduser = "@Session["_id"].ToString()";
        var assetTypes = [];
        var valuebooks = [];
        var locations = [];

        OrderTable.table.find("tr:not(.denied)").each(function () {
            assetTypes.push({
                id: jQuery(this).data("id"),
                orderNumber: jQuery(this).find(".orderNumber").val(),
                assetType: jQuery(this).find(".asset_type_field select").val()
            });
        });

        OrderTable.table.find("tr:not(.denied)").each(function () {
            valuebooks.push({
                id: jQuery(this).data("id"),
                orderNumber: jQuery(this).find(".orderNumber").val(),
                value: jQuery(this).find(".value_books_field input").val()
            });
        });

        OrderTable.table.find("tr:not(.denied)").each(function () {
            locations.push({
                id: jQuery(this).data("id"),
                orderNumber: jQuery(this).find(".orderNumber").val(),
                location_destiny: jQuery(this).find(".location_destiny_vb").val()
            });
        });

        _loading();
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getDemandApprovedGood",
            type: "POST",
            data: { iddemand: iddemand, userid: iduser, assetTypeObjects: JSON.stringify(assetTypes), valuebookObjects: JSON.stringify(valuebooks), locationsObjects: JSON.stringify(locations) },
            success: function (data) {
                model.init();
                _loading();
                model.restart();
                LoadAutorizacion2();
                LoadLastMovements();
                jQuery("#admin_panel").modal("hide");
                _alert("success", "Guardado Correctamente");
            },
            error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function dictaminarSolicitud(iddemand) {
        var iduser = "@Session["_id"].ToString()";
        var selectedObjects = OrderTable.getSelectedObjects();
        var deniedObjects = [];

        selectedObjects.denied.each(function () {
            deniedObjects.push({
                id: this.data("id"),
                orderNumber: this.find(".orderNumber").val(),
                deniedNote: this.find(".denied_notes textarea").val()
            });
        });

        _loading();
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getDemandAdjudicated",
            type: "POST",
            data: { iddemand: iddemand, userid: iduser, deniedObjects: JSON.stringify(deniedObjects) },
            success: function (data) {
                model.init();
                _loading();
                model.restart();
                LoadAutorizacion2();
                LoadLastMovements();
                jQuery("#admin_panel").modal("hide");
                window.open(data, "_blank");
                _alert("success", "Guardado Correctamente");
            },
            error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function denegarSolicitud(iddemand, texto) {
        var iduser = "@Session["_id"].ToString()";
        _loading();
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/DenyDemand",
            type: "POST",
            data: { iddemand: iddemand, userid: iduser, nota: texto },
            success: function () {
                model.init();
                _loading();
                model.restart();
                jQuery("#admin_panel").modal("hide");
                jQuery("#passconfirmmodal").modal("hide");
                LoadAutorizacion2();
                LoadLastMovements();
                _alert("success", "Guardado Correctamente");
            },
            error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function Verdetalles2(iddemand) {

        Movements.idMovement = iddemand;
        Movements.showInfo();

    }

    function Verdetalles(iddemand) {

        Movements.idMovement = iddemand;
        Movements.showInfo("authorize");
     //   LoadLastMovements();
        /*
        var demandId = null;
        demandId = iddemand;

        selectedId = demandId;
        getAuthorizationTable(demandId);
        jQuery("#detallesModal").modal("show");
        jQuery("#tableobjetos2").hide();
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getDemandDetails",
            data: { selectedID: demandId },
            type: "POST",
            success: function (data) {
                var details = JSON.parse(data);
                jQuery("#datosDemand").html("");
                jQuery("#datosDemand").append(
                        jQuery("<div>").html("<label id='foliodetail'  data-idLocation='" + details._id + "' ><strong> Folio:  </strong>" + details.folio + "</label>")
                    ).append(
                        jQuery("<div>").html("<label id='movedetail'  data-idLocation='" + details._id + "' ><strong> Movimiento:</strong> " + details.movement + "</label>")
                    ).append(
                        jQuery("<div>").html("<label id='objectdetail'  data-idLocation='" + details._id + "' ><strong> Object: </strong>" + details.object + "</label>")
                    ).append(
                        jQuery("<div>").html("<label id='totaldetail'  data-idLocation='" + details._id + "' ><strong> Cantidad: </strong>" + details.total + "</label>")
                    ).append(
                        jQuery("<div>").html("<label id='statusdetail'  data-idLocation='" + details._id + "' ><strong> Estatus: </strong>" + details.status + "</label>")
                    ).append(
                        jQuery("<div>").html("<label id='creatordetail'  data-idLocation='" + details._id + "' ><strong> Creador: </strong>" + details.Creator + "</label>")
                    ).append(
                        jQuery("<div>").html("<label id='createddatedetail'  data-idLocation='" + details._id + "' ><strong> Fecha de Creación: </strong>" + details.CreatedDate + "</label>")
                    );

                editingDemandData = data;
                demandModal.loadProfileFieldsTitles2(details.movementId);
                demandModal.loadProfileFields2(details.movementId);

                jQuery("#labeltitulo").text("");
                if (details.typeMovement != "create")
                    loadObjectsReal2(details._id, details.typeMovement);
            },
            error: function () {
                _alert("error", "Ha ocurrido un error");
            }

        });
        */
    }

    function LoadAutorizacion() {
        var iduser = "@Session["_id"].ToString()";
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getAutorizaciones",
            type: "POST",
            data: { userid: iduser },
            success: function (data) {
                var details = JSON.parse(data);
                if (details.cadena == "") details.cadena = "<tr><td colspan='2'><p class='passCenter'>No hay autorizaciones...</p></td></tr>";

                //Trying to destroy dataTable
                try {
                    autorizationTable.fnDestroy();
                }
                catch (e) { }

                jQuery("#authoTable tbody").html(details.cadena);

                try {
                    autorizationTable = jQuery("#authoTable").dataTable({
                        "sPaginationType": "full_numbers",
                        "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                        "iDisplayLength": 10,
                        "oLanguage": {
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                            "sSearch": "Filtro",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Ultimo",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"

                            },
                            "sEmptyTable": "Tabla Sin Datos"
                        }
                    });
                } catch (e) { }
                jQuery("#counterauthos").text(details.cont);
            }
        });
    }

    function LoadLastMovements() {
        var iduser = "@Session["_id"].ToString()";
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getlastMovements",
            type: "POST",
            data: { userid: iduser },
            success: function (data) {
                var details = data;
                if (data == "") details = "<tr><td colspan='6'><p class='passCenter'>No hay Movimientos...</p></td></tr>";

                jQuery("#demandsTable2 tbody").html(details);

                //try {
                //    autorizationTable = jQuery("#authoTable").dataTable({
                //        "sPaginationType": "full_numbers",
                //        "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                //        "iDisplayLength": 10,
                //        "oLanguage": {
                //            "sLengthMenu": "Mostrar _MENU_ registros",
                //            "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                //            "sSearch": "Filtro",
                //            "oPaginate": {
                //                "sFirst": "Primero",
                //                "sLast": "Ultimo",
                //                "sNext": "Siguiente",
                //                "sPrevious": "Anterior"

                //            },
                //            "sEmptyTable": "Tabla Sin Datos"
                //        }
                //    });
                //} catch (e) { }
                //jQuery("#counterauthos").text(details.cont);
            }
        });
    }

    function SaveLastMovements(demand) {
        var iduser = "@Session["_id"].ToString()";
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/saveLastMovement",
            type: "POST",
            data: { userid: iduser, demand:demand },
            success: function (data) {
                var details = data;
                if (data == "") details = "<tr><td colspan='6'><p class='passCenter'>No hay Movimientos...</p></td></tr>";

                jQuery("#demandsTable2 tbody").html(details);

            }
        });
    }

    function LoadSubLocations(idlocat) {
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/loadLocations",
            type: "POST",
            async:false,
            data: { conjunto: idlocat },
            success: function (data) {
                jQuery("#ubicacionSelect").html(data);
            }
        });
    }

    function LoadSubLocations2(idlocat, path) {
        debugger;
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/loadLocations",
            type: "POST",
            async: false,
            data: { conjunto: idlocat },
            success: function (data) {
                if(idlocat!= "null"){
                    if(path==1)
                        jQuery("#selectOrigen").html(data);
                    if (path == 2)
                        jQuery("#selectDestiny").html(data);
                }
            }
        });
    }

    function LoadLocationsUser() {
        var iduser = "@Session["_id"].ToString()";
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/loadLocationsConjuntoUser",
            type: "POST",
            async: false,
            data: { userid: iduser },
            success: function (data) {
                jQuery("#selectConjuntoOrigen").html(data);
                jQuery("#conjuntoSelect").html(data);
            }
        });
    }
    function LoadLocationsAlls() {
        var iduser = "@Session["_id"].ToString()";
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/loadLocationsConjuntoAlls",
            type: "POST",
            async: false,
            data: { userid: iduser },
            success: function (data) {
               // jQuery("#selectConjuntoOrigen").html(data);
                jQuery("#selectConjuntoDestiny").html(data);
            }
        });
    }

    function LoadLocationsAlls2(iditem) {
        var iduser = "@Session["_id"].ToString()";
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/loadLocations",
            type: "POST",
            async: false,
            data: { conjunto: "" },
            success: function (data) {
                OrderTable.table.find("tr[data-id=" + iditem + "]").find(".location_destiny_vb").html(data);
               // jQuery(".location_destiny_vb").html(data);
            }
        });
    }


    function LoadAutorizacionauto(selectx,callback){
        var select, select1;
        select = selectx;
        select1 = jQuery("#estatusSelect2").val();
        var iduser = "@Session["_id"].ToString()";
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getAutorizaciones2",
            data: { movement: select, stats: select1, userid: iduser },
            type: "POST",
            success: function (data) {
                var details = JSON.parse(data);
                if (details.cadena == "") details.cadena = "<tr><td colspan='2'><p class='passCenter'>No hay autorizaciones...</p></td></tr>";

                //Trying to destroy dataTable
                try {
                    autorizationTable.fnDestroy();
                }
                catch (e) { }

                jQuery("#authoTable tbody").html(details.cadena);

                try {
                    autorizationTable = jQuery("#authoTable").dataTable({
                        "sPaginationType": "full_numbers",
                        "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                        "iDisplayLength": -1,
                        "oLanguage": {
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                            "sSearch": "Filtro",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Ultimo",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"

                            },
                            "sEmptyTable": "Tabla Sin Datos"
                        }
                    });
                } catch (e) { }
                jQuery("#counterauthos").text(details.cont);
                callback();
            }
        });
    }

    function LoadAutorizacion2() {
        var select, select1;
        select = jQuery("#movSelect").val();
        select1 = jQuery("#estatusSelect2").val();
        var iduser = "@Session["_id"].ToString()";
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getAutorizaciones2",
            data: { movement: select, stats: select1, userid: iduser },
            type: "POST",
            success: function (data) {
                var details = JSON.parse(data);
                if (details.cadena == "") details.cadena = "<tr><td colspan='2'><p class='passCenter'>No hay autorizaciones...</p></td></tr>";

                //Trying to destroy dataTable
                try {
                    autorizationTable.fnDestroy();
                }
                catch (e) { }

                jQuery("#authoTable tbody").html(details.cadena);

                try {
                    autorizationTable = jQuery("#authoTable").dataTable({
                        "sPaginationType": "full_numbers",
                        "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                        "iDisplayLength": 10,
                        "oLanguage": {
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                            "sSearch": "Filtro",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Ultimo",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"

                            },
                            "sEmptyTable": "Tabla Sin Datos"
                        }
                    });
                } catch (e) { }
                jQuery("#counterauthos").text(details.cont);
            }
        });
    }

    function gettypeMovement(movementType) {

        if (movementType == "create") {
            jQuery("#divcategorias").show();
            jQuery("#divlocations").show();
            jQuery("#divobjsreferencia").show();
            jQuery("#divcantidad").show();
            jQuery("#divobjetosreales").hide();
            jQuery("#divlocations2").hide();
        }
        else {
            jQuery("#divcategorias").hide();
            jQuery("#divlocations").hide();
            jQuery("#divobjsreferencia").hide();
            jQuery("#divcantidad").hide();
            jQuery("#divobjetosreales").show();
            jQuery("#todos").prop("checked", false);
            jQuery("#lblocation2").text("");
            jQuery("#lblocation2").data("locationid", "null")
            jQuery("#divlocations2").show();
            //  loadObjectsReal(null);

            if (data == "movement") jQuery("#btnLocation").show();
            else jQuery("#btnLocation").hide();
        }

    }

    function newLocation(thisobj) {
        tree4.init({ id: "null", name: "Home" });
        selectedIdObj = thisobj;
        jQuery("#location_modal_process").modal("show");
    }

    function ocultarEdit() {
        var texto = "";
        var selectedArray = jQuery("#demandsTable_rvtable tr");
        for (i = 0; i < selectedArray.length; i = i + 1) {
            texto = jQuery(selectedArray[i]).find("td[class='status']").text();
            if (texto != "Pendiente") {
                jQuery(jQuery(jQuery(selectedArray[i]).find("i[class='icon-edit']")).closest("a")).hide();
            }
        }
    }

    function saveDemandMovement() {
        var selecteds = jQuery(".checker:checked");
        if (selecteds.length == 0) {
            _alert("error", "Debe de seleccionar!");
            return;
        }

        var selectedIdArray = [];
        var idobjeto;
        for (i = 0; i < selecteds.length; i = i + 1) {
            idobjeto = jQuery(selecteds[i]).closest("tr").data("id");
            selectedIdArray.push(jQuery(selecteds[i]).closest("tr").data("id") + "|" + jQuery("#label" + idobjeto).data("locationid"));
        }
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/SaveMovement",
            datatype: "json",
            type: "POST",
            //async: false,
            data: { array: selectedIdArray },
            traditional: true,
            success: function (data) {
                _alert("success", "Movimientos hechos Correctamente");
            }
        });

    }

    var model = {

        demandData: null,

        init: function () {
            jQuery.ajax({
                url: "/ObjectAdmin/Demand/getDemamdTable",
                type: "POST",
                //async: false,
                data: { movement: "null", stats: "null" },
                beforeSend: _loading(),
                success: function (data) {
                    _loading();
                    data = JSON.parse(data);
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].movement == "Salida Temporal") {
                        //    data[i].status = movementStatus["temporal"][data[i].status];
                        } else {
                            data[i].status = movementStatus[data[i].typeStatus][data[i].status];
                        }
                    }
                    data = JSON.stringify(data);
                    model.demandData = data;
                    var dataOptions = { id: "_id", name: "folio", permissions: ["@del"] };
                    viewer.setData(model.demandData, dataOptions);
                    table.print();
                }
            });
        },

        restart: function () {
            selectedId = null;
            selectedDemand = null;
            selectedMove = null;
            demandError = null;
            editingDemandData = null;
            locat = null;
        }
    };

    var content = {


        onClientClickAction: function () {
            var demandId = null;
            if (table.display == "table") {
                demandId = jQuery(this).closest("tr").data("id");
            }
            selectedId = demandId;
            //getAuthorizationTable(demandId);

            //jQuery("#detallesModal").modal("show");
            //jQuery("#tableobjetos2").hide();

            Movements.idMovement = demandId;
            Movements.showInfo();
         //   LoadLastMovements();
            //jQuery.ajax({
            //    url: "/ObjectAdmin/Demand/getDemandDetails",
            //    data: { selectedID: demandId },
            //    type: "POST",
            //    success: function (data) {
            //        var details = JSON.parse(data);
            //        jQuery("#datosDemand").html("");
            //        jQuery("#datosDemand").append(
            //                jQuery("<div>").html("<label id='foliodetail'  data-idLocation='" + details._id + "' ><strong> Folio:  </strong>" + details.folio + "</label>")
            //            ).append(
            //                jQuery("<div>").html("<label id='movedetail'  data-idLocation='" + details._id + "' ><strong> Movimiento:</strong> " + details.movement + "</label>")
            //            ).append(
            //                jQuery("<div>").html("<label id='objectdetail'  data-idLocation='" + details._id + "' ><strong> Objeto: </strong>" + details.object + "</label>")
            //            ).append(
            //                jQuery("<div>").html("<label id='totaldetail'  data-idLocation='" + details._id + "' ><strong> Cantidad: </strong>" + details.total + "</label>")
            //            ).append(
            //                jQuery("<div>").html("<label id='statusdetail'  data-idLocation='" + details._id + "' ><strong> Estatus: </strong>" + details.status + "</label>")
            //            ).append(
            //                jQuery("<div>").html("<label id='creatordetail'  data-idLocation='" + details._id + "' ><strong> Creador: </strong>" + details.Creator + "</label>")
            //            ).append(
            //                jQuery("<div>").html("<label id='createddatedetail'  data-idLocation='" + details._id + "' ><strong> Fecha de Creación: </strong>" + details.CreatedDate + "</label>")
            //            );

            //        editingDemandData = data;
            //        demandModal.loadProfileFieldsTitles2(details.movementId);
            //        demandModal.loadProfileFields2(details.movementId);

            //        jQuery("#labeltitulo").text("");
            //        if (details.typeMovement != "create")
            //            loadObjectsReal2(details._id, details.typeMovement);
            //    },
            //    error: function () {
            //        _alert("error", "Ha ocurrido un error");
            //    }

            //});
        },
        /*
        onDeleteRowAction: function () {
            model.restart();
            var id = null;
            var name = null;
            if (table.display == "table") {
                id = jQuery(this).closest("tr").data("id");
                name = jQuery("table tr[data-id=" + id + "] .folio").text();
            } else {
                id = jQuery(this).closest("div.tile").data("id");
                name = jQuery(".line .tile[data-id=" + id + "] .tileName").text();
            }


            _confirm({
                title: "Cancelar Solicitud",
                message: "¿Seguro que desea cancelar la solicitud " + name + "?",
                action: function () {
                    _loading();
                    jQuery.ajax({
                        url: "/ObjectAdmin/Demand/UpdateStatusDemand",
                        type: "POST",
                        data: { selectedID: id, estatus: "Cancelada" },
                        success: function (data) {
                            model.init();
                            _loading();
                            _alert("success", "Cancelado Correctamente");
                            model.restart();
                        },
                        error: function (data) {
                            _loading();
                            _alert("error", "Ha ocurrido un error");
                        }
                    });
                }
            });
        },
        /*
        onEditRowAction: function (tr) {
            //jQuery("#demandForm")[0].reset();
            locat = null;
            selectedId = tr.data("id");
            var tipo = tr.data("type");
            demandModal.cleanMessages();
            jQuery(".modal-header-text").text("Modificar Solicitud");
            jQuery("#admin_panel").modal("show");
            _loading();
            jQuery.ajax({
                url: "/ObjectAdmin/Demand/getDemand",
                data: { demandID: selectedId },
                type: "POST",
                //async: false,
                success: function (data) {
                    _loading();
                    var details = JSON.parse(data);
                    editingProfile = details.movement;
                    jQuery("#moveprofileSelect").val(editingProfile);
                    jQuery("#moveprofileSelect").data("type", details.typeMovement);
                    demandModal.loadProfileFields(editingProfile);
                    demandModal.loadProfileFieldsTitles(editingProfile);

                    jQuery("#labelfolio").text("Folio : " + details.folio);

                    if (tipo == "create") {
                        jQuery("#divcategorias").show();
                        jQuery("#divlocations").show();
                        jQuery("#divobjetosreales").hide();
                        setTree(details.category);
                        setTree2(details.location);
                        loadObjects(details.category, details.object);

                    }
                    else {
                        jQuery("#divcategorias").hide();
                        jQuery("#divlocations").hide();
                        jQuery("#divobjetosreales").show();
                        jQuery("#divlocations2").show();


                        setTree3(details.location);
                        locat = details.location;
                        loadObjectsReal(details.location, details.typeMovement, selectedId);

                    }
                    editingDemandData = data;
                    demandModal.fillProfileFields();
                },
                error: function () {
                    _loading();
                    _alert("error", "Ha ocurrido un error");
                }
            });
            jQuery("#admin_panel").modal("show");
        },
        */
    };

    var table = {

        display: "table",

        init: function () {
            table.bindAll();
        },

        print: function () {
            switch (table.display) {
                case "table":
                    table.printTable();
                    break;
                case "tile":
                    table.printTiles();
                    break
                case "slider":
                    table.printSlider();
                    break;
            }
        },

        printTable: function () {
            table.display = "table";

            var tableOptions = {
                headers: { "folio": "Folio", "movement": "Movimiento", "status": "Estatus", "Creator": "Creador", "CreatedDate": "Fecha de Creación", "ApprovedDate": "Fecha de Autorización","autorizers":"Autorizadores","DenyDate":"Fecha de Rechazo","deniers":"Denegó","dctDate":"Fecha de Dictamen","dctName":"Dictaminador" },
                //showSelecters: true,
                onEditRowAction: function () {
                    var tr = jQuery(this).closest("tr");
                    content.onEditRowAction(tr);
                },
                onDeleteRowAction: content.onDeleteRowAction,
                onSelectRowAction: null
            };
            viewer.setDisplayMethod(RivkaViewer.METHODS.TABLE, tableOptions);
            viewer.print();
            var demands = JSON.parse(model.demandData);
            for (i = 0; i < demands.length; i++) {
                jQuery("table tr[data-id=" + demands[i]._id + "]").attr("data-idprofile", demands[i].movement).attr("data-type", demands[i].typeMovement);
            }

            try {
                jQuery("#demandsTable_rvtable").dataTable({
                    "sPaginationType": "full_numbers",
                    "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                    "iDisplayLength": 10,
                    "oLanguage": {
                        "sLengthMenu": "Mostrar _MENU_ registros",
                        "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                        "sSearch": "Filtro",
                        "oPaginate": {
                            "sFirst": "Primero",
                            "sLast": "Ultimo",
                            "sNext": "Siguiente",
                            "sPrevious": "Anterior"

                        },
                        "sEmptyTable": "Tabla Sin Datos"
                    }
                });
            } catch (e) { }
            //jQuery("[rel=tooltip]").closest("a").tooltip();

        },

        printTiles: function () {
            table.display = "tile";

            var tileOptions = {
                onEditTileAction: function () {
                    var tr = jQuery(this).closest("div.tile");
                    content.onEditRowAction(tr);
                },
                onDeleteTileAction: content.onDeleteRowAction,
                onSelectTileAction: null
            };
            viewer.setDisplayMethod(RivkaViewer.METHODS.TILE, tileOptions);
            viewer.print();

            var demands = JSON.parse(model.demandData);
            for (i = 0; i < demands.length; i++) {
                jQuery(" .tile[data-id=" + demands[i]._id + "]").attr("data-idprofile", demands[i].profileId);
            }

            jQuery("[rel=tooltip]").closest("a").tooltip();
        },

        printSlider: function () {
            table.display = "slider";
            var sliderOptions = {
                onEditTileAction: function () {
                    var tr = jQuery(this).closest("div.tile");
                    content.onEditRowAction(tr);
                },
                onDeleteTileAction: content.onDeleteRowAction,
                onSelectTileAction: null
            };
            viewer.setDisplayMethod(RivkaViewer.METHODS.SLIDER, sliderOptions);
            viewer.print();

            var demands = JSON.parse(model.demandData);
            for (i = 0; i < users.length; i++) {
                jQuery(" .tile[data-id=" + demands[i]._id + "]").attr("data-idprofile", demands[i].profileId);
            }

            jQuery("[rel=tooltip]").closest("a").tooltip();
        },

        bindAll: function () {

            jQuery("#moveprofileSelect2").unbind("change");
            jQuery("#moveprofileSelect2").bind("change", function () {
                var select, select1;
                select = jQuery(this).val();
                select1 = jQuery("#estatusSelect").val();
                jQuery.ajax({
                    url: "/ObjectAdmin/Demand/getDemamdTable",
                    data: { movement: select, stats: select1 },
                    type: "POST",
                    beforeSend: _loading(),
                    success: function (data) {
                        data = JSON.parse(data);
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].movement == "Salida Temporal") {
                                data[i].status = movementStatus["temporal"][data[i].status];
                            } else {
                                try{
                                    data[i].status = movementStatus[data[i].typeStatus][data[i].status];
                                }catch(ex){}
                            }
                        }
                        data = JSON.stringify(data);
                        model.demandData = data;
                        var dataOptions = { id: "_id", name: "folio", permissions: ["@del"] };
                        viewer.setData(model.demandData, dataOptions);
                        table.print();
                        _loading();
                    }
                });

            });

            jQuery("#movSelect").unbind("change");
            jQuery("#movSelect").bind("change", function () {
                LoadAutorizacion2();
                LoadLastMovements();
            });

            jQuery("#conjuntoSelect").unbind("change");
            jQuery("#conjuntoSelect").bind("change", function () {
                LoadSubLocations(jQuery(this).val());
            });

            jQuery("#selectConjuntoOrigen").unbind("change");
            jQuery("#selectConjuntoOrigen").bind("change", function () {
                LoadSubLocations2(jQuery(this).val(),1);
            });

            jQuery("#selectConjuntoDestiny").unbind("change");
            jQuery("#selectConjuntoDestiny").bind("change", function () {
                LoadSubLocations2(jQuery(this).val(), 2);
            });

            jQuery("#estatusSelect").unbind("change");
            jQuery("#estatusSelect").bind("change", function () {
                var select;
                var select1;
                select = jQuery(this).val();
                select1 = jQuery("#moveprofileSelect2").val();
                jQuery.ajax({
                    url: "/ObjectAdmin/Demand/getDemamdTable",
                    type: "POST",
                    data: { movement: select1, stats: select },
                    beforeSend: _loading(),
                    success: function (data) {
                        data = JSON.parse(data);
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].movement == "Salida Temporal") {
                                data[i].status = movementStatus["temporal"][data[i].status];
                            } else {
                                data[i].status = movementStatus[data[i].typeStatus][data[i].status];
                            }
                        }
                        data = JSON.stringify(data);
                        model.demandData = data;
                        var dataOptions = { id: "_id", name: "folio", permissions: ["@del"] };
                        viewer.setData(model.demandData, dataOptions);
                        table.print();
                        _loading();
                    }
                });

            });

            jQuery("#estatusSelect2").unbind("change");
            jQuery("#estatusSelect2").bind("change", function () {
                LoadAutorizacion2();
                LoadLastMovements();
            });


            jQuery("#save_location").unbind("click");
            jQuery("#save_location").bind("click", function () {
                if (jQuery('#location_tree3 label[class="selected"]').closest("li").data("idcategory") == null) {
                    _alert("error", "Seleccione una ubicación!");
                    return false;
                }

                var id = jQuery('#location_tree3 label[class="selected"]').closest("li").data("idcategory");
                var name = jQuery('#location_tree3 label[class="selected"]').text();

                if (selectedIdObj == "all") {
                    jQuery("#lblocation2").text(name);
                    jQuery("#lblocation2").data("locationid", id);

                    if (jQuery("#todos").prop("checked")) {
                        jQuery(".uniform").each(function () {
                            if (jQuery(this).prop("checked")) {
                                var idsel = jQuery(this).attr("name").substring(7);
                                jQuery("#label" + idsel).text(name);
                                jQuery("#label" + idsel).data("locationid", id);
                            }
                        });

                    }
                }
                else {
                    jQuery("#label" + selectedIdObj).text(name);
                    jQuery("#label" + selectedIdObj).data("locationid", id);
                }



                tree4.init({ id: "null", name: "Home" });
                jQuery("#location_modal_process").modal("hide");

            });

            jQuery("#passyes_button").unbind("click");
            jQuery("#passyes_button").bind("click", function () {
                var username = "@Session["Username"].ToString()";
                var txtmotivo = jQuery("#txtmotivo").val().trim();
                accion = jQuery("#passyes_button").data("tipo");
                if (txtmotivo == "" && accion == "Denegar") {
                    jQuery("#pass_msg").text("Debe escribir un motivo");
                }
                else {
                    var iddemand = jQuery("#passyes_button").data("iddemand");
                    denegarSolicitud(iddemand, txtmotivo);
                }
            });

            jQuery("#passnon_button").unbind("click");
            jQuery("#passnon_button").bind("click", function () {
                jQuery("#passname").val("");
                jQuery("#passyes_button").data("iddemand", "");
                jQuery("#pass_msg").text("");
                jQuery("#passconfirmmodal").modal("hide");

            });
        }
    ,

        onSearchAction: function () {
            var stringToSearch = jQuery("#globalSearch").val();
            if (stringToSearch.trim() == "") {
                model.init();
            } else {
                jQuery.ajax({
                    url: "/User/User/globalSearch",
                    type: "POST",
                    data: { data: stringToSearch },
                    beforeSend: _loading,
                    success: function (data) {
                        model.usersData = data;
                        var dataOptions = { id: "_id", name: "user", image: "image", permissions: ["@upd", "@del"] };
                        viewer.setData(model.usersData, dataOptions);
                        table.print();
                        _loading();
                    },
                    error: function (errorThrown) {
                        _alert("error", "Ha ocurrido un error");
                        _loading();
                    }
                });
            }
        }
    };

    var demandModal = {

        init: function () {
            demandModal.bindAll();
        },

        fillProfileFields: function () {
            if (editingDemandData != null) {
                var obj = JSON.parse(editingDemandData);
                for (field in obj) {
                    if (field == "ImgUrl") {
                        var picurl = obj.ImgUrl;
                        jQuery("#img_pre").attr("src", picurl)
                    }
                    if (field == "movementFields") {
                        jQuery("#name").val(obj["name"]);
                        for (key in obj["movementFields"]) {
                            if (jQuery("#" + key).attr("type") == "checkbox") {
                                jQuery("#" + key).attr("checked", "checked");
                            }
                            else if (jQuery("#" + key).attr("type") == "radio") {
                                jQuery("[name=" + key + "][value = " + obj["movementFields"][key].toString() + "]").attr("checked", "checked");
                            }
                            else {
                                jQuery("#" + key).val(obj["movementFields"][key].toString());
                            }
                        }
                    } else if (field != "pwd") {
                        jQuery("#" + field).val(obj[field]);
                    }
                }
            }
        },

        loadProfileFields: function (profileID, disabled) {
            jQuery.ajax({
                url: "/ObjectAdmin/Demand/getFormView",
                type: "POST",
                data: { profile: profileID },
                //async: false,
                success: function (data) {
                    jQuery("#facturaSection").nextAll().remove();
                    jQuery("#tabContent1").append(data);
                    jQuery("[id^=HTKTab]").find("input, textarea, select").prop("disabled", disabled);
                    Movements.setProfileFields();
                },
                error: function (data) {
                    _alert("error", "Ha ocurrido un error");
                }
            });
        },

        loadProfileFields2: function (profileID) {
            jQuery.ajax({
                url: "/ObjectAdmin/Demand/getFormView2",
                type: "POST",
                data: { profile: profileID },
                //async: false,
                success: function (data) {
                    var newadata = data.replace("HTKTabdatos", "HTKTabdatosDetalles");
                    jQuery("#tabContentAuthorization").nextAll().remove();
                    jQuery("#tabContentDetalles").append(newadata);
                    selectedProfile = profileID;
                    if (selectedId)
                        demandModal.fillProfileFields();

                },
                error: function (data) {
                    _alert("error", "Ha ocurrido un error");
                }
            });
        },

        loadProfileFieldsTitles: function (profileID, currentTab) {
            jQuery.ajax({
                url: "/ObjectAdmin/Demand/getFormTitlesView",
                type: "POST",
                data: { profile: profileID },
                success: function (data) {
                    jQuery("#facturaTab").nextAll().remove();
                    jQuery("#tabHeader1").append(data);
                    currentTab.click();
                },
                error: function (errorThrown) {
                }
            });
        },

        loadProfileFieldsTitles2: function (profileID) {
            jQuery.ajax({
                url: "/ObjectAdmin/Demand/getFormTitlesView",
                type: "POST",
                data: { profile: profileID },
                //async: false,
                success: function (data) {
                    jQuery("#staticInfoAuthorization").nextAll().remove();
                    jQuery("#tabDetalles").append(data.replace("HTKTabdatos", "HTKTabdatosDetalles"));
                    jQuery("#staticInfoAuthorization a").click();
                },
                error: function (errorThrown) {
                }
            });
        },

        cleanMessages: function () {
            jQuery("#final_msg").text("");
        },

        getFolio: function (id) {
            folio = null;
            jQuery.ajax({
                url: "/ObjectAdmin/Demand/generateFolio",
                type: "POST",
                //async: false,
                data: { demandid: id },
                success: function (data) {
                    folio = data;
                },
                error: function (errorThrown) {
                }
            });
        },

        bindAll: function () {

            // Add or Save the changes on an User
            //jQuery("#addDemandButton").unbind("click.save");
            /*jQuery("#addDemandButton").bind("click.save", function () {
                //jQuery("#demandForm")[0].reset();
                demandModal.cleanMessages();
                jQuery(".modal-header-text").text("Crear Solicitud");
                jQuery("#admin_panel").modal("show");
                jQuery("#moveprofileSelect").val("null");
                jQuery("#moveprofileSelect").trigger("change");
                jQuery("#td1").hide();
                jQuery("#labelfolio").text("Folio :");
                model.restart();
            });*/

            // Cancel the current Adding-Editing action of an User
            jQuery("#cancel_button").unbind("click.cancel");
            jQuery("#cancel_button").bind("click.cancel", function () {
                jQuery("#admin_panel").modal("hide");
                model.restart();
            });

            //jQuery("#moveprofileSelect").unbind("change.fill");
            /*jQuery("#moveprofileSelect").bind("change.fill", function () {
                selectedProfile = jQuery(this).val();

                if (selectedProfile == "null") {
                    jQuery("#td1").hide();
                } else {
                    jQuery("#td1").show();
                    var movementType = jQuery(this.selectedOptions).data("type");
                    gettypeMovement(movementType);
                    demandModal.loadProfileFields(selectedProfile);
                    demandModal.loadProfileFieldsTitles(selectedProfile);
                    tree.init({ id: "null", name: "Home" });
                    tree2.init({ id: "null", name: "Home" });
                    tree3.init({ id: "null", name: "Home" });
                    jQuery("#tableobjetos tbody").html("");
                    loadObjects("", null);
                }

            });
            */
            jQuery("#save_buttonNULLED").unbind("click.validate");
            jQuery("#save_buttonNULLED").bind("click.validate", function () {
                var inputsArray = jQuery("#admin_panel .tab-content input[type!=file]");
                for (i = 0; i < inputsArray.length; i++) {
                    input = jQuery(inputsArray[i]);
                    if (input.val() == "" && selectedId != null) {
                        if (input.attr("id") == "pwd") continue;
                        if (input.attr("id") == "pwdConfirm") continue;
                    }
                    regExp = new RegExp(input.attr("pattern"));
                    if ((input.val() == "" && input.attr("required") == "required") || !input.val().match(regExp)) {
                        panelToShow = input.closest(".tab-pane").attr("id");
                        jQuery("#tabHeader1 " + "a[href=#" + panelToShow + "]").click();
                        break;
                    }
                }
            });

            jQuery("#demandFormNULLED").unbind("submit.send");
            jQuery("#demandFormNULLED").bind("submit.send", function () {
                var message = null;
                if (jQuery("#moveprofileSelect").data("type") == "create") {
                    if (jQuery("#total").val() == "") {
                        message = "Debe elegir una cantidad";
                    }
                    if (jQuery("#ObjectSelect2").val() == "null" || jQuery("#ObjectSelect2").val() == "" || jQuery("#ObjectSelect2").val() == null) {
                        message = "Debe elegir un objeto";
                    }
                }
                else {
                    //var selecteds = jQuery(".checker:checked");
                    //if (selecteds.length == 0) {
                    //    message= "Debe de seleccionar!";
                    //}

                }

                if (jQuery("#moveprofileSelect").val() == "null") { message = "Debe elegir un movimiento"; }

                if (demandError != null) {
                    message = demandError;
                } else if (selectedId != null && (selectedProfile != editingProfile)) {
                    _confirm({
                        title: "Editar Movimiento",
                        message: "El cambio de movimiento puede ocasionar pérdida de información si el nuevo movimiento no contiene los campos del anterior. ¿Está seguro que desea realizar la modificación de movimiento?",
                        action: function () {
                            message = "El usuario ha cancelado";
                        }
                    });
                }

                if (message == null) {
                    var object = null;
                    if (jQuery("#moveprofileSelect").data("type") == "create") {
                        object = jQuery('#ObjectSelect2').val();
                    }
                    else {
                        var selecteds = jQuery(".checker:checked");

                        var selectedIdArray = [];
                        var idobjeto;
                        for (i = 0; i < selecteds.length; i = i + 1) {
                            idobjeto = jQuery(selecteds[i]).attr('name').replace("checker", "");
                            if (jQuery("#moveprofileSelect").data("type") == "movement") {
                                selectedIdArray.push(idobjeto + "|" + jQuery("#label" + idobjeto).data("locationid") + "|" + jQuery("#td" + idobjeto).data("location"));
                            }
                            else {
                                selectedIdArray.push(idobjeto);
                            }

                        }


                        object = selectedIdArray;
                        jQuery("#total").val("");
                    }
                    demandModal.getFolio(selectedId);
                    var idlocation = jQuery('#location_tree label[class="selected"]').closest("li").data("idcategory");
                    if (idlocation == null) idlocation = locat;
                    var formString = "demandID=" + selectedId + "&location=" + idlocation + "&estatus=3&folio=" + folio + "&moveprofileSelect=" + jQuery("#moveprofileSelect").val() + "&object=" + object + "&" + jQuery("#demandForm").serialize();
                    var fd = new FormData();
                    fd.append('data', formString);
                    _loading();
                    jQuery.ajax({
                        url: "/ObjectAdmin/Demand/saveDemand",
                        type: "POST",
                        data: fd,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            model.init();
                            _loading();
                            jQuery("#admin_panel").modal("hide");
                            model.restart();
                            //jQuery("#demandForm")[0].reset();
                            LoadAutorizacion2();
                            LoadLastMovements();
                            _alert("success", "Guardado Correctamente");
                        },
                        error: function () {
                            _loading();
                            _alert("error", "Ha ocurrido un error");
                        }
                    });
                } else
                    jQuery("#final_msg").text(message);

                return false;
            });

            jQuery("#todos").unbind("click");
            jQuery("#todos").bind("click", function () {
                jQuery(".uniform").each(function () {
                    if (jQuery("#todos").prop("checked"))
                        jQuery(this).prop("checked", true);
                    if (!jQuery("#todos").prop("checked"))
                        jQuery(this).prop("checked", false);

                });
            });

            jQuery("#btnLocation").unbind("click");
            jQuery("#btnLocation").bind("click", function () {
                tree4.init({ id: "null", name: "Home" });
                selectedIdObj = "all";
                jQuery("#location_modal_process").modal("show");
            });
        }
    };


    var selectedId = null;
    var selectedIdObj = null;
    var selectedName = null;
    var selectedProfile = null;
    var basicProfile = null;

    var demandError = null;
    var emailError = null;

    var editingProfile = null;
    var editingDemandData = null;
    var folio = null;



    jQuery(document).ready(function ($) {

        //basicProfile = selectedProfile = jQuery("#moveprofileSelect").find(":selected").val();
        //demandModal.loadProfileFields(basicProfile);
        //demandModal.loadProfileFieldsTitles(basicProfile);
       
        $("#DivtipoObs select").select2({
            placeholder: "Mostrar todos los Campos",
            allowClear: true
        });
        viewer.addOption({ name: "details", description: "Ver Detalles", icon: "icon-info-sign", action: content.onClientClickAction });
        jQuery("#divcategorias").hide();
        jQuery("#divlocations").hide();
        jQuery("#divobjetosreales").hide();
        jQuery("#divlocations2").hide();
        jQuery("#divobjsreferencia").hide();
        jQuery("#divcantidad").hide();
        tree.init({ id: "null", name: "Home" });
        tree2.init({ id: "null", name: "Home" });
        tree3.init({ id: "null", name: "Home" });
        model.init();
        table.init();

        LoadAutorizacion();
        LoadLastMovements();
        demandModal.init();
        @if (upd != null && upd != "")
            {
               @(new HtmlString("upd = '" + upd + "';"))
            }
        @if (del != null && del != "")
            {

            @(new HtmlString("del ='" + del + "';"))
            }
        @if (updc != null && updc != "")
            {
            @(new HtmlString("updc = '" + updc + "';"))
            }
        @if (delc != null && delc != "")
            {

            @(new HtmlString("delc ='" + delc + "';"))
            }

        @if (updc == "" || upd == "")
            {
                upd = "";
            }

        @if (delc == "" || del == "")
        {

            del = "";
        }
       setAct();

    });


    function setTree(id) {
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getRoute",
            data: { parentCategory: id },
            type: "POST",
            //async: false,
            beforeSend: _loading(),
            success: function (data) {
                var data = JSON.parse(data);
                tree.openRoute(data["route"]);
                _loading();
            }, error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function setTree2(id) {
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getRoute2",
            data: { parentCategory: id },
            type: "POST",
            //async: false,
            beforeSend: _loading(),
            success: function (data) {
                var data = JSON.parse(data);
                tree2.openRoute(data["route"]);
                _loading();
            }, error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function setTree3(id) {
        jQuery.ajax({
            url: "/ObjectAdmin/Demand/getRoute2",
            data: { parentCategory: id },
            type: "POST",
            //async: false,
            beforeSend: _loading(),
            success: function (data) {
                var data = JSON.parse(data);
                tree3.openRoute(data["route"]);
                _loading();
            }, error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }
</script>
