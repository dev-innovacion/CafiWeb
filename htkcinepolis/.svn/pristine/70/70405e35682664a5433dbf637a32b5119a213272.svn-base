@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using Kendo.Mvc.UI;
@using Kendo.Mvc;
@{
    ViewBag.Title = "Ubicaciones - Index";
    int count = 0;
    string namePattern = "([a-záéíóúñA-ZÁÉÍÓÚÑ0-9-_.]){4,}";
    var datos = Session["Permissions"].ToString();
    JObject allp = JsonConvert.DeserializeObject<JObject>(datos);
    var upd = "";
    var del = "";
    var add = "";
    foreach (string x in allp["location"]["grant"])
    {
        if (x.Contains("u"))
        {
            upd = "u";
        }
        if (x.Contains("d"))
        {
            del = "d";
        }
        if (x.Contains("c"))
        {
            add = "c";
        }
    }
    var dataclient = Session["PermissionsClient"].ToString();
    JObject dataclientjo = JsonConvert.DeserializeObject<JObject>(dataclient);
    var updc = "";
    var delc = "";
    var addc = "";
    foreach (string x in dataclientjo["location"]["grant"])
    {
        if (x.Contains("u"))
        {
            updc = "u";
        }
        if (x.Contains("d"))
        {
            delc = "d";
        }
        if (x.Contains("c"))
        {
            addc = "c";
        }
    }
}
<script type="text/javascript" src="//scribblemaps.com/api/js/"></script>
<script src="/Content/Scripts/jquery.colourPicker.js"></script>
<!-- Common Kendo UI Web CSS -->
<link href="/Content/kendo/2014.1.318/kendo.common.min.css" rel="stylesheet" />
<!-- Default Kendo UI Web theme CSS -->
<link href="/Content/kendo/2014.1.318/kendo.default.min.css" rel="stylesheet" />

<!-- Kendo UI Web combined JavaScript -->
<script src="/Scripts/kendo/2014.1.318/kendo.web.min.js"></script>
<script src="/Scripts/kendo/2014.1.318/kendo.treeview.min.js"></script>
<div class="widgets_area">
    <div class="row-fluid">
        <div class="span12">
            <div class="span8">
                <h3 class="ModuleTitle">Administrar Ubicaciones</h3>
            </div>
            <div class="span4">
                <div class="search">
                    <input type="text" data-provide="typeahead" id="globalSearchLocations" name="globalSearchLocations" class="typeahead span8" placeholder="Búsqueda" data-source='[@foreach (var mails in (Dictionary<string, string>)ViewData["locations"])
                                                                                                                                                                                    {
                                                                                                                                                                                        if (count == 0)
                                                                                                                                                                                        {@(new HtmlString('"' + mails.Value + '"')) count++;
                                                                                                                                                                                        }
                                                                                                                                                                                        else
                                                                                                                                                                                        {@(new HtmlString("," + '"' + mails.Value + '"'))}                                                                                                                                                                }]' />
                    <button type="button" class="square-button button_green" id="globalSearchButton"><i class="icon-search"></i></button>
                </div>
            </div>
        </div>
        <div class="span12 mini_widgets" id="mini_widgets">
            <ul class="mini_widgets_list">
               <li id="widget_location">
                    <div>
                        <div class="span5">
                            <img id="divlocationimg" style='height: 50px; width: 50px; border-radius: 50%; margin: 4%;' src='/Content/Images/planos/No-Imagen-Disponible.png'></div>
                        <div id="divlocationname" class="span7"></div>
                    </div>
                </li>
                <li id="widget_user">
                    <div> 
                        <div id="divlocationdemand" class="title center">0</div>
                        <div class="center">Solicitudes</div>
                    </div>
                </li>
                <li id="widget_objects">
                    <div> 
                        <div id="divlocationobj" class="title center">0</div>
                        <div class="center">Activos en esta ubicación</div>
                    </div>                    
                </li>
                @*<li id="widget_last_inventory">
                    <div> 
                        <div class="title center">14/07/2014</div>
                        <div class="center">Último Inventario Realizado</div>
                    </div>
                </li>
                <li id="widget_next_inventory" class="last">
                    <div>
                       <div class="title center">14/08/2014</div>
                       <div class="center">Próximo Inventario a Realizar</div> 
                    </div>                    
                </li>*@
            </ul>
        </div>
    </div>
    <br />

    <div class="row-fluid">
        <div class="span12">
            <div class="span3">
                <div class="span12">
                    <div class="light_blue set_color">
                        <div class="well-header widgetclient titleclient">
                            <h5>Ubicaciones</h5>
                        </div>

                        <div class="well-content no-search">
                            <div class=" k-header">
                                <div id="location_tree">
                                </div>
                            </div>                          
                        </div>
                    </div>
                </div>
            </div>
            <div class="span9">
                <div class="row-fluid">
                    <div class="span12">
                        <div class="light_blue set_color">
                            <div class="well-header widgetclient titleclient">
                                <div class="span12">
                                    <div class="span9">
                                        <h5 id="titulo" data-idlocation="null"></h5>
                                    </div>
                                    <div class="span3">

                                        <div id="btngrouplocation" class="btn-group pull-right">
                                            @if (add == "c" && addc=="c")
                                            {
                                                <button class="btn btn-mini dark_green fileinput-button" id="addLocationButton" data-original-title="Agregar Ubicación" rel="tooltip" data-placement="top">
                                                    <i class="icon-plus icon-white"></i>
                                                </button>
                                                <button class="btn btn-mini purple fileinput-button" id="addLocationControlButton" data-original-title="Agregar Ubicación de Control" rel="tooltip" data-placement="top">
                                                    <i class="icon-plus-sign icon-white"></i>
                                                </button>
                                            }
                                            @if (del == "d" && delc=="d")
                                            {
                                                <button type="button" class="btn btn-mini red delete" id="deleteLocationButton" data-original-title="Eliminar Ubicación" rel="tooltip" data-placement="top">
                                                    <i class="icon-trash icon-white"></i>
                                                </button>
                                            }
                                            @if (upd == "u" && updc=="u")
                                            {
                                                <button type="button" class="btn btn-mini orange delete" id="editLocationButton" data-original-title="Editar Ubicación" rel="tooltip" data-placement="top">
                                                    <i class="icon-pencil icon-white"></i>
                                                </button>
                                            }
                                            <button type="button" class="btn btn-mini yellow delete" id="setupLocationButton" data-original-title="Guardar Configuración" rel="tooltip" data-placement="top">
                                                <i class="icon-cog icon-white"></i>
                                            </button>
                                            <button type="button" class="btn btn-mini pink delete" id="changeParentButton" data-original-title="Cambiar de Padre" rel="tooltip" data-placement="top">
                                                <i class="icon-wrench icon-white"></i>
                                            </button>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="well-content no-search">
                                <div class="row-fluid">
                                    <div class="span12">
                                        <div class="span9">
                                            <div class="navbar-inner">
                                                <ul class="nav nav-tabs" id="tabHeader2">
                                                    <li id="listaHeader"><a href="#lista" data-toggle="tab">Detalles</a></li>
                                                    <li id="imagenesHeader"><a href="#imagenes" data-toggle="tab">Plano</a></li>
                                                    <li class="active" id="mapasHeader"><a href="#mapa" data-toggle="tab">Mapa</a></li>
                                                    <li id="HardwareHeader"><a href="#hardware" data-toggle="tab">Hardware</a></li>
                                                </ul>
                                            </div>
                                            <div class="tab-content" id="tabContent2">
                                                <div class="tab-pane lista listamargen" id="lista">
                                                    <div class="span12 form-row">
                                                        <div class="span9">
                                                            <div id="detalles"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="tab-pane imagenes listamargen" id="imagenes">
                                                    <div class="row-fluid">
                                                        <div id="svg-container">

                                                            <button type="button" class="btn btn-mini blue" id="zoominButton">
                                                                <i class="icon-zoom-in icon-white"></i>
                                                            </button>
                                                            <button type="button" class="btn btn-mini blue" id="zoomoutButton">
                                                                <i class="icon-zoom-out icon-white"></i>
                                                            </button>

                                                            <button type="button" class="btn btn-mini pink" id="changePlanoButton">
                                                                <i class="icon-file icon-white"></i>
                                                            </button>

                                                        </div>
                                                    </div>
                                                    <div class="row" style="margin: auto;">
                                                        <div class="span12 form-row subs">
                                                            <div class="span9">
                                                                <table class="table" id="location-list">
                                                                    <tbody></tbody>
                                                                </table>
                                                                </div>
                                                            <div class="span3" style="margin: auto; margin-top: 10px;">
                                                                    <button type="button" class="btn dark_green" id="save_scenario">Guardar Escenario</button>
                                                                </div>

                                                            </div>
                                                        </div>


                                                </div>
                                                <div class="tab-pane active mapa" id="mapa">
                                                    <div id="map-container">
                                                        <div id="ScribbleMap" style="width: 555px; height: 500px"></div>

                                                    </div>
                                                </div>
                                                @*<div class="tab-pane hardware" id="hardware">
                                                    <div id="hardw-container">

                                                        <div class="light_blue set_color">
                                                            <div class="well-header">
                                                                <h5>Lista de Hardware</h5>
                                                                <div class="btn-group">
                                                                    <button class="btn btn-mini dark_green fileinput-button" id="addHardwareButton"  data-original-title="Agregar Hardware" rel="tooltip" data-placement="left">
                                                                        <i class="icon-plus icon-white"></i>
                                                                    </button>
                                                                </div>
                                                            </div>
                                                            <div class="well-content no-search">
                                                                <div class="right_button green"></div>
                                                                <table id="hardTable" class="table table-striped table-bordered table-hover datatable">
                                                                    <thead>
                                                                        <tr>
                                                                            <th>Nombre Hardware</th>
                                                                            <th></th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody></tbody>
                                                                </table>

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>*@
                                            </div>
                                        </div>
                                        <div class="span3">
                                            <div id="divsububicaciones" class="light_blue set_color">
                                                <div class="well-header widgetclient titleclient">
                                                    <h5>Sub-ubicaciones</h5>
                                                </div>
                                                <div class="well-content no-search">
                                                    <table class="table tableOptions" id="tablebody">
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                                <br />
                                                    <button type="button" class="btn dark_green" id="save_map">Guardar mapa</button>
                                             
                                            </div>

                                            <div id="divhardware" class="light_blue set_color">
                                                <div class="well-header widgetclient titleclient">
                                                    <div class="span12">
                                                            <h5>Hardware</h5>
                                                            <div class="btn-group">
                                                                <button class="btn btn-mini dark_green fileinput-button" id="addHardwareButton" data-original-title="Agregar Hardware" rel="tooltip" data-placement="left">
                                                                    <i class="icon-plus icon-white"></i>
                                                                </button>
                                                            </div>

                                                    </div>
                                                </div>
                                                <div class="well-content no-search">
                                                    <table class="tableOptions" id="tablehardware">
                                                        <tbody></tbody>

                                                    </table>
                                                </div>
                                                <br />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="locationsTable">
</div>

<div id="admin_panel" class="modal hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
        <h3 class="modal-header-text">Agregar en Ubicación
            <label id="namelocation"></label>
        </h3>
    </div>
    <div class="modal-header">
        <div class="profileSelector">
            <label class="lanelMargen">Perfil: </label>
            <select id="profileSelect" name="profileSelect">
                @ViewData["profileList"]
            </select>
            </br>
            </br>
            <label class="lanelMargen">Importar Escenario: </label>
            <select id="setupSelect" name="setupSelect">
                @ViewData["setupList"]
            </select>
        </div>

    </div>
    <form id="locationForm" method="post" enctype="multipart/form-data" autocomplete="off">
        <div class="modal-body">

            <div class="navbar-inner">
                <ul class="nav nav-tabs" id="tabHeader1">
                    <li class="active" id="staticFormHeader"><a href="#staticFieldsSection" data-toggle="tab">Inf. General</a></li>
                </ul>
            </div>
            <div class="tab-content" id="tabContent1">
                <div class="tab-pane active staticFieldsSection perfilMargen" id="staticFieldsSection">

                    <table width="100%">
                        <tr>
                            <td>
                                <label>Nombre: </label>
                                <div class="staticField">
                                    <input type="text" id="name" name="name" required="required" placeholder="Nombre" data-original-title="El nombre sólo puede contener caracteres alfabéticos (Máximo 3 nombres)." rel="tooltip" data-placement="right" />
                                </div>
                            </td>
                            <td rowspan="2" width="50%">
                                <img style="max-height: 100px; max-width: 100px;" id="img_pre" src="~/Content/Images/planos/No-Imagen-Disponible.png">
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                        </tr>
                        <tr>
                            <td>
                                <label>Responsable: </label>
                                <div class="staticField">
                                    <select id="userSelect" name="userSelect">
                                        @ViewData["userList"]
                                    </select>
                                </div>
                            </td>
                            <td width="50%"></td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                <span class="btn btn-file">
                                    <span class="fileupload-new">Foto de Ubicacion</span>
                                    <input type="file" id="file" name="file" value="Default" />
                                </span>

                            </td>
                        </tr>
                    </table>
                </div>
                @ViewData["formInitialContent"]
            </div>
        </div>
        <div class="modal-footer">
            <span width="80%" id="final_msg" class="error_msg"></span>
            <input value="Guardar" class="btn blue" type="submit" id="save_button">
            <input value="Cancelar" class="btn grey" type="button" id="cancel_button">
        </div>
    </form>
</div>

<div id="setupmodal" class="modal hide fade" data-backdrop="static">
    <div class="modal-header">
        <h3 class="modal-header-text">Guardar como configuración</h3>
    </div>
    <div class="modal-body">
        <label>Guardar como configuración: </label>
        <div class="staticField">
            <input type="text" id="setupname" name="setupname" placeholder="setup nombre" data-original-title="El nombre sólo puede contener caracteres alfabéticos (Máximo 3 nombres)." rel="tooltip" data-placement="right" />
        </div>
    </div>
    <div class="modal-footer">
        <span width="80%" id="setupfinal_msg" class="error_msg"></span>
        <input value="Guardar" class="btn red" type="submit" id="setupsave_button">
        <input value="Cancelar" class="btn grey" type="button" id="setupnon_button">
    </div>
</div>

<div id="PlanoImagemodal" class="modal hide fade" data-backdrop="static">
    <div class="modal-header">
        <h3 class="modal-header-text">Guardar Imagen para plano</h3>
    </div>
    <div class="modal-body">
        <table width="100%">
            <tr>
                
                <td rowspan="2" width="50%">
                    <img style="max-height: 100px; max-width: 100px;" id="img_pre2" src="~/Content/Images/planos/No-Imagen-Disponible-Ubicacion.png">
                </td>
            </tr>
            <tr>
                <td></td>
            </tr>
            <tr>
                <td>
                    <span class="btn btn-file">
                        <span class="fileupload-new">Foto de plano de Ubicacion</span>
                        <input type="file" id="planofile" name="planofile" value="Default" />
                    </span>

                </td>
            </tr>
        </table>
    </div>
    <div class="modal-footer">
        <span width="80%" id="plano_msg" class="error_msg"></span>
        <input value="Guardar" class="btn red" type="button" id="planosave_button">
        <input value="Cancelar" class="btn grey" type="button" id="planonon_button">
    </div>
</div>

<div id="parentmodal" class="modal hide fade" data-backdrop="static">
    <div class="modal-header">
        <h3 class="modal-header-text">Actualizar Padre</h3>
    </div>
    <div class="modal-body">
        <label>Nuevo padre: </label>
        <div class="staticField">
            <select id="parentSelect" name="parentSelect">
                @ViewData["nodesList"]
            </select>
        </div>
    </div>
    <div class="modal-footer">
        <span width="80%" id="setupfinal_msg" class="error_msg"></span>
        <input value="Guardar" class="btn red" type="submit" id="parentsave_button">
        <input value="Cancelar" class="btn grey" type="button" id="parentnon_button">
    </div>
</div>

<div id="hardmodal" class="modal hide fade" data-backdrop="static">
    <div class="modal-header">
        <h3 class="modal-header-text">Agregar Hardware</h3>
    </div>
    <div class="modal-body">
        <div class="hardware-container">
            <div>
                <ul id="tableHardwareSelect" class="table"></ul>
                <div class="hardwareList">
                    <div class="row-fluid">
                        <div class="btn blue back-btn">
                            <i class="icon-chevron-left icon-white"></i>
                        </div>
                        <div class="title">Title</div>
                    </div>
                    <div class="row-fluid">
                        <div class="span4 image">
                            <img src="/" />
                        </div>
                        <div class="span8">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>No Serie</th>
                                        <th>Agregar</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>05845120</td>
                                        <td>
                                            <div class="btn green">
                                                <i class="icon-chevron-right icon-white"></i>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="clear"></div>
    </div>
    <div class="modal-footer">
        @*<span width="80%" id="hardfinal_msg" class="error_msg"></span>
        <input value="Guardar" class="btn red" type="submit" id="hardsave_button">*@
        <input value="Cerrar" class="btn grey" type="button" id="hardnon_button">
    </div>
</div>

<div id="controllocationmodal" class="modal hide fade" data-backdrop="static">
    <div class="modal-header">
        <h3 class="modal-header-text">Guardar Ubicacion de Control</h3>
    </div>
    <div class="modal-body">
        <table width="100%">
            <tr>
                <td>
                    <label>Nombre: </label>
                    <div class="staticField">
                        <input type="text" id="controlname" name="controlname" placeholder="nombre" data-original-title="El nombre sólo puede contener caracteres alfabéticos (Máximo 3 nombres)." rel="tooltip" data-placement="right" />
                    </div>
                </td>
                <td rowspan="2" width="50%">
                    <img style="max-height: 100px; max-width: 100px;" id="img_pre3" src="~/Content/Images/planos/No-Imagen-Disponible.png">
                </td>
            </tr>
            <tr>
                <td></td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <span class="btn btn-file">
                        <span class="fileupload-new">Foto de Ubicacion</span>
                        <input type="file" id="file2" name="file2" value="Default" />
                    </span>

                </td>
            </tr>
        </table>
        
    </div>
    <div class="modal-footer">
        <span width="80%" id="control_msg" class="error_msg"></span>
        <input value="Guardar" class="btn red" type="button" id="controlsave_button">
        <input value="Cancelar" class="btn grey" type="button" id="controlnon_button">
    </div>
</div>

<div id="EditHardwareModal" class="modal hide fade" data-backdrop="static">
    <div class="modal-header">
        <h3 class="modal-header-text">Configurar Hardware</h3>
    </div>
    <div class="modal-body">
        <table width="100%">
            <tr>
                <td>
                    <label>IP: </label>
                    <div class="staticField">
                        <input type="text" id="ipname" name="ipname" placeholder="IP" data-original-title="El nombre sólo puede contener caracteres alfabéticos (Máximo 3 nombres)." rel="tooltip" data-placement="right" />
                    </div>
                </td>
                <td></td>
            </tr>
            <tr>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td></td>
                <td></td>
               
            </tr>
        </table>

    </div>
    <div class="modal-footer">
        <span width="80%" id="edithw_msg" class="error_msg"></span>
        <input value="Guardar" class="btn red" type="button" id="edithwsave_button">
        <input value="Cancelar" class="btn grey" type="button" id="edithwnon_button">
    </div>
</div>

@section scripts{
<script src="~/RivkaBase/Scripts/RivkaTree/RivkaTree.js"></script>
    <script type="text/javascript">
    
        var selectedId = null;
        var selectedName = null;
        var selectedProfile = null;
        var basicProfile = null;
        var selectedsetup = null;
        var setupName = null;
        var basicsetup = null;
        var selectedParent = null;
        var basicParent = null;
        var locationError = null;
        var setupError = null;
        var editingProfile = null;
        var editingsetup = null;
        var editingParent = null;
        var editinglocationData = null;
        var updTree = "";
        var selectedHW = null;
        var datos = null;
        var displaymodal = null;

        function resetData() {
            selectedId = null;
            selectedName = null;
            selectedProfile = null;
            locationError = null;
            setupError = null;
            editingProfile = null;
            editingsetup = null;
            editinglocationData = null;
            selectedParent = null;
            editingParent = null;
            setupName = null;
            selectedsetup = null;
            selectedHW = null;
            displaymodal = "none";
        }

            //ver si tiene imagen la ubicacion
            /*jQuery.ajax({
                url: "/Locations/Location/getNodesDetails",
                type: "POST",
                async: false,
                data: { nodeid: locationId },
                success: function (data) {
                    var details = JSON.parse(data);
                    if (details.planeimgext != "null") {

                        mapSVG.setLocation(idHardware, undefined, "rect", "3", namecategory);

                    }
                },
                error: function (data) {

                    _alert("error", "Ha ocurrido un error");
                }
            });
            */

        function gwsc() {
            var cs = ["00", "33", "66", "99", "CC", "FF"];
            var colores = "";
            for (i = 0; i < 6; i++) {
                for (j = 0; j < 6; j++) {
                    for (k = 0; k < 6; k++) {
                        c = cs[i] + cs[j] + cs[k];
                        colores = colores + "<option value=\"" + c + "\">#" + c + "</option>\n";
                    }
                }
            }

            return colores;
        }

        function configHW(hwid) {
            //   $(".modal-header-text").text("Agregar Ubicación de control en Ubicación " + jQuery("#titulo").text());
            $("#EditHardwareModal").modal("show");
            selectedHW = hwid;
        }

        function obtenerNodes(nodoid) {
            jQuery.ajax({
                url: "http:/Locations/Location/getNodes2",
                type: "POST",
                data: { id: nodoid },
                async: false,
                success: function (data) {
                    //$("#tablebody").html(data);
                    var locations = JSON.parse(data);
                   
                    datos = locations;

                },
                error: function (data) {
                    //_alert("error","Ha ocurrido un error");
                }
            });
        }

        // Function to load the widgets
        // Author : Juan B
        var widgets = function (widgetsContainer) {
            $ = jQuery;
            thisContainer = "";
            if (typeof (widgetsContainer) === "string" && widgetsContainer != "") {
                thisContainer = $("#" + widgetsContainer);
            }
            else {
                console.error("You must specified the container Id");
                return false;
            }
            //Available Modules
            modules = ['location', 'user', 'objects', 'last_inventory', 'next_inventory'];
            //Modules already loaded
            loadedModules = [];

            //  Load or reload a new widget
            //@@param wName | widget name
            this.load = function (wName) {
                if (modules.indexOf(wName) !== -1) {
                    var widgetId = "widget_" + wName;

                    //Create a new widget
                    if (loadedModules.indexOf(wName) === -1) {
                        loadedModules.push(wName);

                        if (loadedModules.length % 5 == 0)
                            thisContainer.find("ul").append("<li id='" + widgetId + "' class='last'><div></div></li>");
                        else
                            thisContainer.find("ul").append("<li id='" + widgetId + "'><div></div></li>");

                        request(widgetId, wName);
                    }
                    //Reload the specified widget
                    else {
                        request(widgetId, wName);
                    }

                }
                else {
                    console.error("the module specified doesn't exists");
                    return false;
                }                
            };


            request = function (wId, wName) {

                loading(wId, true);
                setTimeout(function () {
                    loading(wId, false);
                }, 2000);

                //$.ajax({
                //    url: "",
                //    type: "POST",
                //    data: {},
                //    beforeSend: function () { loading(wId, true); },
                //    complete: function () { loading(wId, false); },
                //    success: function (data) {

                //    },
                //    error: function (errorThrown) {

                //    }
                //});
            }

            //  Shows the loading gif in the specified widget id
            //@@param wId | the widget's id
            //@@param show | <bool> show or hide the loading gif 
            loading = function (wId, show) {
                //Remove existing loading div
                thisContainer.find("#" + wId).find(".loading").remove();

                //Add Loading div
                if (show)
                    thisContainer.find("#" + wId).append("<div class='loading'></div>");
            };


        }


        //ImagePreview----------------------------------------------------

        var input = document.getElementById("file"),
            formdata = false;

        function showUploadedItem(source) {
            jQuery('#img_pre').attr('src', source);
        }

        function addPhoto(source) {
            if (window.FileReader) {
                reader = new FileReader();
                reader.onloadend = function (e) {
                    showUploadedItem(e.target.result);
                };
                reader.readAsDataURL(source);
            }
        }

        if (window.FormData) {
            formdata = new FormData();
        }

        input.addEventListener('change', function (evt) {
            var file = this.files[0];

            if (!!file.type.match(/image.*/)) {
                addPhoto(file);
            }

        }, false);
        //EndImagePreview-------------------------------------


        var input2 = document.getElementById("planofile"),
            formdata = false;

        function showUploadedItem2(source) {

            jQuery('#img_pre2').attr('src', source);

        }

        function addPhoto2(source) {
            if (window.FileReader) {
                reader = new FileReader();
                reader.onloadend = function (e) {
                    showUploadedItem2(e.target.result);
                };
                reader.readAsDataURL(source);
            }
        }


        input2.addEventListener('change', function (evt) {
            var file = this.files[0];

            if (!!file.type.match(/image.*/)) {
                addPhoto2(file);
            }

        }, false);
        //EndImagePreview-------------------------------------

        var input3 = document.getElementById("file2"),
           formdata = false;

        function showUploadedItem3(source) {

            jQuery('#img_pre3').attr('src', source);

        }

        function addPhoto3(source) {
            if (window.FileReader) {
                reader = new FileReader();
                reader.onloadend = function (e) {
                    showUploadedItem3(e.target.result);
                };
                reader.readAsDataURL(source);
            }
        }


        input3.addEventListener('change', function (evt) {
            var file = this.files[0];

            if (!!file.type.match(/image.*/)) {
                addPhoto3(file);
            }

        }, false);


        var locationModal = {

            imageArray: {},

            init: function () {
                locationModal.bindAll();
            },

            readURL: function (input, previewDivID) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        jQuery('#' + previewDivID).attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            },

            bindAll: function () {
                jQuery("#admin_panel input[type=file][id!=img_pre]").unbind("change.changeCustomFiles");
                jQuery("#admin_panel input[type=file][id!=img_pre]").bind("change.changeCustomFiles", function () {
                    var inputID = jQuery(this).attr("id");
                    var id = inputID + "Preview";
                    var formData = new FormData();

                    locationModal.readURL(this, id);

                    formData.append("selectedID", selectedId);
                    formData.append("name", inputID);
                    formData.append("file", jQuery(this)[0].files[0]);
                    formData.append("lastSaved", locationModal.imageArray[inputID]);
                    jQuery.ajax({
                        url: "/Locations/Location/SaveCustomFile",
                        type: "POST",
                        data: formData,
                        contentType: false,
                        processData: false,
                        beforeSend: _loading,
                        success: function (data) {
                            locationModal.imageArray[inputID] = data;
                            _loading();
                        },
                        error: function (errorThrown) {
                            _loading();
                        }
                    });
                });
            }
        };


        var planoModal = {

            imageArray: {},

            init: function () {
                planoModal.bindAll();
            },

            readURL: function (input, previewDivID) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        jQuery('#' + previewDivID).attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            },

            bindAll: function () {
                jQuery("#admin_panel input[type=file][id!=img_pre]").unbind("change.changeCustomFiles");
                jQuery("#admin_panel input[type=file][id!=img_pre]").bind("change.changeCustomFiles", function () {
                    var inputID = jQuery(this).attr("id");
                    var id = inputID + "Preview";
                    var formData = new FormData();

                    locationModal.readURL(this, id);

                    formData.append("selectedID", selectedId);
                    formData.append("name", inputID);
                    formData.append("file", jQuery(this)[0].files[0]);
                    formData.append("lastSaved", locationModal.imageArray[inputID]);
                    jQuery.ajax({
                        url: "/Locations/Location/SaveCustomFile",
                        type: "POST",
                        data: formData,
                        contentType: false,
                        processData: false,
                        beforeSend: _loading,
                        success: function (data) {
                            locationModal.imageArray[inputID] = data;
                            _loading();
                        },
                        error: function (errorThrown) {
                            _loading();
                        }
                    });
                });
            }
        };

        function cargarwidgetinicio() {
            jQuery.ajax({
                url: "/Locations/Location/getHomeDetails",
                type: "POST",
                async: false,
                data: { nodeid: "null" },
                success: function (data) {
                    var details = JSON.parse(data);
                  
                    jQuery("#divlocationdemand").text(details.solicitudes);
                    jQuery("#divlocationobj").text(details.objetos);
                    jQuery("#divlocationname").text(details.name);
                    jQuery("#divlocationimg").attr("src", details.ImgUrl);

                },
                error: function (data) {

                    _alert("error", "Ha ocurrido un error");
                }
            });
        }

        jQuery(document).ready(function ($) {
          //  jQuery("#mini_widgets").hide();
            cargarwidgetinicio();


            displaymodal = "none";
            /* Load Widgets */
            function onSelect(e) {
                var dataItem = this.dataItem(e.node);
               // alert(dataItem.id);
                var id = dataItem.id;
                var cad = dataItem.text;
                jQuery("#titulo").html(cad);
                jQuery("#titulo").data("idlocation", id);

                if (id != "null" && id != null) {

                    jQuery("#deleteLocationButton").show();
                    jQuery("#editLocationButton").show();
                    jQuery("#setupLocationButton").show();
                    jQuery("#changeParentButton").show();

                } else {
                    id = "null";
                    jQuery("#deleteLocationButton").hide();
                    jQuery("#editLocationButton").hide();
                    jQuery("#setupLocationButton").hide();
                    jQuery("#changeParentButton").hide();
                    jQuery("#listaHeader").hide();
                    jQuery("#imagenesHeader").hide();
                    jQuery("#HardwareHeader").hide();
                    jQuery("#mapasHeader").addClass("active");
                    jQuery("#mapa").addClass("active");
                    jQuery("#lista").removeClass("active");
                    jQuery("#imagenes").removeClass("active");
                    

                }

                if (jQuery("#location_tree").data("kendoTreeView").findByUid(dataItem.uid).children('.k-group').length == 0) {
                    obtenerNodes(dataItem.id);
                    if (datos.length > 0) {
                        jQuery("#location_tree").data("kendoTreeView").append(datos, jQuery("#location_tree").data("kendoTreeView").findByUid(dataItem.uid));
                    }

                }
                
                loadListPanel(id);
            }

            function onExpand(e) {
                //var dataItem = this.dataItem(e.node);
                //$("#location_tree").data("kendoTreeView").findByUid(dataItem.uid).children('.k-group').remove();
                //obtenerNodes(dataItem.id);
                //if (datos.length > 0) {
                //    $("#location_tree").data("kendoTreeView").append(datos, $("#location_tree").data("kendoTreeView").findByUid(dataItem.uid));
                //}
                
                //obtenerNodes(dataItem.id);
                //$("#location_tree").data("kendoTreeView").append(datos, $("#location_tree").data("kendoTreeView").findByUid(dataItem.uid));
            }

            function onDrop(e) {
                var dataItem = this.dataItem(e.sourceNode);
                var dataItem2 = this.dataItem(e.destinationNode);
                selectedId = dataItem.id;
                var newparent = dataItem2.id;
                $.ajax({
                    url: "/Locations/Location/updateParentLocation",
                    type: "POST",
                    data: { id: selectedId, newparent: newparent },
                    success: function (data) {
                        var cad = dataItem.text;
                        jQuery("#titulo").html(cad);
                        jQuery("#titulo").data("idlocation", selectedId);

                        if (selectedId != "null" && selectedId != null) {

                            jQuery("#deleteLocationButton").show();
                            jQuery("#editLocationButton").show();
                            jQuery("#setupLocationButton").show();
                            jQuery("#changeParentButton").show();

                        } else {
                            id = "null";
                            jQuery("#deleteLocationButton").hide();
                            jQuery("#editLocationButton").hide();
                            jQuery("#setupLocationButton").hide();
                            jQuery("#changeParentButton").hide();
                            jQuery("#listaHeader").hide();
                            jQuery("#imagenesHeader").hide();
                            jQuery("#HardwareHeader").hide();
                            jQuery("#mapasHeader").addClass("active");
                            jQuery("#mapa").addClass("active");
                            jQuery("#lista").removeClass("active");
                            jQuery("#imagenes").removeClass("active");


                        }
                        loadListPanel(selectedId);
                        $("#location_tree").data("kendoTreeView").select($("#location_tree").data("kendoTreeView").findByUid(dataItem.uid));
                        resetData();

                        _alert("success", "Guardado Correctamente");

                    },
                    error: function () {
                        _alert("error", "Ha ocurrido un error");

                    }
                });
                //kendoConsole.log(
                //"Dropped " + treeview.text(e.sourceNode) +
                //" (" + (e.valid ? "valid" : "invalid") + ")"
                //);
            }

            var nodo = "null";

            obtenerNodes(nodo);


            $("#location_tree").kendoTreeView({
                dataSource: [
                        {
                            id: "null", text: "Home", expanded: true, "spriteCssClass": "locationimg", "hasChildren": true, items: datos
                        }
                ]
                ,
                dataTextField: "text",
                dragAndDrop: true,
                loadondemand: true,
                select: onSelect,
                expand: onExpand,
                drop: onDrop
            });


            var mWidgets = new widgets("mini_widgets");
            /*
            mWidgets.load("location");
            mWidgets.load("user");            
            mWidgets.load("objects");
            mWidgets.load("last_inventory");
            mWidgets.load("next_inventory");
            */
            /* End: Widgets */

            basicProfile = selectedProfile = $("#profileSelect").find(":selected").val();
            basicsetup = selectedsetup = $("#setupSelect").find(":selected").val();
            loadProfileFields(basicProfile);
            loadProfileFieldsTitles(basicProfile);
            jQuery("#save_scenario").hide();
            jQuery("#save_map").hide();

            jQuery("#deleteLocationButton").hide();
            jQuery("#editLocationButton").hide();
            jQuery("#setupLocationButton").hide();
            jQuery("#changeParentButton").hide();

            jQuery("#listaHeader").hide();
            jQuery("#imagenesHeader").hide();
            jQuery("#HardwareHeader").hide();
            jQuery("#divhardware").hide();


            function cleanMessages() {
                $("#final_msg").text("");
                $("#setupfinal_msg").text("");
                $("#plano_msg").text("");
            }


            function addHardware(idHardware) {
           
                var locationId = jQuery("#titulo").data("idlocation");

                jQuery.ajax({
                    url: "/Locations/Location/saveHardwareLocation",
                    type: "POST",
                    data: { id_hardware: idHardware, id_location: locationId },
                    beforeSend: function () { 
                        _loading();
                    },
                    complete: function () {
                        _loading();
                    },
                    success: function (data) {
                        var locationId = jQuery("#titulo").data("idlocation");
                        LoadHardware(locationId);
                        if (data == "success") {
                            jQuery("#hardmodal").modal('hide');
                            _alert("success", "Guardado Correctamente");
                        }
                        else {
                            LoadHardwareSelect();
                            _alert("error", "Hardware no disponible");
                        }
                    },
                    error: function () {
                        _alert("error", "Ha ocurrido un error");
                    }
                });
            }

            function removeHardware(idHardware) {
                var locationId = jQuery("#titulo").data("idlocation");

                jQuery.ajax({
                    url: "/Locations/Location/removeHardwareLocation",
                    type: "POST",
                    data: { id_hardware: idHardware, id_location: locationId },
                    beforeSend: function () { _loading() },
                    complete: function () { _loading() },
                    success: function (data) {
                        var locationId = jQuery("#titulo").data("idlocation");
                        LoadHardware(locationId);
                        jQuery("#hardmodal").modal('hide');
                        _alert("success", "Borrado Correctamente");
                    },
                    error: function () {
                        _alert("error", "Ha ocurrido un error");
                    }
                });
            }

            function loadListPanel(nodoid) {
               sm.map.wipe();
                $("#detalles").empty();
                main_location.id = nodoid;
                var mapayes = "";
                var planoyes = "";
                if (nodoid != "null" && nodoid != null) {
                    $.ajax({
                        url: "/Locations/Location/getNodesDetails",
                        type: "POST",
                        async: false,
                        data: { nodeid: nodoid },
                        success: function (data) {
                            var details = JSON.parse(data);
                            $("#detalles").html("");
                            $("#detalles").append(
                                $("<div>").html(
                                "<table class='line' cellpadding='10' width='100%'>" + 
                                "<tr>" +
                                "<td class='gray-location' width='45%'> " +
                                "<label id='namedetail'  data-idLocation='" + details._id + "' ><h11> Nombre:  </h11>" + details.name + "</label>" +
                                "</td>" +
                                "<td width='10%'> </td>" +
                                "<td class='gray-location' width='45%'>" +
                                "<label id='profile'  data-idLocation='" + details._id + "' data-idProfile='" + details.profileId + "' ><h11> Perfil: </h11>" + details.nameprofile + "</label>" +
                                "</td>" +
                                "</tr>" +
                                "<tr><td></td></tr>" +
                                "</table>"
                                ));

                            for (var key in details.profileFields) {
                                $("#detalles").append($("<div>").html("<label><h10>" + key + ": </h10>" + details.profileFields[key] + "</label>"));
                            }

                            if (details.plano == "1") planoyes = "yes";
                            if (details.mapa == "1") mapayes = "yes";

      
                            jQuery("#divlocationdemand").text(details.solicitudes);
                            jQuery("#divlocationobj").text(details.objetos);
                            jQuery("#divlocationname").text(details.name);
                            jQuery("#divlocationimg").attr("src", details.ImgUrl);
           
                            jQuery("#listaHeader").show();
                            jQuery("#hardware").removeClass("active");
                            jQuery("#HardwareHeader").removeClass("active");
                            if (details.tipo == "2") {
                                //   jQuery("#HardwareHeader").show();
                                jQuery("#divhardware").show();
                                jQuery("#divsububicaciones").hide();
                            //    jQuery("#hardware").addClass("active");
                                LoadHardware(nodoid);
                            }
                            else {
                               // jQuery("#HardwareHeader").hide();
                                jQuery("#divhardware").hide();
                                jQuery("#divsububicaciones").show();
                            }
                            jQuery("#imagenesHeader").hide();
                            jQuery("#mapasHeader").hide();
                            jQuery("#listaHeader").addClass("active");
                            jQuery("#lista").addClass("active");
                            jQuery("#mapa").removeClass("active");
                            jQuery("#imagenes").removeClass("active");

                            jQuery("#save_scenario").hide();
                            jQuery("#save_map").hide();

                            if (planoyes == "yes") {
                                jQuery("#imagenesHeader").show();
                                jQuery("#imagenesHeader").addClass("active");
                                jQuery("#listaHeader").removeClass("active");
                                jQuery("#imagenes").addClass("active");
                                jQuery("#lista").removeClass("active");
                                jQuery("#mapa").removeClass("active");

                            //Loads the map image
                            mapSVG.loadMap(details.ImgUrl2);
                            ////Set the scenario
                            mapSVG.old_scenario = details.scenario;

                            jQuery("#save_scenario").show();
                            jQuery("#save_map").hide();
                            }

                            if (mapayes == "yes") {
                                sm.ui.setAvailableTools(["edit", "drag", "eraser", "polygon", "rectangle", "circle"]);
                                map = details.map;
                                removeOverlay();

                                cargarMapa(map);
                                removefillOverlay();

                                jQuery("#mapasHeader").show();
                                jQuery("#mapasHeader").addClass("active");
                                jQuery("#listaHeader").removeClass("active");
                                jQuery("#imagenesHeader").removeClass("active");
                                jQuery("#mapa").addClass("active");
                                jQuery("#lista").removeClass("active");
                                jQuery("#imagenes").removeClass("active");

                                jQuery("#save_map").show();
                                jQuery("#save_scenario").hide();
                            }


                        },
                        error: function (data) {

                            _alert("error", "Ha ocurrido un error");
                        }
                    }); 

                }
                
                if (nodoid == null) nodoid = "null";
                if (nodoid == "null") {
                    cargarwidgetinicio();
                    jQuery("#save_map").hide();
                    sm.ui.setAvailableTools([]);
                    removeOverlay();
                }

                $.ajax({
                    url: "/Locations/Location/getNodesList",
                    type: "POST",
                    data: { nodeid: nodoid },
                    async: false,
                    success: function (data) {
                        //$("#tablebody").html(data);
                        var locations = JSON.parse(data);
                        var dirimg;
                        $("#tablebody tbody").html("");
                        for (var i in locations) {
                          dirimg = locations[i].imgext;
                            
                            $("#tablebody tbody").append(
                                    "<div id='" + locations[i].id + "' data-tipo='" + locations[i].tipo + "' data-name='" + locations[i].name + "' class='subi row-fluid'>" +
                                        "<div class='info span8'><div class='span5'>"+
                                            "<img style='height: 40px; width: 40px;' id='img" + locations[i].id + "' src='" + dirimg + "'></div>"+ 
                                            "<div class='span7'><i>" + locations[i].name + "</i></td></div>" +
                                        "</div>"+
                                        "<div class='tools span4'>" +
                                         "<input name='colour' title='Cambiar Color' type='color' class='color-picker' id='colour" + locations[i].id +"'>"+
                                            '<button title="Cambiar Color" class="confighardware colour btn blue btn-mini pull-right"  data-id=' + locations[i].id +'>'+
                                                '<i class="icon-tint icon-white"></i>'+
                                            '</button>'+
                                            '<button title="Borrar Figura" class="confighardware removeLocation btn red btn-mini pull-right">' +
                                                '<i class="icon-trash icon-white"></i>'+
                                            '</button>'+
                                        "</div>" +
                                        "<div class='span12 more'>" +
                                            "<div class='botones btn-group'>" +
                                                "<button title='Cuadrado' class='btn shape1 sqr-shape light-blue' data-shape='rect' ><i class='icon-stop'></i></button>" +
                                                "<button title='Elipse' class='btn shape1 ellipse-shape light-blue' data-shape='ellipse' ><i class='icon-ellipse'></i></button>" +
                                                "<button title='Poligono' class='btn shape1 poly-shape light-blue' data-shape='path' ><i class='icon-star'></i></button>" +
                                            "</div>"+
                                        "</div>"+
                                    "</div>"
                                );

                            $("#" + locations[i].id).find(".tools").addClass("hidetools");
                            $("#" + locations[i].id).find(".more").removeClass("hidetools");
                            if (planoyes != "yes") {
                                $(".tools").addClass("hidetools");
                                $(".more").addClass("hidetools");
                            }
                            cargarMapaSubs(locations[i].mapa);
                        }

                        if (planoyes == "yes")
                            console.log("Load Options");

                        //Loads the map if it has one
                         //  mapSVG.loadLocations(locations);
                        mapSVG.clearLocations();
                        mapSVG.editing = null;

                        mapSVG.bindActions();
                        mapSVG.remakeScenario();
                       
                    },
                    error: function (data) {
                        //_alert("error","Ha ocurrido un error");
                    }
                });
            }

            

            function fillProfileFields() {
                if (editinglocationData != null) {
                    var obj = JSON.parse(editinglocationData);

                    for (field in obj) {
                        if (field == "ImgUrl") {
                            var picurl = obj.ImgUrl;
                            $("#img_pre").attr("src", picurl)
                        }
                        if (field == "ImgUrl2") {
                            var picurl2 = obj.ImgUrl2;
                            $("#img_pre2").attr("src", picurl2)
                        }
                        if (field == "profileFields") {
                            jQuery("#name").val(obj["name"]);
                            for (key in obj["profileFields"]) {
                                if (jQuery("#" + key).attr("type") == "checkbox") {
                                    jQuery("#" + key).attr("checked", "checked");
                                }
                                else if (jQuery("#" + key).attr("type") == "radio") {
                                    jQuery("[name=" + key + "][value = " + obj["profileFields"][key].toString() + "]").attr("checked", "checked");
                                }
                                else if (jQuery("#" + key).prop("tagName") == "SELECT" && jQuery("#" + key).prop("multiple")) {
                                    var values = obj["profileFields"][key].toString().split(",");
                                    for (value in values) {
                                        jQuery("#" + key + " option[value = " + values[value] + "]").attr("selected", "selected");
                                    }
                                }
                                else if (jQuery("#" + key).prop("type") == "file") {
                                    locationModal.imageArray["" + key] = obj["profileFields"][key].toString();
                                    jQuery("#" + key + "Preview").attr("src", "/Uploads/Images/Locations/CustomImages/" + obj["profileFields"][key].toString());
                                }
                                else {
                                    jQuery("#" + key).val(obj["profileFields"][key].toString());
                                }
                            }
                        } else {
                            $("#" + field).val(obj[field]);
                        }
                    }
                }
            }

            function loadProfileFields(profileID) {
                $.ajax({
                    url: "/Locations/Location/getFormView",
                    type: "POST",
                    data: { profile: profileID },
                    async: false,
                    success: function (data) {
                        $("#staticFieldsSection").nextAll().remove();
                        $("#tabContent1").append(data);
                        selectedProfile = profileID;
                        if (selectedId)
                            fillProfileFields();
                        locationModal.bindAll();

                    },
                    error: function (data) {
                        _alert("error", "Ha ocurrido un error");
                    }
                });
            }

            function loadProfileFieldsTitles(profileID) {
                $.ajax({
                    url: "/Locations/Location/getFormTitlesView",
                    type: "POST",
                    data: { profile: profileID },
                    async: false,
                    success: function (data) {
                        $("#staticFormHeader").nextAll().remove();
                        $("#tabHeader1").append(data);
                        $("#staticFormHeader a").click();
                    },
                    error: function (data) {
                        //_alert("error","Ha ocurrido un error");
                    }
                });
            }

            $("#name").on('change', function () {
                newName = $("#name").val();
                if (newName != selectedName) {
                    $.ajax({
                        url: "/Locations/Location/locationExists",
                        type: "POST",
                        data: { locationName: newName },
                        async: false,
                        success: function (data) {
                            if (data == "true") {
                                locationError = "El nombre de ubicación ya está siendo utilizado.";
                            } else {
                                locationError = null;
                            }
                        }
                    });
                } else {
                    locationError = null;
                }
            });

            jQuery("#globalSearchLocations").on('keypress', function (e) {
                if (e.which == 13) {
                    var cad = jQuery(this).val();
                    var listmailsf = [];
                    var id = "null";
                    @foreach (var mails in (Dictionary<string, string>)ViewData["locations"])
                        {
                        @(new HtmlString("listmailsf.push('" + mails.Key + "|" + mails.Value + "');"))
                    }

                    for (var i = 0; i < listmailsf.length; i++) {
                        var cadenas = listmailsf[i].split('|');

                        if (cadenas[1] == cad) {
                            id = cadenas[0];
                        }

                    }
                    setTree(id);
                    jQuery("#titulo").html(cad);
                    jQuery("#titulo").data("idlocation", id);

                    if (id != "null" && id != null) {

                        jQuery("#deleteLocationButton").show();
                        jQuery("#editLocationButton").show();
                        jQuery("#setupLocationButton").show();
                        jQuery("#changeParentButton").show();

                    } else {
                        id = "null";
                        jQuery("#deleteLocationButton").hide();
                        jQuery("#editLocationButton").hide();
                        jQuery("#setupLocationButton").hide();
                        jQuery("#changeParentButton").hide();
                        jQuery("#listaHeader").hide();
                        jQuery("#imagenesHeader").hide();
                        jQuery("#HardwareHeader").hide();
                        jQuery("#mapasHeader").addClass("active");
                        jQuery("#mapa").addClass("active");
                        jQuery("#lista").removeClass("active");
                        jQuery("#imagenes").removeClass("active");


                    }

                    loadListPanel(id);
                }
            });
            jQuery("#globalSearchButton").click(function () {
                var cad = jQuery("#globalSearchLocations").val();
                var listmailsf = [];
                var id = "null";
                @foreach (var mails in (Dictionary<string, string>)ViewData["locations"])
                {
                   @(new HtmlString("listmailsf.push('" + mails.Key + "|" + mails.Value + "');"))
                }

                for (var i = 0; i < listmailsf.length; i++) {
                    var cadenas = listmailsf[i].split('|');

                    if (cadenas[1] == cad) {
                        id = cadenas[0];
                    }

                }
                setTree(id);
                jQuery("#titulo").html(cad);
                jQuery("#titulo").data("idlocation", id);

                if (id != "null" && id != null) {

                    jQuery("#deleteLocationButton").show();
                    jQuery("#editLocationButton").show();
                    jQuery("#setupLocationButton").show();
                    jQuery("#changeParentButton").show();

                } else {
                    id = "null";
                    jQuery("#deleteLocationButton").hide();
                    jQuery("#editLocationButton").hide();
                    jQuery("#setupLocationButton").hide();
                    jQuery("#changeParentButton").hide();
                    jQuery("#listaHeader").hide();
                    jQuery("#imagenesHeader").hide();
                    jQuery("#HardwareHeader").hide();
                    jQuery("#mapasHeader").addClass("active");
                    jQuery("#mapa").addClass("active");
                    jQuery("#lista").removeClass("active");
                    jQuery("#imagenes").removeClass("active");


                }

                loadListPanel(id);
            });
            $("#setupname").on('change', function () {
                newName = $("#setupname").val();
                if (newName != selectedName) {
                    $.ajax({
                        url: "/Locations/Location/setuplocationExists",
                        type: "POST",
                        data: { setupName: newName },
                        async: false,
                        success: function (data) {
                            if (data == "true") {
                                setupError = "El nombre de configuración ya está siendo utilizado.";
                            } else {
                                setupError = null;
                            }
                        }
                    });
                } else {
                    setupError = null;
                }
            });

            $("#confirmmodal").on('hide', function (event) {
                displaymodal = "none";
            });

            $("#confirmmodal").on('show', function (event) {
                displaymodal = "display";
            });

            $("#controlname").on('change', function () {
                newName = $("#controlname").val();
                if (newName != selectedName) {
                    $.ajax({
                        url: "/Locations/Location/locationExists",
                        type: "POST",
                        data: { locationName: newName },
                        async: false,
                        success: function (data) {
                            if (data == "true") {
                                locationError = "El nombre de ubicación ya está siendo utilizado.";
                            } else {
                                locationError = null;
                            }
                        }
                    });
                } else {
                    locationError = null;
                }
            });

            function LoadHardware(nodoid) {
                jQuery.ajax({
                    url: "/Locations/Location/getHardware",
                    type: "POST",
                    data: { locationid: nodoid },
                    success: function (data) {
                        if (data == "") data = "<tr><td colspan='2'><p class='passCenter'>No hay hardware...</p></td></tr>";
                        jQuery("#tablehardware tbody").html(data);

                        //Event for config button
                        jQuery(".confighardware").click(function () {
                            $("#EditHardwareModal").modal("show");
                        });
                        
                        //Event for remove button
                        jQuery(".removehardware").click(function () {
                            var hardwareId = jQuery(this).closest("tr").attr("id");
                            _confirm({
                                title: "Remover Hardware",
                                message: "Esta seguro en remover este hardware?",
                                action: function () {
                                    removeHardware(hardwareId);
                                }
                            });
                        })
                    }
                });
            }

            function loadparentSelect(objectid) {
                jQuery.ajax({
                    url: "/Locations/Location/loadParents",
                    data: { nodeid: objectid },
                    success: function (data) {
                        jQuery("#parentSelect").html(data);
                    },
                    error: function () {
                        _alert("error", "Ha ocurrido un error");
                    }
                });
            }

            function LoadHardwareSelect() {
                jQuery("#tableHardwareSelect").html("");
                //Add event to back button
                jQuery(".back-btn").unbind("click.back");
                jQuery(".back-btn").bind("click.back", backEffect);
                // main view by default
                backEffect();

                jQuery.ajax({
                    url: "/Locations/Location/GetAvailableHardware",
                    type: "POST",
                    success: function (data) {
                        var hardwareList = JSON.parse(data);

                        if (hardwareList.length > 0) {

                        for (var hardware in hardwareList) {
                            var hwReference = hardwareList[hardware];

                            var element = jQuery("<li>", { "id": hwReference.hardware_reference, "data-order": hardware }).append(
                                                jQuery("<img>", { "src": hwReference.image })
                                            ).append(
                                                jQuery("<div>").html("<span class='title'>" + hwReference.hardwareName)
                                            ).append(
                                                jQuery("<span>", { "class": "available", "title": "Disponibles", "rel": "tooltip" }).html(
                                                    hwReference.list_hardware.length)
                                            );
                            element.click(function () {
                                loadHardwareList(hardwareList[jQuery(this).data("order")]);
                            })

                            jQuery("#tableHardwareSelect").append(element);
                        }
                        }
                        else {
                            jQuery("#tableHardwareSelect").append("<div id='no-hardware'> No tiene Hardware Disponible </div>");
                        }

                        //jQuery(".available[rel=tooltip]").tooltip();

                    }
                });
            }

            function loadHardwareList(hardwareList) {
                var listContainer = jQuery(".hardwareList");
                listContainer.find(".title").html(hardwareList.hardwareName);
                listContainer.find("img").attr("src", hardwareList.image);

                var hardwareTable = listContainer.find("tbody");
                hardwareTable.html("");
                        
                for (var hardware in hardwareList.list_hardware) {
                    var addHW = hardwareList.list_hardware[hardware];
                    hardwareTable.append(
                        jQuery("<tr>", { "data-id": addHW["_id"] }).append(jQuery("<td>").html(addHW.serie)).append(jQuery("<td>").html(
                        '<div class="btn dark_green addNewHardware"><i class="icon-chevron-right icon-white"></i></div>'))
                        );
                    }

                jQuery(".addNewHardware").unbind("click.addHardware");
                jQuery(".addNewHardware").bind("click.addHardware", function () {
                    var hwId = jQuery(this).closest("tr").data("id");
                    addHardware(hwId);
                });
                jQuery("#tableHardwareSelect").css("margin-left", "-100%");

            }

            function backEffect() {
                jQuery("#tableHardwareSelect").css("margin-left", "0%");
            }

            function loadLocationTable() {
                $.ajax({
                    url: "/Locations/Location/getLocationTable",
                    type: "POST",
                    success: function (data) {
                        $("#locationsTable").html(data);

                        $("i.row-trash").on('click', function () {
                            selectedId = $(this).parent().parent().parent().parent().data("idlocation");
                            selectedName = $("#location" + selectedId + " .locationName").text();

                            _confirm({
                                title: "Eliminar Ubicación",
                                message: "¿Seguro que desea eliminar la ubicación " + selectedName + "?",
                                action: function () {
                                    _loading();
                                    $.ajax({
                                        url: "/Locations/Location/deleteLocation",
                                        type: "POST",
                                        data: { selectedID: selectedId },
                                        success: function (data) {
                                            loadLocationTable();
                                            _loading();
                                            _alert("success", "Eliminado Correctamente");
                                            resetData();
                                        },
                                        error: function (data) {
                                            //_loading();
                                            _alert("error", "Ha ocurrido un error");
                                        }
                                    });
                                }
                            });
                        });

                        $("i.icon-edit").on('click', function () {
                            $("#locationForm")[0].reset();
                            selectedId = $(this).parent().parent().parent().parent().data("idlocation");
                            selectedName = $("#location" + selectedId + " .locationName").text();
                            editingProfile = $("#location" + selectedId + " .profile").data("idprofile");
                            $("#profileSelect").val(editingProfile);
                            //$("#parentSelect").val(editingProfile);
                            loadProfileFields(editingProfile);
                            loadProfileFieldsTitles(editingProfile);
                            cleanMessages();
                            $(".modal-header-text").text("Modificar Ubicación");
                            $("#admin_panel").modal("show");
                            _loading();
                            $.ajax({
                                url: "/Locations/Location/getLocation",
                                data: { locationID: selectedId },
                                type: "POST",
                                success: function (data) {
                                    _loading();
                                    editinglocationData = data;
                                    fillProfileFields();
                                },
                                error: function () {
                                    //_loading();
                                    _alert("error", "Ha ocurrido un error");
                                }
                            });
                            $("#admin_panel").modal("show");
                        });

                    }
                });
            }

            jQuery("#hardsave_button").click(function () {
                if (jQuery('#hardSelect').val().toString() == "null") {
                    _alert("error", "Debe de seleccionar una hardware primero!");
                    return false;
                }
                locationId = jQuery("#titulo").data("idlocation");

                idHardware = jQuery('#hardSelect').val();
                var ip = jQuery('#ipname').val();

                result = {
                    id: ip
                };

                jQuery.ajax({
                    url: "/Locations/Location/saveHardware",
                    datatype: "json",
                    type: "POST",
                    data: { jsonString: JSON.stringify(result), idHardware: _idHardware },
                    traditional: true,
                    beforeSend: _loading(),
                    success: function (data) {
                        var locationId = jQuery("#titulo").data("idlocation");
                        LoadHardware(locationId);
                        _loading();
                        jQuery("#hardmodal").modal('hide');
                        _alert("success", "Guardado Correctamente");
                    },
                    error: function () {
                        _loading();
                        _alert("error", "Ha ocurrido un error");
                    }
                });

            });

           
            //var tree = new RivkaTree("location_tree", {
            //    method: RivkaTree.METHODS.AJAX,
            //    url: "/Locations/Location/getNodes",
            //    idKey: "_id",
            //    nameKey: "name",
            //    dragdrop: updTree,
            //    dragurl: " /Locations/Location/updateParentLocation",
            //    onNodeSelectAction: function (data) {
            //        var id = jQuery(this).closest("li").data("idcategory");
            //        var cad = jQuery(this).closest("label").text();
            //        jQuery("#titulo").html(cad);
            //        jQuery("#titulo").data("idlocation", id);
                 
            //        if (id != "null" && id != null) {
                        
            //            jQuery("#deleteLocationButton").show();
            //            jQuery("#editLocationButton").show();
            //            jQuery("#setupLocationButton").show();
            //            jQuery("#changeParentButton").show();

            //        } else {
            //            id = "null";
            //            jQuery("#deleteLocationButton").hide();
            //            jQuery("#editLocationButton").hide();
            //            jQuery("#setupLocationButton").hide();
            //            jQuery("#changeParentButton").hide();
            //            jQuery("#listaHeader").hide();
            //            jQuery("#imagenesHeader").hide();
            //            jQuery("#HardwareHeader").hide();
            //            jQuery("#mapasHeader").addClass("active");
            //            jQuery("#mapa").addClass("active");
            //            jQuery("#lista").removeClass("active");
            //            jQuery("#imagenes").removeClass("active");


            //        }

            //        loadListPanel(id);

            //    }
            //});

            $("#imagenesHeader").on("click", function () {
                jQuery("#save_scenario").show();
                jQuery("#save_map").hide();
            });
            
            $("#mapasHeader").on("click", function () {
                jQuery("#save_scenario").hide();
                jQuery("#save_map").show();
            });

            $("#listaHeader").on("click", function () {
                jQuery("#save_scenario").hide();
                jQuery("#save_map").hide();
            });

            $("#addLocationButton").on("click", function () {
                jQuery.ajax({
                    url: "/Locations/Location/validateLimit",

                    beforeSend: _loading(),
                    success: function (data) {

                        if (data == "true") {
                $("#locationForm")[0].reset();
                cleanMessages();
                cargarProfiles();
                cargarsetups();
                $(".modal-header-text").text("Agregar en Ubicación " + jQuery("#titulo").text());
                $("#admin_panel").modal("show");
                resetData();
                selectedParent = $("#titulo").data("idlocation");  
                        } else {
                            // _alert("error", data+"Ubicaciones");
                            alertblue(data + "Ubicaciones");
                        }
                        _loading();
                    },
                    error: function () {
                        _loading();
                        _alert("error", "Ha ocurrido un error");
                    }
            });

            });

            $("#addLocationControlButton").on("click", function () {



                $("#locationForm")[0].reset();
                cleanMessages();
                $(".modal-header-text").text("Agregar Ubicación de control en Ubicación " + jQuery("#titulo").text());
                $("#controllocationmodal").modal("show");
                resetData();
                selectedParent = $("#titulo").data("idlocation");






              
            });



            $("#editLocationButton").on("click", function () {
                $("#locationForm")[0].reset();
                cargarProfiles();
                cargarsetups();
                selectedId = jQuery("#titulo").data("idlocation");
                editingProfile = $("#profile").data("idprofile");
                editingsetup = $("#setupdetail").data("setup");
                $("#profileSelect").val(editingProfile);
                $("#setupSelect").val(editingsetup);
                
                loadProfileFields(editingProfile);
                loadProfileFieldsTitles(editingProfile);
                cleanMessages();
                $(".modal-header-text").text("Modificar Ubicación " + jQuery("#titulo").text());
                selectedParent = null;
                $("#admin_panel").modal("show");
                _loading();
                $.ajax({
                    url: "/Locations/Location/getLocation",
                    data: { locationID: selectedId },
                    type: "POST",
                    success: function (data) {
                        _loading();
                        editinglocationData = data;
                        fillProfileFields();
                        var data = JSON.parse(data);
                        selectedParent = data["parent"];
                    },
                    error: function () {
                        //_loading();
                        _alert("error", "Ha ocurrido un error");
                    }
                });
                $("#admin_panel").modal("show");
            });

            $("#changePlanoButton").on("click", function () {
                selectedId = jQuery("#titulo").data("idlocation");

                //loadProfileFields(editingProfile);
                //loadProfileFieldsTitles(editingProfile);
                cleanMessages();
                $(".modal-header-text").text("Guardar plano para " + jQuery("#titulo").text());
                $("#img_pre2").attr("src", "/Content/Images/planos/No-Imagen-Disponible-Ubicacion.png");
                $("#PlanoImagemodal").modal("show");
                _loading();
                $.ajax({
                    url: "/Locations/Location/getLocation",
                    data: { locationID: selectedId },
                    type: "POST",
                    success: function (data) {
                        _loading();
                        editinglocationData = data;
                        fillProfileFields();
                        var data = JSON.parse(data);
                        selectedParent = data["parent"];
                    },
                    error: function () {
                        //_loading();
                        _alert("error", "Ha ocurrido un error");
                    }
                });
                $("#PlanoImagemodal").modal("show");
            });


            $("#setupLocationButton").on("click", function () {
                selectedId = jQuery("#titulo").data("idlocation");
                $(".modal-header-text").text("Guardar como configuración a  " + jQuery("#titulo").text());
                $("#setupname").val($("#setupnamedetail").data("setup"));
                cleanMessages();
                $("#setupmodal").modal("show");
            });

            $("#changeParentButton").on("click", function () {
                selectedId = jQuery("#titulo").data("idlocation");
                $(".modal-header-text").text("Actualizar padre a  " + jQuery("#titulo").text());
                cleanMessages();
                loadparentSelect(selectedId);
                $("#parentmodal").modal("show");
            });

            $("#addHardwareButton").on("click", function () {
                selectedId = jQuery("#titulo").data("idlocation");
                $(".modal-header-text").text("Actualizar Hardware a  " + jQuery("#titulo").text());
                cleanMessages();
                LoadHardwareSelect();
                $("#hardmodal").modal("show");
            });

            $("#cancel_button").on("click", function () {
                $("#admin_panel").modal("hide");
                $("#img_pre").attr("src", "/Content/Images/planos/No-Imagen-Disponible.png");
                resetData();
            });

            $("#setupnon_button").on("click", function () {
                $("#setupmodal").modal("hide");
                resetData();
            });


            $("#parentnon_button").on("click", function () {
                $("#parentmodal").modal("hide");
                resetData();
            });

            $("#edithwnon_button").on("click", function () {
                $("#EditHardwareModal").modal("hide");
                resetData();
            });

            jQuery("#edithwsave_button").click(function () {
               
                idHardware = selectedHW;
                var ipHardware = jQuery("#ipname").val();

                result = '{' +
                    '"ip" : "' + ipHardware + '"' +
                    '}';

                jQuery.ajax({
                    url: "/Locations/Location/saveHardware",
                    datatype: "json",
                    async: false,
                    type: "POST",
                    data: { jsonString: result, idHardware: idHardware },
                    traditional: true,
                    success: function (data) {
                        jQuery("#EditHardwareModal").modal('hide');
                        _alert("success", "Guardado Correctamente");
                    },
                    error: function () {
                        _alert("error", "Ha ocurrido un error");
                    }
                });
                //   resetValues();
            });


            $("#hardnon_button").on("click", function () {
                $("#hardmodal").modal("hide");
                resetData();
            });

            $("#controlnon_button").on("click", function () {
                $("#controllocationmodal").modal("hide");
                resetData();
            });

            $("#planonon_button").on("click", function () {
                $("#PlanoImagemodal").modal("hide");
                $("#img_pre2").attr("src", "/Content/Images/planos/No-Imagen-Disponible-Ubicacion.png");
                resetData();
            });

            $("#setupsave_button").on("click", function () {
                var message = null;
                if (setupError != null) {
                    message = setupError;
                }
                if (message == null) {
                    setupName = $("#setupnamedetail").data("setup");
                    selectedId = jQuery("#titulo").data("idlocation");
                    varsetup = jQuery("#setupname").val();
                    $.ajax({
                        url: "/Locations/Location/saveSetuplocation",
                        type: "POST",
                        data: { selectedID: selectedId, setup: varsetup },
                        success: function (data) {
                            $("#setupmodal").modal("hide");
                            loadListPanel($("#titulo").data("idlocation"));
                                $("#setupSelect").find("option[value='" + setupName + "']").remove();
                                $("#setupSelect").append("<option value='" + varsetup + "'>" + varsetup + "</option>");
                        
                            resetData();
                            _alert("success", "Guardado Correctamente");

                        },
                        error: function () {
                            _alert("error", "Ha ocurrido un error");

                        }
                    });
                } else
                    $("#setupfinal_msg").text(message);
                
            });

            $("#parentsave_button").on("click", function () {
                var message = null;
                if (setupError != null) {
                    message = setupError;
                }
                if (message == null) {
                    selectedId = jQuery("#titulo").data("idlocation");
                    var newparent = jQuery("#parentSelect").val();
                    $.ajax({
                        url: "/Locations/Location/updateParentLocation",
                        type: "POST",
                        data: { id: selectedId, newparent: newparent },
                        success: function (data) {
                            $("#parentmodal").modal("hide");
                            loadListPanel($("#titulo").data("idlocation"));
                          //  tree.init({ id: "null", name: "Inicio" });
                         //   jQuery("#location_tree").find("li[data-idcategory='null']").find("label:first").click();
                            //     setTree($("#titulo").data("idlocation"));
                            var getitem = $("#location_tree").data("kendoTreeView").dataSource.get($("#titulo").data("idlocation"));
                            $("#location_tree").data("kendoTreeView").select($("#location_tree").data("kendoTreeView").findByUid(getitem.uid));

                            //$("#location_tree").data("kendoTreeView").findByUid(dataItem.uid).children('.k-group').remove();
                            //obtenerNodes(dataItem.id);
                            //if (datos.length > 0) {
                            //    $("#location_tree").data("kendoTreeView").append(datos, $("#location_tree").data("kendoTreeView").findByUid(dataItem.uid));
                            //}
                            resetData();
                          
                            _alert("success", "Guardado Correctamente");

                        },
                        error: function () {
                            _alert("error", "Ha ocurrido un error");

                        }
                    });
                } else
                    $("#setupfinal_msg").text(message);

            });

            $("#planosave_button").on("click", function () {
                
                selectedId = jQuery("#titulo").data("idlocation");
                var fd = new FormData();
                fd.append('selectedID', selectedId);
                fd.append('file', $('#planofile')[0].files[0]);
                _loading();
                $.ajax({
                    url: "/Locations/Location/SavePlanoFile",
                    type: "POST",
                    data: fd,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        _loading();
                        _alert("success", "Guardado Correctamente");
                        $("#PlanoImagemodal").modal("hide");
                        resetData();
                        loadListPanel($("#titulo").data("idlocation"));
                      //  tree.init({ id: "null", name: "Inicio" });
                        //  jQuery("#location_tree").find("li[data-idcategory='null']").find("label:first").click();
                   //     setTree($("#titulo").data("idlocation"));
                        var getitem = $("#location_tree").data("kendoTreeView").dataSource.get($("#titulo").data("idlocation"));
                        $("#location_tree").data("kendoTreeView").select($("#location_tree").data("kendoTreeView").findByUid(getitem.uid));

                        $("#img_pre2").attr("src", "/Content/Images/planos/No-Imagen-Disponible-Ubicacion.png");

                    },
                    error: function () {
                        //_loading();
                        _alert("error", "Ha ocurrido un error");

                    }
                });

            });

            $("#controlsave_button").on("click", function () {
                var message = null;
                if (locationError != null) {
                    message = locationError;
                }
                if (message == null) {
                    var tipo = "2";
                    var formString = "locationID=" + selectedId + "&profileSelect=null&parentSelect=" + selectedParent + "&tipo=" + tipo + "&setupSelect=null&name=" + $("#controlname").val();

                    var fd = new FormData();
                    fd.append('data', formString);
                    fd.append('file', $('#file2')[0].files[0]);
                    _loading();
                    $.ajax({
                        url: "/Locations/Location/saveLocation",
                        type: "POST",
                        data: fd,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            _loading();
                            _alert("success", "Guardado Correctamente");
                            $("#controllocationmodal").modal("hide");
                            resetData();
                            $("#locationForm")[0].reset();
                            $("#controlname").val("");
                            loadListPanel($("#titulo").data("idlocation"));
                           // jQuery("#location_tree").find("li[data-idcategory='null']").find("label:first").click();
                        //    tree.init({ id: "null", name: "Inicio" });
                            //    setTree($("#titulo").data("idlocation"));
                            var getitem = $("#location_tree").data("kendoTreeView").dataSource.get($("#titulo").data("idlocation"));

                            $("#location_tree").data("kendoTreeView").findByUid(getitem.uid).children('.k-group').remove();
                            obtenerNodes($("#titulo").data("idlocation"));
                            if (datos.length > 0) {
                                $("#location_tree").data("kendoTreeView").append(datos, $("#location_tree").data("kendoTreeView").findByUid(getitem.uid));
                            }

                            $("#location_tree").data("kendoTreeView").select($("#location_tree").data("kendoTreeView").findByUid(getitem.uid));


                            $("#img_pre").attr("src", "/Content/Images/planos/No-Imagen-Disponible.png");

                        },
                        error: function () {
                            //_loading();
                            _alert("error", "Ha ocurrido un error");

                        }
                    });
                } else
                    $("#control_msg").text(message);

            });

            $(".icon-remove").on("click", function () {
                resetData();
            });


            $("#profileSelect").on("change", function () {
                selectedProfile = $(this).val();
                loadProfileFields(selectedProfile);
                loadProfileFieldsTitles(selectedProfile);
            });

            $("#setupSelect").on("change", function () {
                selectedsetup = $(this).val();
            });

            $("#save_button").click(function () {
                var inputsArray = $("#admin_panel .tab-content input[type!=file]");
                

                for (i = 0; i < inputsArray.length; i++) {
                    input = $(inputsArray[i]);
                    if (input.val() == "" && selectedId != null) {
                        if (input.attr("id") == "pwd") continue;
                        if (input.attr("id") == "pwdConfirm") continue;
                    }
                    regExp = new RegExp(input.attr("pattern"));
                    if ((input.val() == "" && input.attr("required") == "required") || !input.val().match(regExp)) {
                        panelToShow = input.closest(".tab-pane").attr("id");
                        $("#tabHeader1 " + "a[href=#" + panelToShow + "]").click();
                        break;
                    }
                }
            });

            
            
            $("#locationForm").on("submit", function () {
                if (locationError != null) {
                    $("#final_msg").text(locationError);
                }
                else if (selectedId != null && (selectedProfile != editingProfile)) {
                    _confirm({
                        title: "Guardar Ubicación",
                        message: "El cambio de perfil puede ocasionar pérdida de información si el nuevo perfil no contiene los campos del anterior. ¿Está seguro que desea realizar la modificación de perfil?",
                        action: function () { guardar(); }
                    });
                } else if (selectedId != null && (selectedsetup != editingsetup)) {
                    _confirm({
                        title: "Guardar Ubicación",
                        message: "El cambio de setup puede ocasionar pérdida de información si el nuevo setup no contiene las ubicaciones del anterior. ¿Está seguro que desea realizar la modificación de setup?",
                        action: function () { guardar(); }
                    });
                } else {
                    guardar();
                }
                
                return false;
            });

        //    tree.init({ id: "null", name: "Inicio" });
            //

            function cargarProfiles() {
                $.ajax({
                    url: "/Locations/Location/loadprofiles",
                    type: "POST",
                    async:false,
                    success: function (data) {
                        jQuery("#profileSelect").html(data);
                    },
                    error: function () {
                        _alert("error", "Ha ocurrido un error");
                    }
                });
            }

            function cargarsetups() {
                $.ajax({
                    url: "/Locations/Location/loadsetups",
                    type: "POST",
                    async: false,
                    success: function (data) {
                        jQuery("#setupSelect").html(data);
                    },
                    error: function () {
                        _alert("error", "Ha ocurrido un error");
                    }
                });
            }

            function guardar() {
                var tipo = "1";
                var formString = "locationID=" + selectedId + "&profileSelect=" + $("#profileSelect").val() + "&parentSelect=" + selectedParent + "&tipo=" + tipo + "&setupSelect=" + $("#setupSelect").val() + "&" + $("#locationForm").serialize();

                //copiar
                var keys = Object.keys(locationModal.imageArray);
                for (i = 0; i < keys.length; i++) {
                    formString += "&" + keys[i] + "=" + locationModal.imageArray[keys[i]];
                }

                var fd = new FormData();
                fd.append('data', formString);
                fd.append('file', $('#file')[0].files[0]);
                _loading();
                $.ajax({
                    url: "/Locations/Location/saveLocation",
                    type: "POST",
                    data: fd,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        datos = JSON.parse(data);
                        _loading();
                        _alert("success", "Guardado Correctamente");
                        $("#admin_panel").modal("hide");
                        resetData();
                        $("#locationForm")[0].reset();
                        
                        loadListPanel($("#titulo").data("idlocation"));
                  //      tree.init({ id: "null", name: "Inicio" });
                      //  jQuery("#location_tree").find("li[data-idcategory='null']").find("label:first").click();
                  //      setTree($("#titulo").data("idlocation"));
                        var getitem = $("#location_tree").data("kendoTreeView").dataSource.get($("#titulo").data("idlocation"));

                        //$("#location_tree").data("kendoTreeView").findByUid(getitem.uid).children('.k-group').remove();
                        //obtenerNodes($("#titulo").data("idlocation"));
                        //if (datos.length > 0) {
                            $("#location_tree").data("kendoTreeView").append(datos, $("#location_tree").data("kendoTreeView").findByUid(getitem.uid));
                       // }

                        $("#location_tree").data("kendoTreeView").select($("#location_tree").data("kendoTreeView").findByUid(getitem.uid));



                        locationModal.imageArray = {};
                        $("#img_pre").attr("src", "/Content/Images/planos/No-Imagen-Disponible.png");

                    },
                    error: function () {
                        //_loading();
                        _alert("error", "Ha ocurrido un error");

                    }
                });
            }

            //...........................

            function setTree(id) {
                $.ajax({
                    url: "/Locations/Location/getRoute",
                    data: { parentCategory: id },
                    type: "POST",
                    success: function (data) {
                        var data = JSON.parse(data);

                        for (i = data["route"].length-1; i >= 0; i--) {
                            var getitem = $("#location_tree").data("kendoTreeView").dataSource.get(data["route"][i].id);
                            if (jQuery("#location_tree").data("kendoTreeView").findByUid(getitem.uid).children('.k-group').length == 0) {
                                obtenerNodes(getitem.id);
                                if (datos.length > 0) {
                                    jQuery("#location_tree").data("kendoTreeView").append(datos, jQuery("#location_tree").data("kendoTreeView").findByUid(getitem.uid));
                                }

                            }
                            if (i == 0) { $("#location_tree").data("kendoTreeView").select($("#location_tree").data("kendoTreeView").findByUid(getitem.uid)); }
                        }
                        

                   //     tree.openRoute(data["route"]);
                    }, error: function () { _alert("error", "Ha ocurrido un error"); }
                });
            }
            //...........................
            
            $("#deleteLocationButton").on("click", function () {
                _confirm(
                    {
                        title: "Eliminar Ubicación  " + jQuery("#titulo").text(),
                        message: "¿Seguro que desea eliminar la ubicación " + jQuery("#titulo").text() + "?",
                        action: function () {
                            selectedID = $("#titulo").data("idlocation");
                            _loading();
                            $.ajax({
                                url: "/Locations/Location/deleteNode",
                                type: "POST",
                                data: { selectedID: selectedID },
                                traditional: true,
                                success: function (data) {
                                    _loading();
                                    _alert("success", "Eliminado Correctamente");
                                    //if ($("#titulo").data("idlocation") == "null") {
                              //      tree.init({ id: "null", name: "Inicio" });
                                    jQuery("#location_tree").find("li[data-idcategory='null']").find("label:first").click();
                                    //}
                                    //else{
                                    //tree.loadNodeContentAction($("#tree_2").find("li[data-idlocation=" + $("#titulo").data("idlocation") + "]"));
                                    //loadListPanel($("#titulo").data("idlocation"));
                                    //}
                                    $("#detalles").empty();
                                    $("#tablebody").empty();
                                    resetData();
                                    //_alert("success","La ubicación " + jQuery("#titulo").text() + " ha sido borrada." );
                                    
                                 
                                },
                                error: function () {
                                    //_loading();
                                    _alert("error", "Ha ocurrido un error");
                                }
                        });

                            }
                    });
            });
        });
    </script>

    @*Scripts for the SVG section*@
    <script src="/Content/Scripts/svg.js"></script>
    <script src="/Content/Scripts/svg.tools.js"></script>
    @*<script src="/Content/Scripts/SVGPan.js" ></script>*@

    <script>
        var mapSVG;
        var main_location = {};

        $(document).ready(function ($) {

            mapSVG = {
                draw: null, path: null, locations: {}, editing: null, image: null, no_image: null, old_scenario: [],
                //hardware
                hardwares: {}, old_hardware: [],

                init: function () {

                    if (this.draw != null)
                        this.destroy();
                        
                    var drawSet = SVG("svg-container").size(500, 500);
                    this.draw = drawSet.group().attr({ id: "viewport" });
                },

                destroy: function () {
                    if (this.draw != null) {
                        this.draw.parent.firstChild.remove()
                        this.draw = null
                    }
                },

                loadMap: function (map) {
                    //initialize Zoom action
                    this.draw.makeZoomable();

                    //First remove previous image
                    if (this.image != null) 
                        this.image.remove();
                    if (this.no_image != null)
                        this.no_image.remove();

                    this.image = null;
                    this.no_image = null;

                    var imgtest = new Image();

                    //Set an image if it has one
                    if (typeof map != "undefined") {
                        imgtest.src = map;
                        var image = this.draw.image(map).size(imgtest.width, imgtest.height);
                        this.image = image;

                    }
                    else {
                        var noImage = this.draw.image("/Content/Images/planos/No-Imagen-Disponible-Ubicacion.png").size(400, 300).style("cursor", "pointer");
                        this.no_image = noImage;
                        noImage.click(function () {
                            $("#changePlanoButton").click();
                        })
                    }
                    
                },

                loadLocations: function (locations) {
                    $("#location-list tbody").html("");
                    var dirimg;
                    for (var i in locations) {
                   //     if (locations[i].tipo == "1") {
                            if (locations[i].imgext == "null") {
                                dirimg = '/Content/Images/planos/No-Imagen-Disponible.png';
                            }
                            else {
                                dirimg = locations[i].imgext;
                            }

                                //$("<tr>", { id: locations[i].id, "data-tipo": locations[i].tipo, "data-name": locations[i].name })
                           
                            
                            var cadena = "<tr style='padding: inherit;' id='" + locations[i].id + "', data-tipo='" + locations[i].tipo + "' data-name='" + locations[i].name + "'><td><div class='span12'>" +

                           "<div class='span5' ><img style='height: 50px; width: 50px; border-radius: 50%;' id='img" + locations[i].id + "' src='" + dirimg + "'></div>"
                            + "<div class='span7'>" + locations[i].name + "</div>"


                            + "</div></td>" +
                            "<td><div class='span12'>" +
                            "<div class='botones btn-group'>" +
                            "<button title='Cuadrado' class='btn shape1 sqr-shape' data-shape='rect' ><i class='icon-stop'></i></button>" +
                            "<button title='Elipse' class='btn shape1 ellipse-shape' data-shape='ellipse' ><i class='icon-ellipse'></i></button>" +
                            "<button title='Poligono' class='btn shape1 poly-shape' data-shape='path' ><i class='icon-star'></i></button>" +
                             "<button title='Borrar' class='removeLocation btn red' ><i class='icon-trash icon-white'></i></button>" +
                          "<input name='colour' title='Cambiar Color' type='color' class='color-picker'id='colour" + locations[i].id +"'>"
                        + "</div></td></tr>";

                            $("#location-list tbody").append(cadena);

                    }


                    this.clearLocations();
                    this.editing = null;

                    this.bindActions();
                },

                setLocation: function (idLocation, element, typeElement, typeLocation, nameLocation) {
                    var attr = {};
                    attr.typeLocation = typeLocation;
                    attr.nameLocation = nameLocation;
                    attr.idLocation = idLocation;
                    if (typeof (element) != "undefined") {
                        if (typeElement == "rect") {
                            attr.fill = element.fill;
                            attr.x = element.x;
                            attr.y = element.y;
                            attr.width = element.width;
                            attr.height = element.height;
                            attr.title = nameLocation;
                        } 
                        if (typeElement == "ellipse") {
                            attr.fill = element.fill;
                            attr.cx = element.cx;
                            attr.cy = element.cy;
                            attr.rx = element.rx;
                            attr.ry = element.ry;
                            attr.x = element.x;
                            attr.y = element.y;
                            attr.width = element.width;
                            attr.height = element.height;
                        }
                        if (typeElement == "path") {
                            attr.fill = element.fill;
                            attr.d = element.d;
                            attr.stroke = element.stroke;
                        }
                        
                    }
                    else {
                        var rColor = {
                            r: Math.floor(Math.random() * 17).toString(16) + Math.floor(Math.random() * 17).toString(16),
                            g: Math.floor(Math.random() * 17).toString(16) + Math.floor(Math.random() * 17).toString(16),
                            b: Math.floor(Math.random() * 17).toString(16) + Math.floor(Math.random() * 17).toString(16)
                        };

                        if (typeElement != "path") {
                            attr.fill = "#" + rColor.r + rColor.g + rColor.b;
                            attr.x = 10;
                            attr.y = 10;
                            attr.width = 80;
                            attr.height = 60;
                        }
                        else {
                            attr.d = "M0 0";
                            attr.fill = '#' + rColor.r + rColor.g + rColor.b;
                           
                            
                        }
                        
                    }
                    
                    attr.opacity = 0.5;

                    if (typeElement == "rect")
                        var shape = this.draw.rect(attr.width, attr.height).attr(attr);
                    if (typeElement == "ellipse")
                        var shape = this.draw.ellipse(attr.width, attr.height).attr(attr);
                    if (typeElement == "path") {
                        var shape = this.draw.path(attr.d).attr(attr);
                        shape.attr({ stroke: 'black', 'stroke-width': 1 });
                    }
                        

                    if (attr.d != "M0 0") {
                        if (typeLocation == "2") { shape.makeResizable(); }
                        else
                            shape.makeResizable();
                    }
                        
                    this.locations["e" + idLocation] = shape;
                    return shape;
                },

                //Removes all locations in the scenario
                clearLocations: function () {
                    for (var i in this.locations) {
                        if (this.locations[i] != undefined) {
                            try {
                                this.locations[i].fixResize();
                            }
                            catch (Exception) { }
                            this.locations[i].remove();
                        }
                    }
                    this.locations = {};
                },
                
                //Removes the edition wrapper of each location
                fixAll: function () {
                    for (var i in this.locations) {
                        if (this.locations[i] != undefined) {
                            try {
                                this.locations[i].fixResize();
                            }
                            catch (Exception) { }
                        }
                    }
                },

                //Returns an array of elements positioned in the scenario
                getSVGScenario: function () {
                    var scenario = [];
                    this.fixAll();
                    var box, xcrop, ycrop, widthcrop, heightcrop;
                    var crop;
                    for (var i in this.locations) {
                        if (this.locations[i] != undefined) {

                            var thisLocation = this.locations[i];
                            if (thisLocation.type == "path") {
                                var element = {
                                    type: thisLocation.type,
                                    d: thisLocation.node.attributes.d.nodeValue,
                                    fill: thisLocation.node.attributes.fill.nodeValue
                                };
                                box = thisLocation.bbox();
                                crop = {
                                    xcrop: box.x.toString(),
                                    ycrop: box.y.toString(),
                                    widthcrop: box.width.toString(),
                                    heightcrop: box.height.toString()
                                };
                                
                            }
                            if (thisLocation.type == "rect") {
                                var element = {
                                    type: thisLocation.type,
                                    width: thisLocation.width(),
                                    height: thisLocation.height(),
                                    x: thisLocation.x(),
                                    y: thisLocation.y(),
                                    fill: thisLocation.node.attributes.fill.nodeValue
                                };

                                crop = {
                                    xcrop: thisLocation.x().toString(),
                                    ycrop: thisLocation.y().toString(),
                                    widthcrop: thisLocation.width().toString(),
                                    heightcrop: thisLocation.height().toString()
                                };
                                
                            }
                            if (thisLocation.type == "ellipse") {
                                var element = {
                                    type: thisLocation.type,
                                    width: thisLocation.width(),
                                    height: thisLocation.height(),
                                    x: thisLocation.x(),
                                    y: thisLocation.y(),
                                    cx: thisLocation.node.attributes.cx.nodeValue,
                                    cy: thisLocation.node.attributes.cy.nodeValue,
                                    rx: thisLocation.node.attributes.rx.nodeValue,
                                    ry: thisLocation.node.attributes.ry.nodeValue,
                                    fill: thisLocation.node.attributes.fill.nodeValue
                                };

                                crop = {
                                    xcrop: thisLocation.x().toString(),
                                    ycrop: thisLocation.y().toString(),
                                    widthcrop: thisLocation.width().toString(),
                                    heightcrop: thisLocation.height().toString()
                                };
                            }

                            scenario.push({
                                id_location: i.substr(1, i.length - 1), element: element, crop: crop, typeLocation: thisLocation.node.attributes.typeLocation.nodeValue, nameLocation: thisLocation.node.attributes.nameLocation.nodeValue
                            });
                        }
                    }
                    return scenario;
                },

                //Remakes the scenario if it has one previous saved scenario
                remakeScenario: function () {
                    for (var i in this.old_scenario) {
                        var newId = this.old_scenario[i].id_location;
                        var newElement = this.old_scenario[i].element;

                        var titulo = "";
                        if (newElement.type == "rect") titulo = "Cuadrado";
                        if (newElement.type == "ellipse") titulo = "Elipse";
                        if (newElement.type == "path") titulo = "Poligono";
                        if ($("#" + newId).length) {
                            var shape = this.setLocation(newId, newElement, newElement.type, "1", this.old_scenario[i].nameLocation);

                            shape.on("click", function () {
                                var idLocation = this.getAttribute("idLocation");
                                var title = $("#div" + idLocation + " label").text();
                                var curs = jQuery(this).css("cursor");

                                if (curs == "pointer") {

                                   
                                    var row = $("#"+idLocation).closest(".row-fluid");
                                   
                                    var tipoLocation = row.data("tipo");
                                    var nameLocation = row.data("name");

                                    row.siblings().removeClass("active1");
                                    row.addClass("active1");
                                    mapSVG.fixAll();
                                    row.find(".more").addClass("hidetools");
                                    row.find(".tools").removeClass("hidetools");
                                    mapSVG.locations["e" + idLocation].makeResizable();
                                    mapSVG.editing = "e" + idLocation;
                                }
                                console.log(jQuery(this).css("cursor"));
                            });

                            $("#" + newId).find("button[title='" + titulo + "']").click();
                            $("#" + newId).find(".more").addClass("hidetools");
                            $("#" + newId).find(".tools").removeClass("hidetools");
                        }

                    }
                },


                saveScenario: function () {
                    var scenario = this.getSVGScenario();
                    scenario = JSON.stringify(scenario);
                    $.ajax({
                        url: "/locations/location/savelocationscenario",
                        data: { id_location: main_location.id, scenario: scenario },
                        type: "POST",
                        beforeSend: _loading(),
                        complete: _loading,
                        success: function (data) {
                            _alert("success", "Guardado Correctamente")
                        },
                        error: function () {
                            _alert("error", "Ha ocurrido un error")
                        }
                    });
                    
                },


                bindActions: function () {
                    $(".shape1").click(function () {
                        if (mapSVG.image != null) {
                            var row = $(this).closest(".row-fluid"); 
                            var idLocation = row.attr("id");
                            var tipoLocation = row.data("tipo");
                            var nameLocation = row.data("name");
                          
                            row.siblings().removeClass("active1");
                            row.addClass("active1");
                            mapSVG.fixAll();

                            row.find(".more").addClass("hidetools");
                            row.find(".tools").removeClass("hidetools");

                            if (typeof mapSVG.locations["e" + idLocation] == "undefined" || mapSVG.locations["e" + idLocation] == null) {
                                mapSVG.setLocation(idLocation, undefined, $(this).data("shape"), tipoLocation.toString(), nameLocation.toString());
                                if (mapSVG.locations["e" + idLocation].type == "path") {
                                    mapSVG.draw.attr({ style: "cursor:hand" });
                                }
                            }
                                
                            else {
                                if (mapSVG.locations["e" + idLocation].type == $(this).data("shape")) {
                                    if (mapSVG.locations["e" + idLocation].type != "path" || (mapSVG.locations["e" + idLocation].type == "path" && mapSVG.locations["e" + idLocation].attr("d") != "M0 0")) {
                                        //if (tipoLocation == 2) { mapSVG.locations["e" + idLocation].makeResizableControl(); }
                                        //else {
                                        //    mapSVG.locations["e" + idLocation].makeResizable();
                                        //}
                                        mapSVG.locations["e" + idLocation].makeResizable();
                                    }
                                }
                                else {
                                    mapSVG.setLocation(idLocation, undefined, $(this).data("shape"), tipoLocation.toString(), nameLocation.toString());
                                    if (mapSVG.locations["e" + idLocation].type == "path") {
                                        mapSVG.draw.attr({ style: "cursor:hand" });
                                    }
                                }
                                
                                    
                            }
                            
                            var cad1 = mapSVG.locations["e" + idLocation].node.attributes.fill.value;
                        
                            mapSVG.locations["e" + idLocation].on("click", function () {
                                var idLocation = this.getAttribute("idLocation");
                                var title = $("#div" + idLocation + " label").text();
                                var curs = jQuery(this).css("cursor");

                                if (curs == "pointer") {


                                    var row = $("#" + idLocation).closest(".row-fluid");

                                    var tipoLocation = row.data("tipo");
                                    var nameLocation = row.data("name");

                                    row.siblings().removeClass("active1");
                                    row.addClass("active1");
                                    mapSVG.fixAll();
                                    row.find(".more").addClass("hidetools");
                                    row.find(".tools").removeClass("hidetools");
                                    mapSVG.locations["e" + idLocation].makeResizable();
                                    mapSVG.editing = "e" + idLocation;
                                }
                                console.log(jQuery(this).css("cursor"));
                            });
                            //$(this).siblings().find("input").css({ color: cad1, background: cad1 });
                            //$(this).siblings().find("input").val(mapSVG.locations["e" + idLocation].node.attributes.fill.nodeValue.replace('#', ''));
                            mapSVG.editing = "e" + idLocation;
 
                        }
                        else {
                            //si ya esta abierta la ventana no abrirla
                            if (displaymodal == "none") {
                                _confirm({
                                    title: "Agregar Imagen",
                                    message: "No tiene ninguna imagen asociada a esta ubicación, desea agregar una ahora?",
                                    action: function () {
                                        $("#changePlanoButton").click();
                                    }
                                });
                            }
                            
                        }
                        
                    });

                    $(".editLocation").click(function () {
                        if (mapSVG.image != null) {
                            var row = $(this).closest(".row-fluid");
                            var idLocation = row.attr("id");
                            var tipoLocation = row.data("tipo");
                            var nameLocation = row.data("name");

                            row.siblings().removeClass("active1");
                            row.addClass("active1");
                            //$(this).siblings().removeClass("blue");
                            //$(this).addClass("blue");
                            mapSVG.fixAll();
                            row.find(".botones").addClass("hide");
                            row.find(".tools").addClass("hide");

                            if (typeof mapSVG.locations["e" + idLocation] == "undefined" || mapSVG.locations["e" + idLocation] == null) {
                                mapSVG.setLocation(idLocation, undefined, $(this).data("shape"), tipoLocation.toString(), nameLocation.toString());
                                if (mapSVG.locations["e" + idLocation].type == "path") {
                                    mapSVG.draw.attr({ style: "cursor:hand" });
                                }
                            }

                            else {
                                if (mapSVG.locations["e" + idLocation].type == $(this).data("shape")) {
                                    if (mapSVG.locations["e" + idLocation].type != "path" || (mapSVG.locations["e" + idLocation].type == "path" && mapSVG.locations["e" + idLocation].attr("d") != "M0 0")) {
                                        //if (tipoLocation == 2) { mapSVG.locations["e" + idLocation].makeResizableControl(); }
                                        //else {
                                        //    mapSVG.locations["e" + idLocation].makeResizable();
                                        //}
                                        mapSVG.locations["e" + idLocation].makeResizable();
                                    }
                                }
                                else {
                                    mapSVG.setLocation(idLocation, undefined, $(this).data("shape"), tipoLocation.toString(), nameLocation.toString());
                                    if (mapSVG.locations["e" + idLocation].type == "path") {
                                        mapSVG.draw.attr({ style: "cursor:hand" });
                                    }
                                }


                            }

                            var cad1 = mapSVG.locations["e" + idLocation].node.attributes.fill.value;

                            //$(this).siblings().find("input").css({ color: cad1, background: cad1 });
                            //$(this).siblings().find("input").val(mapSVG.locations["e" + idLocation].node.attributes.fill.nodeValue.replace('#', ''));
                            mapSVG.editing = "e" + idLocation;

                        }
                        else {
                            //si ya esta abierta la ventana no abrirla
                            if (displaymodal == "none") {
                                _confirm({
                                    title: "Agregar Imagen",
                                    message: "No tiene ninguna imagen asociada a esta ubicación, desea agregar una ahora?",
                                    action: function () {
                                        $("#changePlanoButton").click();
                                    }
                                });
                            }

                        }

                        //if (mapSVG.image != null) {
                          
                        //    var row = $(this).closest("tr");
                        //    var idLocation = row.attr("id");
                        //    var tipoLocation = row.data("tipo");
                        //    var nameLocation = row.data("name");
                        //    row.find(".removeLocation").show();

                        //    row.siblings().removeClass("active");
                        //    row.addClass("active");

                        //    mapSVG.fixAll();

                        //    if (typeof mapSVG.locations["e" + idLocation] == "undefined" || mapSVG.locations["e" + idLocation] == null)
                        //        mapSVG.setLocation(idLocation, undefined, $(this).data("shape"), tipoLocation.toString(), nameLocation.toString());
                        //    else {
                        //        if (tipoLocation == 2) { mapSVG.locations["e" + idLocation].makeResizable(); }
                        //        else {
                        //            mapSVG.locations["e" + idLocation].makeResizable();
                        //        }
                        //    }
                                
                        //    $("#colores").val(mapSVG.locations["e" + idLocation].node.attributes.fill.nodeValue);
                        //    mapSVG.editing = "e" + idLocation;

                        //}
                        //else {
                        //    _confirm({
                        //        title: "Agregar Imagen",
                        //        message: "No tiene ninguna imagen asociada a esta ubicación, desea agregar una ahora?",
                        //        action: function () {
                        //            $("#changePlanoButton").click();
                        //        }
                        //    });
                        //}
                    });

                    $(".subi").dblclick(function () {
                        var idloc = jQuery(this).attr("id");
                        console.log(idloc);
                        var getitem = $("#location_tree").data("kendoTreeView").dataSource.get(idloc);
                        jQuery(jQuery(jQuery("#location_tree").data("kendoTreeView").findByUid(getitem.uid)).find(".k-in")[0]).click();
                    });

                    $(".removeLocation").click(function () {
                        var row = $(this).closest(".row-fluid");
                        var idLocation = "e" + row.attr("id");
                        
                        

                        _confirm({
                            title: "Eliminar Ubicación",
                            message: "¿Desea eliminar esta ubicación?",
                            action: function () {
                                row.removeClass("active1");
                                row.find(".more").removeClass("hidetools");
                                row.find(".tools").addClass("hidetools");
                                if (typeof mapSVG.locations[idLocation] != "undefined" && mapSVG.locations[idLocation] != null) {
                                    if (typeof mapSVG.locations[idLocation].fixResize != "undefined")
                                        mapSVG.locations[idLocation].fixResize();
                                    //else
                                    //    mapSVG.locations[idLocation].attr("d","M0 0");
                                    mapSVG.locations[idLocation].remove();
                                    mapSVG.locations[idLocation] = null;
                                    mapSVG.editing = null;
                                }
                            }
                        });
                    });
                    $("#save_scenario").unbind("click.save_scenario");
                    $("#save_scenario").bind("click.save_scenario", function () {
                        mapSVG.saveScenario();
                    });

                    $(".colour").on("click", function () {
                        var idcolor = $(this).data("id");
                        $("#colour"+idcolor).click();
                    });

                    $("input[name='colour']").on("change", function () {
                        var row = $(this).closest(".row-fluid");
                        var idLocation = "e" + row.attr("id");
                        
                        mapSVG.locations[idLocation].attr("fill", $(this).val());
                      
                    });

                    // This function sets the path from the input text
                    function redraw(text) {
                        mapSVG.locations[mapSVG.editing].attr("d", text);
                    }


                    this.draw.click(function (event) {
                        
                        if (mapSVG.editing != null && mapSVG.locations[mapSVG.editing].type == "path" && 
                             !mapSVG.locations[mapSVG.editing].attr("d").match(/Z/)
                            ) {
                            var x = event.offsetX;
                            var y = event.offsetY;
                            var oldpath = mapSVG.locations[mapSVG.editing].attr("d");
                            var text;
                            if (oldpath == "M0 0" || oldpath.match(/Z/)) {
                                text = 'M' + x + ' ' + y;
                            } else {
                                text = oldpath + ' L' + x + ' ' + y;
                            }
                            redraw(text);
                        }
                    });

                    this.draw.dblclick(function () {
                        if (mapSVG.editing != null && mapSVG.locations[mapSVG.editing].type == "path" && !mapSVG.locations[mapSVG.editing].attr("d").match(/Z/)) {
                            var oldpath = mapSVG.locations[mapSVG.editing].attr("d");
                            var text;
                            text = oldpath + ' Z';
                            redraw(text);
                            mapSVG.draw.attr({ style: "cursor:default" });
                              mapSVG.locations[mapSVG.editing].makeResizable();
                           
                        }
                       
                    });
                }
            };

            mapSVG.init();
        });

    </script>

<script type="text/javascript">
    var sm;
    var map;
    var idfigura;

    window.onload = function () {
            var opts = { startCenter: [24.4227238, -102.5555167], startZoom: 5, startMapType: 'road' };
        sm = new ScribbleMap(document.getElementById('ScribbleMap'), opts);
        //sm.map.setType("road");
        sm.settings.resize();
        
        //Prints all data functions
        sm.ui.setTheme("dark"); // Valid options are "light" and "dark".

        sm.ui.styleControl(scribblemaps.ControlType.SEARCH, { "display": "none" });
        sm.ui.styleControl(scribblemaps.ControlType.FILL_COLOR, { "display": "none" });
        sm.ui.styleControl(scribblemaps.ControlType.LINE_COLOR, { "display": "none" });
        sm.ui.styleControl(scribblemaps.ControlType.LINE_SETTINGS, { "display": "none" });
        sm.ui.styleControl(scribblemaps.ControlType.ZOOM, { "display": "none" });
      //  sm.ui.setAvailableTools(["edit", "drag", "eraser", "polygon", "rectangle", "circle"]);
        sm.ui.setAvailableTools([]);

      //  cargarSububicacion("null");
        //jQuery("#location_tree").find("li[data-idcategory='null']").find("label:first").click();
    }



    function removeOverlay() {
        var cad = sm.map.getOverlays();

        for (i = 0; i < cad.length; i++) {
            sm.map.removeOverlay(cad[i]);

        }

    }

    function removefillOverlay() {
        var cad = sm.map.getOverlays();

        for (i = 0; i < cad.length; i++) {
            cad[i].setStyle({ fillOpacity: 0 });
        }

    }



    function disableEditOverlays() {
        var cad = sm.map.getOverlays();
        for (i = 0; i < cad.length; i++) {
            cad[i].disableEdit();
        }

    }

    function cargarSububicacion(id) {

        jQuery("#location_tree").find("li[data-idcategory='" + id + "']").find("label:first").click();
       
    }

    function loadListPanel(nodoid) {
        sm.map.wipe();
        jQuery("#detalles").empty();
        main_location.id = nodoid;
        var mapayes = "";
        var planoyes = "";
        if (nodoid != "null" && nodoid != null) {
            jQuery.ajax({
                url: "/Locations/Location/getNodesDetails",
                type: "POST",
                async: false,
                data: { nodeid: nodoid },
                success: function (data) {
                    var details = JSON.parse(data);
                    jQuery("#detalles").html("");
                    jQuery("#detalles").append(
                            jQuery("<div>").html("<label id='namedetail'  data-idLocation='" + details._id + "' ><strong> Nombre:  </strong>" + details.name + "</label>")
                        ).append(
                            jQuery("<div>").html("<label id='setupnamedetail'  data-idLocation='" + details._id + "' data-setup='" + details.setupname + "' ><strong> Nombre como configuración:</strong> " + details.setupname + "</label>")
                        ).append(
                           jQuery("<div>").html("<label id='setupdetail'  data-idLocation='" + details._id + "' data-setup='" + details.setup + "' ><strong> configuracion aplicada: </strong>" + details.setup + "</label>")
                        ).append(
                            jQuery("<div>").html("<label id='profile'  data-idLocation='" + details._id + "' data-idProfile='" + details.profileId + "' ><strong> Perfil: </strong>" + details.nameprofile + "</label>")
                        );
                    for (var key in details.profileFields) {
                        jQuery("#detalles").append(jQuery("<div>").html("<label><strong>" + key + ": </strong>" + details.profileFields[key] + "</label>"))
                    }

                    if (details.plano == "1") planoyes = "yes";
                    if (details.mapa == "1") mapayes = "yes";
                 //   jQuery("#mini_widgets").hide();
                  //  if (details.objetos != "0" && details.objetos != "") jQuery("#mini_widgets").show();

                    jQuery("#hardware").removeClass("active");
                    jQuery("#HardwareHeader").removeClass("active");

                    jQuery("#listaHeader").show();
                    if (details.tipo == "2") {
                        //jQuery("#HardwareHeader").show();
                        jQuery("#divhardware").show();
                        jQuery("#divsububicaciones").hide();
                        LoadHardware(nodoid);
                    }
                    else {
                        jQuery("#divhardware").hide();
                        jQuery("#HardwareHeader").hide();
                        jQuery("#divsububicaciones").show();
                    }

                    jQuery("#imagenesHeader").hide();
                    jQuery("#mapasHeader").hide();
                    jQuery("#listaHeader").addClass("active");
                    jQuery("#lista").addClass("active");
                    jQuery("#mapa").removeClass("active");
                    jQuery("#imagenes").removeClass("active");

                    jQuery("#save_scenario").hide();
                    jQuery("#save_map").hide();
                    if (planoyes == "yes") {
                        jQuery("#imagenesHeader").show();
                        jQuery("#imagenesHeader").addClass("active");
                        jQuery("#listaHeader").removeClass("active");
                        jQuery("#imagenes").addClass("active");
                        jQuery("#lista").removeClass("active");
                        jQuery("#mapa").removeClass("active");
                        //Loads the map image
                        mapSVG.loadMap(details.ImgUrl2);
                        //Set the scenario
                        mapSVG.old_scenario = details.scenario;

                        jQuery("#save_scenario").show();
                    }

                    if (mapayes == "yes") {
                        map = details.map;
                        removeOverlay();
                        cargarMapa(map);
                        removefillOverlay();

                        jQuery("#mapasHeader").show();
                        jQuery("#mapasHeader").addClass("active");
                        jQuery("#listaHeader").removeClass("active");
                        jQuery("#imagenesHeader").removeClass("active");
                        jQuery("#mapa").addClass("active");
                        jQuery("#lista").removeClass("active");
                        jQuery("#imagenes").removeClass("active");
                       
                        jQuery("#save_map").show();
                    }


                },
                error: function (data) {

                    _alert("error", "Ha ocurrido un error");
                }
            });

        }

        jQuery.ajax({
            url: "/Locations/Location/getNodesList",
            type: "POST",
            data: { nodeid: nodoid },
            async: false,
            success: function (data) {
                //$("#tablebody").html(data);
                var locations = JSON.parse(data);
                jQuery("#tablebody").html("");
                for (var i in locations) {
                    jQuery("#tablebody").append(
                            "<li name='" + locations[i].id + "'><i class='icon-home'></i>" + locations[i].name + "<div id='div" + locations[i].id + "'></div></li>"
                        );

                    cargarMapaSubs(locations[i].mapa);
                }

                //Loads the map if it has one
                //  mapSVG.loadLocations(locations);
                mapSVG.clearLocations();
                mapSVG.editing = null;

                mapSVG.bindActions();
                mapSVG.remakeScenario();

            },
            error: function (data) {
                //_alert("error","Ha ocurrido un error");
            }
        });
    }

    function cargarMapa(mapas) {
        var punts;
        var coor = [];
        var figura;
        if (mapas != null) {
            for (i = 0; i < mapas.length; i++) {
                punts = mapas[i].points;
                coor = [];
                for (j = 0; j < punts.length; j++) {
                    coor.push(punts[j]);
                }
                if (mapas[i].type == "POLYGON") {
                    figura = sm.draw.poly(coor);
                    figura.h.id = mapas[i].id;
                }
                if (mapas[i].type == "RECTANGLE") {
                        figura = sm.draw.rect([[coor[0].lat, coor[0].lng], [coor[1].lat, coor[1].lng]], coor[1]);
                    figura.h.id = mapas[i].id;
                }
                    
                if (mapas[i].type == "Circle") {
                    figura = sm.draw.circle(coor[0], mapas[i].radio);
                        figura.h.id = mapas[i].id;
                }

                //figura.click(function () {
                //    var id;
                //    var arr = this.h.id.split('|');
                //    id = arr[1];
                //    console.log(id);
                //    cargarSububicacion(id);
                //});
            }
        }
        
    }


    function cargarMapaSubs(mapas) {
        var punts;
        var coor = [];
        var figura;
        if (mapas != null) {
            for (i = 0; i < mapas.length; i++) {
                punts = mapas[i].points;
                coor = [];
                for (j = 0; j < punts.length; j++) {
                    coor.push(punts[j]);
                }
                if (mapas[i].type == "POLYGON") {
                    figura = sm.draw.poly(coor);
                    figura.h.id = mapas[i].id;
                }
                if (mapas[i].type == "RECTANGLE") {
                    figura = sm.draw.rect([[coor[0].lat, coor[0].lng], [coor[1].lat, coor[1].lng]], coor[1]);
                    figura.h.id = mapas[i].id;
                }

                if (mapas[i].type == "Circle") {
                    figura = sm.draw.circle(coor[0], mapas[i].radio);
                    figura.h.id = mapas[i].id;
                }

                figura.disableEdit();

                figura.click(function () {
                    var id;
                    var arr = this.h.id.split('|');
                    id = arr[1];
                    console.log(id);
                    cargarSububicacion(id);
                });
            }
        }

    }

    $("#mapasHeader").on("click", function () {
        sm.settings.resize();
    });


    $("#save_map").bind("click.save_map", function () {
            var figura = "[";
        var cad = sm.map.getOverlays();
        var coor;
        var tipo;
        //crear el json
        for (i = 0; i < cad.length; i++) {
            if (cad[i].h.id.indexOf(main_location.id) > -1 || cad[i].h.id.indexOf("|") == -1) {


                if (i != 0) figura = figura + ",";
                tipo = cad[i].h.Hq;
                figura = figura + "{ 'type' : '" + tipo + "' ,'points' : [";
                if (tipo == "Circle") {
                    figura = figura + "{ 'lat' :" + cad[i].getBounds().getCenter().lat + ", 'lng': " + cad[i].getBounds().getCenter().lng + "} ";

                } else if (tipo == "RECTANGLE") {
                    figura = figura + "{ 'lat' :" + cad[i].getBounds().getNorth() + ", 'lng': " + cad[i].getBounds().getWest() + "} ,{ 'lat' : " + cad[i].getBounds().getSouth() + ", 'lng': " + cad[i].getBounds().getEast() + "}";
                }
                else {
                    coor = cad[i].getCoords();
                    for (j = 0; j < coor.length; j++) {
                        if (j != 0) figura = figura + ",";
                        figura = figura + "{ 'lat' :" + coor[j].lat + ", 'lng': " + coor[j].lng + "} ";

                    }
                }


                figura = figura + "]";
                if (tipo == "Circle") {
                    figura = figura + ", 'radio' : " + (cad[i].getBounds().getCenter().distanceFrom(cad[i].getBounds().getNorthWest()) * 0.7).toString();
                }

                if (cad[i].h.id.indexOf(main_location.id) > -1) {
                    figura = figura + ", 'id': '" + cad[i].h.id + "'";
                } else {
                    figura = figura + ", 'id': '" + cad[i].h.id + "|" + main_location.id + "'";
                }

                figura = figura + "}";
            }
        }
        figura = figura + "]";
        jQuery.ajax({
            url: "/locations/location/saveLocationMap",
            data: { id_location: main_location.id, overlay: figura },
            type: "POST",
            beforeSend: _loading(),
            complete: _loading,
            success: function (data) {
                _alert("success", "Guardado Correctamente")
            },
            error: function () {
                _alert("error", "Ha ocurrido un error")
            }
        });
    });
    
</script>

}