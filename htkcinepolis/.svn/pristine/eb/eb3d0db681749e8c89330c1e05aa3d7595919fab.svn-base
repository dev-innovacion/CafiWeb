@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using RivkaAreas.Inventory.Models;
@model JArray

@{ViewBag.Title = "Calendarizar Inventario";

  var datos = "";
  var dataclient = "";
  try
  {
      datos = Session["Permissions"].ToString();
  }
  catch (Exception ex)
  {
      if (Request.Cookies["permissions"] != null)
      {
          Session["Permissions"] = Request.Cookies["permissions"].Value;
          datos = Session["Permissions"].ToString();

      }

  }
  try
  {
      dataclient = Session["PermissionsClient"].ToString();
  }
  catch (Exception ex)
  {
      if (Request.Cookies["permissions"] != null)
      {
          Session["PermissionsClient"] = Request.Cookies["permissionsclient"].Value;
          dataclient = Session["PermissionsClient"].ToString();

      }

  }
  
  JObject allp = JsonConvert.DeserializeObject<JObject>(datos);
  var upd = "";
  var del = "";
  var add = "";
  foreach (string x in allp["inventory"]["grant"])
  {
      if (x.Contains("u"))
      {
          upd = "u";
      }
      if (x.Contains("d"))
      {
          del = "d";

      }
      if (x.Contains("c"))
      {

          add = "c";

      }
  }
 
  JObject dataclientjo = JsonConvert.DeserializeObject<JObject>(dataclient);
  var updc = "";
  var delc = "";
  var addc = "";
  foreach (string x in dataclientjo["inventory"]["grant"])
  {
      if (x.Contains("u"))
      {
          updc = "u";
      }
      if (x.Contains("d"))
      {
          delc = "d";
      }
      if (x.Contains("c"))
      {
          addc = "c";
      }
  }
  int count = 0;
}

<div class="inner_content">
    <div class="widgets_area">
        <div class="row-fluid">
            <div class="span12">
                <div class="span8">
                    <h3 class="ModuleTitle">Calendarizar Inventarios</h3>
                </div>
                <div class="span4">
                    <div class="search">
                        <input type="text" data-provide="typeahead" id="globalSearch" name="globalSearch" class="typehead span8" placeholder="Búsqueda" data-source="" />
                        <button type="submit" class="square-button green" id="globalSearchButton"><i class="icon-search"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row-fluid">
            <div class="span12">
                <div class="light_blue set_color">
                    <div class="well-header widgetclient titleclient">
                        <h5>Lista de Inventarios Calendarizados</h5>
                        @if (add == "c" && addc=="c")
                        {
                            <div class="btn-group" id="thisCategoryOptions">
                                <button class="btn btn-mini dark_green fileinput-button dropdown" data-toggle="dropdown" id="button_addInventory" data-original-title="Agregar" rel="tooltip" data-placement="top">
                                    <i class="icon-plus"></i>
                                </button>
                            </div>
                        }
                    </div>
                    <div id="inventoryTable"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="modalInventory" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" id="button_cancelX"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
                <h4 class="modal-title" id="titleProcess">Calendarizar Nuevo Inventario</h4>
            </div>
                <table class="line">
                    <tbody>
                        <tr><td></td></tr>
                        <tr>
                            <td></td>
                            <td> <h10>Inicial: </h10>
                                <div class='input-append date' data-date="" id='datetimepicker8' data-date-format="yyyy-mm-dd">
                                    <input type='text' id="dateStart" data-original-title="Fecha en la que se realizará el inventario " rel="tooltip" data-placement="bottom" />
                                    <span class="add-on"><i class="icon-calendar"></i></span>
                                </div>
                            </td>
                            <td> <h10>Final: </h10>
                                <div class='input-append date' data-date="" id='datetimepicker9' data-date-format="yyyy-mm-dd">
                                    <input type='text' id="dateEnd" data-original-title="Fecha en la que se finalizará el inventario " rel="tooltip" data-placement="bottom" />
                                    <span class="add-on"><i class="icon-calendar"></i></span>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            <div class="modal-body">
                <!-- Tabs -->
                <div class="navbar-inner">
                    <ul class="nav nav-tabs" id="myTab">
                        <li class="active" id="tabUsers"><a href="#users" data-toggle="tab">Usuario</a></li>
                        <li id="tabLocation"><a href="#location" data-toggle="tab">Ubicación</a></li>
                        <li id="tabHandheld" style="display:none;"><a href="#handheld" data-toggle="tab">Hardware</a></li>

                    </ul>
                </div>
                <!-- Tabs Content -->
                <div class="tab-content">
                    <!--Users Section -->
                    <div class="tab-pane active" id="users">
                        <div id="userAuthorization">
                            <h10>Tipo de Usuario: </h10>
                            <select id="profileSelect" name="profileId" data-original-title="Selecciona los encargado(s) de realizar el inventario." rel="tooltip" data-placement="top">
                                <option value="selectOption">Seleccione...</option>
                                @{  ProfileTable profileTable = new ProfileTable();
                                    String rowArray = profileTable.GetRows();
                                    JArray rowString = JsonConvert.DeserializeObject<JArray>(rowArray);
                                }
                                @foreach (JObject profile in rowString)
                                {
                                    <option value='@profile["_id"]'>@profile["name"]</option>
                                }
                            </select>
                            &nbsp;&nbsp; <input type="checkbox" id="selectAll" value="selectAll">&nbsp;Todos
                            <br /><br />
                            <div id="tableUsers"></div>
                        </div>
                    </div>

                    <!-- Location Section -->
                    <div class="tab-pane" id="location">
                        <div class="row-fluid">
                            <div class="span12">
                                <div class="span3">
                                    <h3 class="ModuleTitle">Ubicación </h3>

                                </div>
                                <div class="span9">
                                    <div class="search">
                                        <input type="text" data-provide="typeahead" id="globalSearchLocations" name="globalSearchLocations" class="typehead span8" placeholder="Búsqueda" data-source='[@foreach (var mails in (Dictionary<string,string>)ViewData["locations"]) {if(count==0){@(new HtmlString('"' + mails.Value + '"')) count++;}else{@(new HtmlString(","+'"' + mails.Value + '"'))}}]' />
                                        <button type="button" class="square-button button_green" id="globalSearchButton2"><i class="icon-search"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="divTree">
                         
                            <div class="well-content no-search">
                                <div class="portlet-body fuelux">
                                    <ul class="tree" id="category_tree">
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--Handheld Section -->
                    <div class="tab-pane" id="handheld" style="display:none;">
                        <br />
                        <h10>Tipo de Hardware: </h10>
                        <select id="hardwareSelect" data-original-title="Selecciona el hardware a utlizar para realizar el inventario." rel="tooltip" data-placement="top">
                            <option value="selectOption">Seleccione...</option>
                            @{  HardwareTable hardwareTable = new HardwareTable();
                                String hardwareArray = hardwareTable.GetHardware();
                                JArray hardwareString = JsonConvert.DeserializeObject<JArray>(hardwareArray);
                            }
                            @foreach (JObject hardware in hardwareString)
                            {
                                <option value='@hardware["_id"]'>@hardware["name"]</option>
                            }
                        </select>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <span width="80%" id="final_msg" class="error_msg"></span>
                <input value="Guardar" class="btn blue" type="button" id="save_buttonInventory" />
                <input value="Cancelar" class="btn grey" type="button" id="cancel_buttonInventory" data-dismiss="modal">
            </div>
        </div>
    </div>
</div>

<script src="~/RivkaBase/Scripts/RivkaTree/RivkaTree.js"></script>
<script>
    var _idInventory = "";
    var _status = "";
    var datos = null;
    $(document).ready(function ($) {
        function InitNodes(nodoid) {
            var iduser = "@Session["_id"].ToString()";
            jQuery.ajax({
                url: "/Inventory/Inventory/getNodeContent2",
                type: "POST",
                data: { id: nodoid, userid: iduser },
                success: function (data) {
                    var result = JSON.parse(data);

                    datos = result;
                    tree.init({ id: datos.id, name: datos.name });
                    
                },
                error: function (data) {
                    //_alert("error","Ha ocurrido un error");
                }
            });
        }

        var nodo = "null";

        InitNodes(nodo);
        
        loadInventory();

        jQuery("#button_addInventory").click(function () {
            jQuery("#modalInventory").modal('show');
        });

        jQuery('#selectAll').change(function () {
            if (jQuery("#selectAll").is(':checked')) {
                jQuery('#tableUsers').html("");
            } else {
                getTableProfile(selectedProfile);
            }
        });

        jQuery("#profileSelect").change(function () {
            selectedProfile = jQuery(this).val();

            if (!jQuery("#selectAll").is(':checked')) {
                getTableProfile(selectedProfile);
            }

        });

        //Set info Tabs
        jQuery(function () {
            jQuery('#myTab a:first').tab('show')
        });


        ////date
        jQuery('#datetimepicker8').datepicker().on('changeDate', function (e) {
            jQuery(this).datepicker('hide');
        });

        jQuery('#datetimepicker9').datepicker().on('changeDate', function (e) {
            jQuery(this).datepicker('hide');
        });

        //--------
        jQuery("#save_buttonInventory").click(function () {
            if (jQuery('#profileSelect').val().toString() == "selectOption") {
                _alert("error", "Debe de seleccionar usuarios primero!");
                return false;
            }
            //if (jQuery('#hardwareSelect').val().toString() == "selectOption") {
            //    _alert("error", "Debe de seleccionar una hardware primero!");
            //    return false;
            //}
            var datenot = 0;
            if (!(dateStartVal = jQuery("#dateStart").val()) || !(dateEndVal = jQuery("#dateEnd").val())) {
                // _alert("error", "Selecciona una fecha primero!");
                datenot = 1;
                //return false;
            }

            if ((locationId = jQuery('#category_tree label[class="selected"]').closest("li").data("idcategory") == null)) {
                _alert("error", "Selecciona una Ubicación primero!");
                return false;
            }

            var d = new Date();
            var curr_date = ("0" + d.getDate()).slice(-2) + "/" + ("0" + (d.getMonth() + 1)).slice(-2) + "/" + d.getFullYear();
            //var curr_date = d.getFullYear() + "-" + ("0" + (d.getMonth() + 1)).slice(-2) + "-" +  ("0" + d.getDate()).slice(-2);
            if (datenot == 0) {
                if ($.datepicker.parseDate('yy-mm-dd', dateEndVal) < $.datepicker.parseDate('yy-mm-dd', dateStartVal)) {
                    _alert("error", "Verifica las fechas!");
                    return false;
                }

            }
            //if ($.datepicker.parseDate('yy-mm-dd', dateStartVal) < $.datepicker.parseDate('yy-mm-dd', curr_date)) {
            //    _alert("error", "Debes seleccionar un fecha de a partir de hoy!");
            //    return false;
            //}

            users = [];
            if (!jQuery("#selectAll").is(':checked')) {
                var selecteds = jQuery(".checker:checked");
                if (selecteds.length == 0) {
                    _alert("error", "Debe de seleccionar usuarios primero!");
                    return;
                }
                users.push("[");
                for (i = 0; i < selecteds.length; i = i + 1) {
                    users.push('"' + jQuery(jQuery(".checker:checked")[i]).closest("tr").data("id") + '"');
                }
                users.push("]");
            } else {
                users.push('"allUsers"');
            }

            locationId = jQuery('#category_tree label[class="selected"]').closest("li").data("idcategory");
            dateStartVal = jQuery('#dateStart').val();
            dateEndVal = jQuery('#dateEnd').val();

            idProfile = jQuery('#profileSelect').val();
            idHardware = "hrwd1"; // jQuery('#hardwareSelect').val();
            if (datenot == 1) {

                dateStartVal = "0001-01-01";
                dateEndVal = "9999-01-01";
            }
            if (_status == "") _status = "Pendiente";

            result = '{' +
                '"profile" : "' + idProfile + '",' +
                '"userList" : ' + users + ',' +
                '"dateStart":"' + dateStartVal + '",' +
                '"dateEnd":"' + dateEndVal + '",' +
                '"location":"' + locationId + '"' +
                '"hardware":"' + idHardware + '"' +
                '"status":"' + _status + '"' +
                '}';

            saveInventory(result, _idInventory);
            resetValues();
        });

        jQuery('#cancel_buttonInventory').click(function () {
            resetValues();
        });

        jQuery('#button_cancelX').click(function () {
            resetValues();
        });

        jQuery("#globalSearchLocations").on('keypress', function (e) {
            if (e.which == 13) {
                var cad = jQuery(this).val();
                var listmailsf = [];
                var id = "null";
                @foreach (var mails in (Dictionary<string, string>)ViewData["locations"])
                {
               @(new HtmlString("listmailsf.push('" +mails.Key+"|"+ mails.Value + "');"))
            }

                for (var i = 0; i < listmailsf.length; i++) {
                    var cadenas = listmailsf[i].split('|');

                    if (cadenas[1] == cad) {
                        id = cadenas[0];
                    }

                }

                jQuery("#titulo").html(cad);
                jQuery("#titulo").data("idlocation", id);
                setTree(id);
                if (id != "null" && id != null) {

                    jQuery("#deleteLocationButton").show();
                    jQuery("#editLocationButton").show();
                    jQuery("#setupLocationButton").show();
                    jQuery("#changeParentButton").show();

                } else {
                    id = "null";
                    jQuery("#deleteLocationButton").hide();
                    jQuery("#editLocationButton").hide();
                    jQuery("#setupLocationButton").hide();
                    jQuery("#changeParentButton").hide();
                    jQuery("#listaHeader").hide();
                    jQuery("#imagenesHeader").hide();
                    jQuery("#HardwareHeader").hide();
                    jQuery("#mapasHeader").addClass("active");
                    jQuery("#mapa").addClass("active");
                    jQuery("#lista").removeClass("active");
                    jQuery("#imagenes").removeClass("active");


                }

            //    loadListPanel(id);
            }
        });
        jQuery("#globalSearchButton2").click(function () {
            var cad = jQuery("#globalSearchLocations").val();
            var listmailsf = [];
            var id = "null";
            @foreach (var mails in (Dictionary<string, string>)ViewData["locations"])
        {
           @(new HtmlString("listmailsf.push('" +mails.Key+"|"+ mails.Value + "');"))
    }

            for (var i = 0; i < listmailsf.length; i++) {
                var cadenas = listmailsf[i].split('|');

                if (cadenas[1] == cad) {
                    id = cadenas[0];
                }

            }


            setTree(id);

        });
        jQuery("#globalSearchLocations").on('keypress', function (e) {
            if (e.which == 13) {
                var cad = jQuery(this).val();
                var listmailsf = [];
                var id = "null";
                @foreach (var mails in (Dictionary<string, string>)ViewData["locations"])
                {
               @(new HtmlString("listmailsf.push('" +mails.Key+"|"+ mails.Value + "');"))
            }

                for (var i = 0; i < listmailsf.length; i++) {
                    var cadenas = listmailsf[i].split('|');

                    if (cadenas[1] == cad) {
                        id = cadenas[0];
                    }

                }

                setTree(id);

            }
        });
    }); //end doc
    function setTree(id) {
        $.ajax({
            url: "/Inventory/Inventory/getRoute",
            data: { parentCategory: id },
            type: "POST",
            success: function (data) {
                var data = JSON.parse(data);
                tree.openRoute(data["route"]);
            }, error: function () { _alert("error", "Ha ocurrido un error"); }
        });
    }
    var tree = new RivkaTree("category_tree", {
        method: RivkaTree.METHODS.AJAX,
        url: "/Inventory/Inventory/getNodeContent",
        idKey: "_id",
        nameKey: "name",
        onNodeSelectAction: function () {
            var id = jQuery(this).closest("li").data("idcategory");
        }
    });

    function loadInventory() {
        jQuery.ajax({
            url: "/Inventory/Inventory/getInventoryTable",
            type: "POST",
            beforeSend: _loading(),
            success: function (data) {
                jQuery("#inventoryTable").html(data);
                _loading();
            },
            error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function getTableProfile(selectedProfile) {
        if (selectedProfile != "selectOption") {
            jQuery.ajax({
                url: "/Inventory/Inventory/getUserTable",
                data: { idProfile: selectedProfile },
                type: "POST",
                async: false,
                beforeSend: _loading(),
                success: function (data) {
                    if (data == "") {
                        jQuery('#tableUsers').html("<h5>Sin informacón...</h5>");
                    }
                    else jQuery('#tableUsers').html(data);
                    _loading();
                },
                error: function () {
                    _loading();
                    _alert("error", "Ha ocurrido un error");
                }
            });
        } else { jQuery('#tableUsers').html(""); }
    }

    function saveInventory(result, _idInventory) {
        jQuery.ajax({
            url: "/Inventory/Inventory/saveInventory",
            datatype: "json",
            type: "POST",
            data: { jsonString: result, idInventory: _idInventory },
            traditional: true,
            beforeSend: _loading(),
            success: function (data) {
                loadInventory();
                _loading();
                jQuery("#modalInventory").modal('hide');
                _alert("success", "Guardado Correctamente");
            },
            error: function () {
                _loading();
                _alert("error", "Ha ocurrido un error");
            }
        });
    }

    function resetValues() {
        jQuery('#profileSelect').val("selectOption");
        jQuery('#hardwareSelect').val("selectOption");
        jQuery('#selectAll').prop('checked', false);
        jQuery('#tableUsers').html("");
        jQuery('#dateStart').val("");
        jQuery('#dateEnd').val("");
        tree.init({ id: "null", name: "Home" });

        _idInventory = "";
        _status = "";


        jQuery(function () {
            jQuery('#myTab a:first').tab('show')
        });
    }

</script>
