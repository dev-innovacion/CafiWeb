@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@{
    ViewBag.Title = "Index";
    string userPattern = "([a-zA-Z0-9-_.]){4,}";
    string emailPattern = "[A-Za-z0-9-_.]+@[A-Za-z0-9-.]+\\.[a-zA-Z]+";
    string namePattern = "[A-ZÁÉÍÓÚÑa-záéíóúñ]+(\\s[A-ZÁÉÍÓÚÑa-záéíóúñ]+){0,2}";
    string lastNamePattern = "[A-ZÁÉÍÓÚÑa-záéíóúñ]+(\\s[A-ZÁÉÍÓÚÑa-záéíóúñ]+){0,4}";
    string passwordPattern = ".{6,}";

    var datos = Session["Permissions"].ToString();
    JObject allp = JsonConvert.DeserializeObject<JObject>(datos);
    var upd = "";
    var del = "";
    var add = "";
    foreach (string x in allp["users"]["grant"])
    {
        if (x.Contains("u"))
        {
            upd = "u";
        }
        if (x.Contains("d"))
        {
            del = "d";
        }
        if (x.Contains("c"))
        {
            add = "c";
        }
    }
    var dataclient = Session["PermissionsClient"].ToString();
    JObject dataclientjo = JsonConvert.DeserializeObject<JObject>(dataclient);
    var updc = "";
    var delc = "";
    var addc = "";
    foreach (string x in dataclientjo["users"]["grant"])
    {
        if (x.Contains("u"))
        {
            updc = "u";
        }
        if (x.Contains("d"))
        {
            delc = "d";
        }
        if (x.Contains("c"))
        {
            addc = "c";
        }
    }

}

<div class="widgets_area">
    <div class="row-fluid">
        <div class="span12">
            <div class="span8">
                <h3 class="ModuleTitle">Administrar Usuarios</h3>
            </div>
            <div class="span4">
                <div class="search">
                    <input type="text" data-provide="typeahead" id="globalSearch" name="globalSearch" class="typehead span8" placeholder="Búsqueda" />
                    <button type="submit" class="square-button green" id="globalSearchButton"><i class="icon-search"></i></button>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row-fluid">
        <div class="span12">
            <div class="light_blue set_color">
                <div class="well-header widgetclient titleclient">
                    <h5>Lista de Usuarios</h5>
                    <div class="btn-group">
                        @if (add == "c" && addc == "c")
                        {
                            <button class="btn btn-mini dark_green fileinput-button" id="addUserButton" data-original-title="Agregar Usuario" rel="tooltip" data-placement="top">
                                <i class="icon-plus icon-white"></i>
                            </button>
                        }
                        @if (del == "d" && delc == "d")
                        {
                            <button type="button" class="btn btn-mini red delete" id="deleteUserButton" data-original-title="Eliminar Usuarios" rel="tooltip" data-placement="top">
                                <i class="icon-trash icon-white"></i>
                            </button>
                        }
                        <button id="importbtn" class="btn btn-mini purple  fileinput-button" data-idcat="0">
                            <i class="icon-cloud-upload icon-white"></i>
                            <span>Importar</span>
                            <input type="file" id="T9" />
                        </button>
                        <button class="btn btn-mini orange" id="witnessButton" data-original-title="Testigos" rel="tooltip" data-placement="top">
                            <i class=" icon-certificate icon-white"></i>
                        </button>
                        <!--Tipe of Views-->
                        <button class="btn btn-mini dark_green" id="toTileViewButton" data-original-title="Mosaicos" rel="tooltip" data-placement="top">
                            <i class=" icon-th-large icon-white"></i>
                            <span></span>
                        </button>
                        <button class="btn btn-mini orange" id="toSliderViewButton" data-original-title="Slider" rel="tooltip" data-placement="top">
                            <i class=" icon-resize-horizontal icon-white"></i>
                            <span></span>
                        </button>
                        <button class="btn btn-mini light_blue" id="toTableViewButton" data-original-title="Tabla" rel="tooltip" data-placement="top">
                            <i class=" icon-th-list icon-white"></i>
                            <span></span>
                        </button>
                    </div>
                </div>
                <div class="well-content no-search" id="usersTable">
                </div>
            </div>
        </div>
    </div>
</div>

<div id="excelTable" class="modal hide fade" data-backdrop="static" style="min-width: 1000px; left: 35%; display: block;">
</div>

@* User-Customer Relation modal *@
<div id="user-customer_panel" class="modal hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
        <h3 class="modal-header-text">Asignar Clientes a "User"</h3>
    </div>
    <form id="user-customer_Form" method="post" autocomplete="off">
        <div class="modal-body">

            <div class="row-fluid">
                <div class="span12">
                    <label>Cliente: </label>
                    <select name="customers" id="customers"></select>
                    <button class="btn green" id="addCustomer">Asignar</button>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span12">
                    <hr />
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th width="90%">Cliente</th>
                                <th>Función</th>
                            </tr>
                        </thead>
                        <tbody id="customersList"></tbody>
                    </table>
                </div>
            </div>

        </div>
        <div class="modal-footer">
            <span width="80%" class="error_msg"></span>
            <input value="Guardar" class="btn dark_green" type="button" id="save_relation">
            <input value="Cancelar" class="btn grey" type="button" id="cancel_relation">
        </div>
    </form>
</div>


<div id="admin_panel" class="modal hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" id="cancel_buttonx"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
        <h3 class="modal-header-text">Agregar Usuario</h3>
    </div>
    <div class="modal-header">
        <div class="profileSelector">
            <label class="lanelMargen">Puesto: </label>
            <select id="profileSelect" name="profileSelect">
                @ViewData["profileList"]
            </select>

        </div>
    </div>
    <form id="userForm" method="post" autocomplete="off">
        <div class="modal-body">

            <div class="navbar-inner">
                <ul class="nav nav-tabs" id="tabHeader1">
                    <li class="active" id="staticFormHeader"><a href="#staticFieldsSection" data-toggle="tab">Inf. General</a></li>
                    <li id="staticFormHeader_details"><a href="#staticFieldsSection_details" data-toggle="tab">Detalles del usuario</a></li>
                    <li id="staticFormHeader_permisos"><a href="#staticFieldsSection_permisos" data-toggle="tab">Permisos</a></li>
                    <li id="staticFormHeader_locations"><a href="#staticFieldsSection_locations" data-toggle="tab">Ubicaciones</a></li>
                    
                </ul>
            </div>
            <div class="tab-content" id="tabContent1">
                <div class="tab-pane active staticFieldsSection perfilMargen" id="staticFieldsSection">

                    <table width="100%">
                        <tr>
                            <td width="50%">
                                <label>Nombre: </label>
                                <div class="staticField">
                                    <input type="text" id="name" name="name" pattern=@namePattern required="required" placeholder="Nombre(s)" data-original-title="El nombre sólo puede contener caracteres alfabéticos (Máximo 3 nombres)." rel="tooltip" data-placement="right" />
                                </div>
                            </td>
                            <td rowspan="2" width="50%" style="text-align: center">
                                <img style="max-height: 200px;" id="img_pre" src="~/Content/Images/imgPerfil/avatar_06.png">
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>Apellido: </label>
                                <div class="staticField">
                                    <input type="text" id="lastname" name="lastname" pattern=@lastNamePattern required="required" placeholder="Apellido(s)" data-original-title="El apellido sólo puede contener caracteres alfabético (Máximo 5 apellidos)." rel="tooltip" data-placement="right" />
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>E-mail: </label>
                                <div class="staticField">
                                    <input type="text" id="email" name="email" pattern=@emailPattern  placeholder="nombre@dominio.com" data-original-title="Debe ser un correo electrónico válido." rel="tooltip" data-placement="right" />
                                </div>
                            </td>
                            <td>
                                <span class="btn btn-file">
                                    <span class="fileupload-new">Foto de Usuario</span>
                                    <input type="file" id="file" name="file" value="Default" />
                                </span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>ID Usuario: </label>
                                <div class="staticField">
                                    <input type="text" id="user" name="user" pattern=@userPattern required="required" placeholder="Nombre de usuario" data-original-title="El nombre de usuario sólo puede contener caracteres alfanuméricos y los caracteres (-, _, .)." rel="tooltip" data-placement="right" />
                                </div>
                            </td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>
                                <label>Contrase&ntilde;a: </label>
                                <div class="staticField">
                                    <input type="password" id="pwd" name="pwd" pattern=@passwordPattern placeholder="Contraseña" data-original-title="Mínimo seis caracteres." rel="tooltip" data-placement="right" />
                                </div>

                            </td>
                            <td>
                                <label>Confirmar Contrase&ntilde;a: </label>
                                <div class="staticField">
                                    <input type="password" id="pwdConfirm" pattern=@passwordPattern placeholder="Contraseña" data-original-title="Debe coincidir." rel="tooltip" data-placement="right" />
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>Puesto: </label>
                                <div class="staticField">
                                    <select id="position" name="position">
                                        @ViewData["positionOptions"]
                                    </select>
                                </div>

                            </td>
                            <td>
                                <label>Jefe Inmediato: </label>
                                <div class="staticField">
                                    <select id="boss" name="boss" style="width: 90%;">
                                        @ViewData["users"]
                                    </select>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <label for="userKey">Firma Electrónica</label>
                                <div class="staticField" width="100%">
                                    <input type="text" name="userKey" id="userKey" disabled="disabled" />
                                    <button type="button" class="btn btn dark_green fileinput-button" id="generateUserKeyButton" data-original-title="Generar Firma" rel="tooltip" data-placement="top">
                                        <i class="icon-cog icon-white"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <!-- USer detalis -->
                <div class="tab-pane staticFieldsSection perfilMargen" id="staticFieldsSection_details" style="overflow: hidden;">
                    <table width="100%">
                        <tr>
                            <td>
                                <label>Alias: </label>
                                <div class="staticField">
                                    <input type="text" id="alias" name="alias" placeholder="Alias del usuario" />
                                </div>
                                <label class="lanelMargen">Área: </label>
                                <div class="staticField">
                                    <select id="areaSelect" name="areaSelect">
                                        <option value="null">Seleccione...</option>
                                        <option value="Finanzas">Finanzas</option>
                                        <option value="Operaciones">Operaciones</option>
                                    </select>
                                </div>
                                 <label class="lanelMargen">Departamento: </label>
                                    <div class="staticField">
                                        <select id="departmentSelect" name="departmentSelect">
                                            <option value="null">Seleccione...</option>
                                            <option value="11011">Presidencia</option>
                                            <option value="11012">Consejo</option>
                                            <option value="12011">Dirección General</option>
                                            <option value="12021">Planeacion Estrategica</option>
                                            <option value="12031">Fundacion Cinepolis</option>
                                            <option value="12041">Legal</option>
                                            <option value="12051">Seguridad</option>
                                            <option value="13011">Dirección General de Finanzas y Crecimiento</option>
                                            <option value="13021">Dirección de Compras y Cadena de Suministro</option>
                                            <option value="13031">Tesoreria</option>
                                            <option value="13032">Inmuebles</option>
                                            <option value="13033">Intercambios</option>
                                            <option value="13041">Contabilidad</option>
                                            <option value="13051">Contraloria</option>
                                            <option value="13061">Juridico</option>
                                            <option value="13071">Crecimiento</option>
                                            <option value="13091">Proyectos</option>
                                            <option value="13101">Construccion</option>
                                            <option value="13111">Dirección de Contraloría</option>
                                            <option value="14011">Dirección General de Operaciones</option>
                                            <option value="14021">Direccion de Operaciones</option>
                                            <option value="14022">Mantenimiento</option>
                                            <option value="14023">Proyeccion y Sonido</option>
                                            <option value="14031">Comercializacion</option>
                                            <option value="14032">Cineminutos</option>
                                            <option value="14033">Mercadotecnia</option>
                                            <option value="14034">Ventas Corporativas</option>
                                            <option value="14041">Sistemas</option>
                                            <option value="14061">Programación</option>
                                            <option value="14071">Recursos Humanos</option>
                                            <option value="14072">Capacitación</option>
                                            <option value="14073">Servicios al Personal</option>
                                            <option value="14081">Internacional</option>
                                            <option value="14091">Cineticket</option>
                                            <option value="14092">Operaciones</option>
                                            <option value="CORP01">Dirección de Nuevos Desarrollo</option>
                                            <option value="CORP02">Libres</option>
                                            <option value="CORP03">Terminacles Bancarias</option>
                                            <option value="CORP04">Administración de Rentas</option>
                                            <option value="CORP05">Operación Cinepolis</option>
                                            <option value="CORP06">Publicidad</option>
                                            <option value="CORP07">Directores México</option>
                                            <option value="CORP08">Laboratio Vista</option>
                                            <option value="CORP09">Liquidaciones</option>
                                            <option value="CORP10">Nomina</option>
                                            <option value="CORP11">Viajes</option>
                                        </select>
                                   <div class="staticField">
                            </td>
                        
                            <td>
                                <label>Descripción puesto:</label>
                                <div class="staticField">
                                    <textarea class="customInput2" placeholder="Descripción puesto" data-original-title="Descripción puesto" rel="tooltip" data-placement="bottom" name="descripcionpuesto" id="descripcionpuesto"></textarea>
                                </div> 
                            </td>
                        </tr>
                    </table>

                </div>
                <!-- END -->
                <!-- HTK PERMISSIONS -->
                <div class="tab-pane staticFieldsSection perfilMargen" id="staticFieldsSection_permisos" style="overflow: hidden; padding-left: 50px; max-height: 215px;overflow-y: scroll;"">
                     @Html.Partial("permissionsHTK")
                </div>
                <div class="tab-pane staticFieldsSection perfilMargen" id="staticFieldsSection_locations" style="overflow: hidden;">

                    <table class="table table-striped table-bordered table-hover" id="userLocationsTable">
                        <thead>
                            <tr>
                                <th colspan="5">
                                    <div class="btn-group" style="float: right;">
                                        <button type="button" class="btn btn-mini dark_green fileinput-button" id="addLocationButton" data-original-title="Agregar Usuario" rel="tooltip" data-placement="top">
                                            <i class="icon-plus icon-white"></i>
                                        </button>
                                    </div>
                                </th>
                            </tr>
                            <tr>
                                <th>Nombre</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>

                </div>
                @ViewData["formInitialContent"]
            </div>
        </div>
        <div class="modal-footer">
            <span width="80%" id="final_msg" class="error_msg"></span>
            <input value="Guardar" class="btn dark_green" type="submit" id="save_button">
            <input value="Cancelar" class="btn grey" type="button" id="cancel_button">
        </div>
    </form>
</div>

<div id="witness-modal" class="modal hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
        <h3 class="modal-header-text">Testigos para acta de destrucción.</h3>
    </div>
    <div class="modal-body">
        <div class="row-fluid">
            <label for="">Por parte de la Gerencia de Auditoría Operativa y Financiera:</label>
            <select id="operativeWitness" style="width: 60%;">
                @ViewData["users"]
            </select>
        </div>
        <div class="row-fluid">
            <label for="">Por parte de la Dirección de Inmuebles y Control de Activos:</label>
            <select id="assetsWitness" style="width: 60%;">
                @ViewData["users"]
            </select>
        </div>
        <div class="row-fluid">
            <label for="">Por parte de la Dirección de Contabilidad:</label>
            <select id="accountingWitness" style="width: 60%;">
                @ViewData["users"]
            </select>
        </div>
    </div>
    <div class="modal-footer">
        <span width="80%" id="final_msg" class="error_msg"></span>
        <input value="Guardar" class="btn blue" id="save-witness">
        <input value="Cerrar" data-dismiss="modal" class="btn grey" type="button" id="cancel-witness">
    </div>
</div>

<div id="locationsPanel" class="modal modal-mini hide fade" tabindex="-1" data-backdrop="static">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
        <h3 class="modal-header-text">Selecciona la ubicacion a asignar:</h3>
    </div>
    <div class="modal-body">

        <div id="tablausers">
            <label class="lanelMargen">Ubicaciones </label>
            <div class="divTree4">
                <div class="well-content no-search">
                    <div class="portlet-body fuelux">
                        <ul class="tree" id="location_tree"></ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <span width="80%" id="final_msg" class="error_msg"></span>
        <input value="Añadir" class="btn blue" id="selectLocationButton">
        <input value="Cancelar" data-dismiss="modal" class="btn grey" type="button" id="cancelLocationButton">
    </div>
</div>


@section scripts{
    @*User Scripts*@

    <script src="~/RivkaBase/Scripts/RivkaViewer/RivkaViewer.js"></script>
    <script src="~/RivkaBase/Scripts/RivkaTree/RivkaTree.js"></script>
    <script type="text/javascript">

        var upd = "";
        var del = "";
        var updc = "";
        var delc = "";
        var iduser = "@Session["_id"].ToString()";
        var viewer = new RivkaViewer("usersTable");

        var _customersList = '@ViewBag.customerList';
        var _myCustomerList = [];

        var selectedId = null;
        var selectedName = null;
        var selectedProfile = null;
        var selectedMail = null;
        var basicProfile = null;

        var userError = null;
        var emailError = null;

        var editingProfile = null;
        var editingUserData = null;

        jQuery.fn.reset = function () {
            jQuery(this).each(function () { this.reset(); });
        }

        var witnesses = {

            init: function () {
                witnesses.bindElements();

                jQuery("#operativeWitness,#assetsWitness,#accountingWitness").select2()
            },

            bindElements: function () {
                jQuery("#witnessButton").unbind("click.openModal");
                jQuery("#witnessButton").bind("click.openModal", function () {
                    jQuery.ajax({
                        url: "/User/User/getWitnesses",
                        type: "POST",
                        success: function (data) {
                            var witnesses = JSON.parse(data);
                            var keys = Object.keys(witnesses);
                            for (var i = 0; i < keys.length; i++) {
                                jQuery("#" + keys[i] + "Witness").select2("val", witnesses[keys[i]]);
                            }

                            jQuery("#witness-modal").modal("show");
                        },
                        error: function (errorThrown) {
                            _alert("error", "Ha ocurrdido un error");
                        }
                    });

                });

                jQuery("#save-witness").unbind("click.save");
                jQuery("#save-witness").bind("click.save", function () {
                    var witnessJson = "{\"operative\":\"" + jQuery("#operativeWitness").val()
                        + "\",\"assets\":\"" + jQuery("#assetsWitness").val()
                        + "\",\"accounting\":\"" + jQuery("#accountingWitness").val() + "\"}";
                    jQuery.ajax({
                        url: "/User/User/saveWitnesses",
                        type: "POST",
                        data: { witnessJson: witnessJson },
                        beforeSend: _loading,
                        success: function (data) {
                            _loading();
                            jQuery("#witness-modal").modal("hide");
                            _alert("success", "Guardado Correctamente");
                        },
                        error: function (errorThrown) {
                            _loading();
                            _alert("error", "Ha ocurrido un error");
                        }
                    });
                });
            }
        };

        var tree = new RivkaTree("location_tree", {
            method: RivkaTree.METHODS.AJAX,
            url: "/ObjectReference/Object/getNodeLocation",
            idKey: "_id",
            nameKey: "name",
            onNodeSelectAction: function () {
                var id = jQuery(this).closest("li").data("idcategory");
            }
        });

        var userKey = {

            init: function () {
                userKey.bindAll();
            },

            onValuesChange: function () {
                jQuery("#userKey").val("");
            },

            bindAll: function () {
                jQuery("#generateUserKeyButton").unbind("click.generate");
                jQuery("#generateUserKeyButton").bind("click.generate", function () {
                    if (jQuery("#lastname").val() == "" || jQuery("#name").val() == "" || jQuery("#user").val() == "") {
                        _alert("error", "Nombre y Usuario requeridos");
                        return;
                    }
                    var name = jQuery("#lastname").val().trim() + " " + jQuery("#name").val().trim();
                    var account = jQuery("#user").val();
                    jQuery.ajax({
                        url: "/User/User/generateUserKey",
                        type: "POST",
                        data: { userName: name, userAccount: account },
                        success: function (data) {
                            jQuery("#userKey").val(data);
                        },
                        error: function (errorThrown) {
                            _alert("error", "Ha ocurrido un error");
                        }
                    });
                });

                //jQuery("#name,#lastname,#user").unbind("change.changeKey");
                //jQuery("#name,#lastname,#user").bind("change.changeKey", userKey.onValuesChange);
            }
        };

        var model = {

            usersData: null,

            init: function () {
                jQuery.ajax({
                    url: "/User/User/getUserTable",
                    type: "POST",
                    beforeSend: _loading(),
                    success: function (data) {
                        var data = JSON.parse(data);
                        model.usersData = JSON.stringify(data["users"]);
                        var dataOptions = { id: "_id", name: "user", image: "image", permissions: [upd, del] };
                        viewer.setData(model.usersData, dataOptions);
                        table.print();
                    },
                    complete: _loading()
                });
            },

            restart: function () {
                selectedId = null;
                selectedName = null;
                selectedProfile = null;
                userError = null;
                emailError = null;
                editingProfile = null;
                editingUserData = null;
                selectedMail = null;
            }
        };

        var userLocations = {

            init: function () {
                userLocations.bind();
            },

            insertRow: function (locationID, locationName) {
                var element = jQuery("<tr/>").attr("data-id", locationID);
                element.append(jQuery("<td class='elementName'/>").text(locationName));

                element.append(
                    jQuery("<td/>").append(
                        jQuery('<div class="btn-group"/>').append(
                            jQuery('<a class="btn" href="#" data-original-title="Eliminar este elemento." rel="tooltip" data-placement="top"><i class="icon-trash"></i></a>').bind(
                                "click.remove",
                                function () {
                                    jQuery(this).closest("tr").remove();
                                }
                            )
                        )
                    )
                );

                jQuery("#userLocationsTable tbody").append(element);
            },

            getLocations: function () {
                var locations = jQuery("#userLocationsTable tbody tr");
                var locationsArray = "[";
                for (var i = 0; i < locations.length; i++) {
                    if (i != 0) {
                        locationsArray += ",";
                    }
                    locationsArray += "{ 'id':'" + jQuery(locations[i]).data("id") + "', 'name':'" + jQuery(locations[i]).find("td.elementName").text() + "'}";
                }
                locationsArray += "]";
                return locationsArray;
            },

            bind: function () {
                jQuery("#addLocationButton").unbind("click.open");
                jQuery("#addLocationButton").bind("click.open", function () {
                    jQuery("#locationsPanel").modal("show");
                    return false;
                });

                jQuery("#selectLocationButton").unbind("click.select");
                jQuery("#selectLocationButton").bind("click.select", function () {
                    var locationSelected = jQuery("#location_tree label.selected");
                    var locationID = locationSelected.closest("li").data("idcategory");
                    var locationName = locationSelected.text();
                    userLocations.insertRow(locationID, locationName);
                    jQuery("#locationsPanel").modal("hide");
                });
            }
        };

        var content = {

            onClientClickAction: function () {
                var userId = null;
                if (table.display == "table") {
                    userId = jQuery(this).closest("tr").data("id");
                } else {
                    userId = jQuery(this).closest(".tile").data("id");
                }
                userRelation.clearCustomersTable();
                _myCustomerList = [];
                selectedId = userId;
                jQuery("#user-customer_panel").modal("show");
                jQuery.ajax({
                    url: "/User/User/GetCustomerRelation",
                    data: { idUser: userId },
                    type: "POST",
                    beforeSend: _loading(),
                    complete: _loading(),
                    success: function (data) {
                        var customers = JSON.parse(data);

                        if (customers.length > 0) {
                            for (var customer in customers) {
                                userRelation.addCustomer(customers[customer], 1);
                            }
                        }
                    },
                    error: function () {
                        _alert("error", "Ha ocurrido un error");
                    }

                });
            },

            onDeleteRowAction: function () {
                model.restart();
                var id = null;
                var name = null;
                if (table.display == "table") {
                    id = jQuery(this).closest("tr").data("id");
                    name = jQuery("table tr[data-id=" + id + "] .user").text();
                } else {
                    id = jQuery(this).closest("div.tile").data("id");
                    name = jQuery(".line .tile[data-id=" + id + "] .tileName").text();
                }


                _confirm({
                    title: "Eliminar Usuario",
                    message: "¿Seguro que desea eliminar el usuario " + name + "?",
                    action: function () {
                        if (id == iduser) {
                            _alert("error", "Acción no permitida!!");
                            return false;
                        }
                        _loading();
                        jQuery.ajax({
                            url: "/User/User/deleteUser",
                            type: "POST",
                            data: { selectedID: id },
                            success: function (data) {
                                model.init();
                                _loading();
                                _alert("success", "Eliminado Correctamente");
                                model.restart();
                            },
                            error: function (data) {
                                _loading();
                                _alert("error", "Ha ocurrido un error");
                            }
                        });
                    }
                });
            },

            onEditRowAction: function (tr) {
                jQuery("#userForm").reset();
                jQuery("#user").val("");
                jQuery("#pwd").val("");
                selectedId = tr.data("id");
                if (table.display == "table") {
                    selectedName = jQuery("table tr[data-id=" + selectedId + "] .user").text();
                    selectedMail = jQuery("table tr[data-id=" + selectedId + "] .email").text();
                    editingProfile = jQuery("table tr[data-id=" + selectedId + "]").data("idprofile");
                } else {
                    selectedName = jQuery(".tile[data-id=" + selectedId + "] .tileName").text();
                    selectedMail = jQuery(".tile[data-id=" + selectedId + "]").data("email");
                    editingProfile = jQuery(".tile[data-id=" + selectedId + "]").data("idprofile");
                }
                jQuery("#profileSelect").val(editingProfile);
                userModal.loadProfileFields(editingProfile);
                userModal.loadProfileFieldsTitles(editingProfile);
                userModal.cleanMessages();
                jQuery(".modal-header-text").text("Modificar Usuario");
                jQuery("#admin_panel").modal("show");
                _loading();
                jQuery.ajax({
                    url: "/User/User/getUser",
                    data: { userID: selectedId },
                    type: "POST",
                    success: function (data) {
                        _loading();
                        var valuesuser = JSON.parse(data)
                        jQuery("#admin_panel .modal-header-text").text("Modificar Usuario: " + valuesuser.user);
                        editingUserData = data;
                        userModal.fillProfileFields();
                    },
                    error: function () {
                        _loading();
                        _alert("error", "Ha ocurrido un error");
                    }
                });
                jQuery("#admin_panel").modal("show");
            },
        };

        var table = {

            display: "tile",

            init: function () {
                table.bindAll();
            },

            print: function () {
                switch (table.display) {
                    case "table":
                        table.printTable();
                        break;
                    case "tile":
                        table.printTiles();
                        break
                    case "slider":
                        table.printSlider();
                        break;
                }
            },

            printTable: function () {
                table.display = "table";

                var tableOptions = {
                    headers: { "user": "ID Usuario", "name": "Nombre", "lastname": "Apellidos", "email": "Correo", "profilename": "Puesto", "boss": "Jefe Inmediato", "areaSelect": "Area", "departmentSelect": "Departamento", "alias": "Alias", "Creator": "Creador", "CreatedDate": "Fecha de Creación", "LastmodDate": "Última Modificación" },
                    showSelecters: true,
                    onEditRowAction: function () {
                        var tr = jQuery(this).closest("tr");
                        content.onEditRowAction(tr);
                    },
                    onDeleteRowAction: content.onDeleteRowAction,
                    onSelectRowAction: null
                };
                viewer.setDisplayMethod(RivkaViewer.METHODS.TABLE, tableOptions);
                viewer.print();

                var users = JSON.parse(model.usersData);
                for (i = 0; i < users.length; i++) {
                    jQuery("table tr[data-id=" + users[i]._id + "]").attr("data-idprofile", users[i].profileId);
                }

                jQuery("[rel=tooltip]").closest("a").tooltip();

                //Add pagination functions
                try {
                    jQuery(".table").dataTable({
                        "sPaginationType": "bootstrap",
                        "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                        "iDisplayLength": 10,
                        "aoColumnDefs": [{
                            'bSortable': false,
                            'aTargets': [0]
                        }],
                        "oLanguage": {
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                            "sSearch": "Filtro"
                        }
                    });
                    jQuery('.dataTables_length select').chosen();
                } catch (Exception) { console.log(); }

            },

            printTiles: function () {
                table.display = "tile";

                var tileOptions = {
                    onEditTileAction: function () {
                        var tr = jQuery(this).closest("div.tile");
                        content.onEditRowAction(tr);
                    },
                    onDeleteTileAction: content.onDeleteRowAction,
                    onSelectTileAction: null
                };
                viewer.setDisplayMethod(RivkaViewer.METHODS.TILE, tileOptions);
                viewer.print();

                var users = JSON.parse(model.usersData);
                for (i = 0; i < users.length; i++) {
                    jQuery(" .tile[data-id=" + users[i]._id + "]").attr("data-idprofile", users[i].profileId);
                    jQuery(" .tile[data-id=" + users[i]._id + "]").attr("data-email", users[i].email);
                }

                jQuery("[rel=tooltip]").closest("a").tooltip();
            },

            printSlider: function () {
                table.display = "slider";
                var sliderOptions = {
                    onEditTileAction: function () {
                        var tr = jQuery(this).closest("div.tile");
                        content.onEditRowAction(tr);
                    },
                    onDeleteTileAction: content.onDeleteRowAction,
                    onSelectTileAction: null
                };
                viewer.setDisplayMethod(RivkaViewer.METHODS.SLIDER, sliderOptions);
                viewer.print();

                var users = JSON.parse(model.usersData);
                for (i = 0; i < users.length; i++) {
                    jQuery(" .tile[data-id=" + users[i]._id + "]").attr("data-idprofile", users[i].profileId);
                    jQuery(" .tile[data-id=" + users[i]._id + "]").attr("data-email", users[i].email);
                }

                jQuery("[rel=tooltip]").closest("a").tooltip();
            },

            bindAll: function () {

                jQuery("#toSliderViewButton").unbind("click.toSliderView");
                jQuery("#toSliderViewButton").bind("click.toSliderView", table.printSlider);

                jQuery("#toTableViewButton").unbind("click.toTableView");
                jQuery("#toTableViewButton").bind("click.toTableView", table.printTable);

                jQuery("#toTileViewButton").unbind("click.toTileView");
                jQuery("#toTileViewButton").bind("click.toTileView", table.printTiles);

                jQuery("#globalSearchButton").unbind("click.search");
                jQuery("#globalSearchButton").bind("click.search", table.onSearchAction);

                jQuery("#globalSearch").unbind("keypress.checkSend");
                jQuery("#globalSearch").bind("keypress.checkSend", function (e) {
                    if (e.which == 13) {
                        jQuery("#globalSearchButton").click();
                    }
                });

                jQuery("#deleteUserButton").unbind('click.delete');
                jQuery("#deleteUserButton").bind('click.delete', function () {
                    var selecteds = jQuery(".checker:checked");
                    if (selecteds.length == 0) {
                        _alert("error", "Debe de seleccionar usuarios primero para eliminarlos!");
                        return;
                    }

                    _confirm({
                        title: "Eliminar Registros",
                        message: "¿Seguro que desea eliminar los registros seleccionados?",
                        action: function () {
                            var selectedIdArray = [];
                            for (i = 0; i < selecteds.length; i = i + 1) {
                                if (jQuery(selecteds[i]).closest("tr").data("id").toString() != iduser)
                                    selectedIdArray.push(jQuery(selecteds[i]).closest("tr").data("id"));
                            }
                            _loading();
                            jQuery.ajax({
                                url: "/User/User/deleteUsers",
                                datatype: "json",
                                type: "POST",
                                data: { array: selectedIdArray },
                                traditional: true,
                                success: function (data) {
                                    model.init();
                                    _loading();
                                    _alert("success", "Eliminado Correctamente");
                                    model.restart();
                                }
                            });
                        }
                    });
                });
            },

            onSearchAction: function () {
                var stringToSearch = jQuery("#globalSearch").val();
                if (stringToSearch.trim() == "") {
                    model.init();
                } else {
                    jQuery.ajax({
                        url: "/User/User/globalSearch",
                        type: "POST",
                        data: { data: stringToSearch },
                        beforeSend: _loading,
                        success: function (data) {
                            model.usersData = data;
                            var dataOptions = { id: "_id", name: "user", image: "image", permissions: [upd, del] };
                            viewer.setData(model.usersData, dataOptions);
                            table.print();
                            _loading();
                        },
                        error: function (errorThrown) {
                            _alert("error", "Ha ocurrido un error");
                            _loading();
                        }
                    });
                }
            }
        };

        var userModal = {

            imageArray: {},

            message: null,

            init: function () {
                userModal.bindAll();
            },

            readURL: function (input, previewDivID) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        jQuery('#' + previewDivID).attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            },

            fillProfileFields: function () {
                if (editingUserData != null) {
                    var obj = JSON.parse(editingUserData);
                    for (field in obj) {
                        if (field == "ImgUrl") {
                            var picurl = obj.ImgUrl;
                            jQuery("#img_pre").attr("src", picurl)
                        }
                        if (field == "profileFields") {
                            jQuery("#name").val(obj["name"]);
                            for (key in obj["profileFields"]) {
                                if (jQuery("#" + key).attr("type") == "checkbox") {
                                    jQuery("#" + key).attr("checked", "checked");
                                }
                                else if (jQuery("#" + key).attr("type") == "radio") {
                                    jQuery("[name=" + key + "][value = " + obj["profileFields"][key].toString() + "]").attr("checked", "checked");
                                }
                                else if (jQuery("#" + key).prop("tagName") == "SELECT" && jQuery("#" + key).prop("multiple")) {
                                    var values = obj["profileFields"][key].toString().split(",");
                                    for (value in values) {
                                        jQuery("#" + key + " option[value = " + values[value] + "]").attr("selected", "selected");
                                    }
                                }
                                else if (jQuery("#" + key).prop("type") == "file") {
                                    userModal.imageArray["" + key] = obj["profileFields"][key].toString();
                                    jQuery("#" + key + "Preview").attr("src", "/Uploads/Images/User/CustomImages/" + obj["profileFields"][key].toString());
                                }
                                else {
                                    jQuery("#" + key).val(obj["profileFields"][key].toString());
                                }
                            }
                        } else if (field != "pwd") {
                            if (field == "userLocations") {
                                jQuery("#userLocationsTable tbody").empty();
                                for (var i = 0; i < obj[field].length; i++) {
                                    userLocations.insertRow(obj[field][i].id, obj[field][i].name);
                                }
                            } else if (jQuery("#" + field).prop("tagName") == "SELECT" && jQuery("#" + field).siblings().hasClass("select2-container")) {
                                jQuery("#" + field).select2("val", obj[field]);
                            } else {
                                jQuery("#" + field).val(obj[field]);
                            }
                        }
                    }
                }
            },

            loadProfileFields: function (profileID) {
                jQuery.ajax({
                    url: "/User/User/getFormView",
                    type: "POST",
                    data: { profile: profileID },
                    async: false,
                    success: function (data) {
                        jQuery("#staticFieldsSection_locations").nextAll().remove();
                        jQuery("#tabContent1").append(data);
                        selectedProfile = profileID;
                        if (selectedId != null) {
                            console.log("selected: " + selectedId);
                            userModal.fillProfileFields();
                        }
                        userModal.bindAll();

                    },
                    error: function (data) {
                        _alert("error", "Ha ocurrido un error");
                    }
                });
            },

            loadProfileFieldsTitles: function (profileID) {
                jQuery.ajax({
                    url: "/User/User/getFormTitlesView",
                    type: "POST",
                    data: { profile: profileID },
                    async: false,
                    success: function (data) {
                        jQuery("#staticFormHeader_locations").nextAll().remove();
                        jQuery("#tabHeader1").append(data);
                        jQuery("#staticFormHeader a").click();
                    },
                    error: function (errorThrown) {
                    }
                });
            },

            cleanMessages: function () {
                jQuery("#final_msg").text("");
            },

            bindAll: function () {

                jQuery("#admin_panel input[type=file][id!=img_pre]").unbind("change.changeCustomFiles");
                jQuery("#admin_panel input[type=file][id!=img_pre]").bind("change.changeCustomFiles", function () {
                    var inputID = jQuery(this).attr("id");
                    var id = inputID + "Preview";
                    var formData = new FormData();

                    userModal.readURL(this, id);

                    formData.append("selectedID", selectedId);
                    formData.append("name", inputID);
                    formData.append("file", jQuery(this)[0].files[0]);
                    formData.append("lastSaved", userModal.imageArray[inputID]);
                    jQuery.ajax({
                        url: "/User/User/SaveCustomFile",
                        type: "POST",
                        data: formData,
                        contentType: false,
                        processData: false,
                        beforeSend: _loading,
                        success: function (data) {
                            userModal.imageArray[inputID] = data;
                            _loading();
                        },
                        error: function (errorThrown) {
                            _loading();
                        }
                    });
                });

                jQuery("#user").unbind("change.validate");
                jQuery("#user").bind("change.validate", function () {
                    var newName = jQuery("#user").val();
                    if (newName != selectedName) {
                        jQuery.ajax({
                            url: "/User/User/userExists",
                            type: "POST",
                            data: { userName: newName },
                            async: false,
                            success: function (data) {
                                if (data == "true") {
                                    userError = "El ID del usuario ya está siendo utilizado.";
                                } else {
                                    userError = null;
                                }
                            }
                        });
                    } else {
                        userError = null;
                    }
                });

                jQuery("#email").unbind("change.validate");
                jQuery("#email").bind("change.validate", function () {
                    var newMail = jQuery("#email").val();
                    if (newMail != selectedMail) {
                        jQuery.ajax({
                            url: "/User/User/emailExists",
                            type: "POST",
                            data: { email: newMail },
                            async: false,
                            success: function (data) {
                                if (data == "true") {
                                    emailError = "El correo electrónico ya está siendo utilizado.";
                                } else {
                                    emailError = null;
                                }
                            }
                        });
                    } else {
                        emailError = null;
                    }
                });

                // Add or Save the changes on an User
                jQuery("#addUserButton").unbind("click.save");
                jQuery("#addUserButton").bind("click.save", function () {

                    jQuery.ajax({
                        url: "/User/User/validateLimit",

                        beforeSend: _loading(),
                        success: function (data) {

                            if (data == "true") {
                                jQuery("#userForm").reset();
                                jQuery("#user").val("");
                                jQuery("#pwd").val("");
                                userModal.cleanMessages();
                                jQuery(".modal-header-text").text("Agregar Usuario");
                                jQuery("#admin_panel").modal("show");
                                selectedId = null;
                                userModal.loadProfileFields(selectedProfile);
                            } else {
                                //  _alert("error", data+"Usuarios");
                                alertblue(data + "Usuarios");
                            }
                            _loading();
                        },
                        error: function () {
                            _loading();
                            _alert("error", "Ha ocurrido un error");
                        }
                    });
                });

                // Cancel the current Adding-Editing action of an User
                jQuery("#cancel_button,#cancel_buttonx").unbind("click.cancel");
                jQuery("#cancel_button,#cancel_buttonx").bind("click.cancel", function () {
                    jQuery("#admin_panel").modal("hide");
                    jQuery("#img_pre").attr("src", "/Content/Images/imgPerfil/avatar_06.png");
                    jQuery("#userLocationsTable tbody").html("");
                    uncheckAll();
                    model.restart();
                });

                jQuery("#profileSelect").unbind("change.fill");
                jQuery("#profileSelect").bind("change.fill", function () {
                    selectedProfile = jQuery(this).val();
                    userModal.loadProfileFields(selectedProfile);
                    userModal.loadProfileFieldsTitles(selectedProfile);
                });

                jQuery("#save_button").unbind("click.validate");
                jQuery("#save_button").bind("click.validate", function () {
                    debugger;
                    var pass = "";
                    var inputsArray = jQuery("#admin_panel .tab-content input[type!=file]");

                    if (selectedId == null) {
                        jQuery("#pwd").prop('required', true);
                        jQuery("#pwdConfirm").prop('required', true);
                    } else {
                        jQuery("#pwd").prop('required', false);
                        jQuery("#pwdConfirm").prop('required', false);
                    }

                    for (i = 0; i < inputsArray.length; i++) {
                        input = jQuery(inputsArray[i]);
                        if (input.val() == "" && selectedId != null) {
                            if (input.attr("id") == "pwd") continue;
                            if (input.attr("id") == "pwdConfirm") continue;
                        }
                        regExp = new RegExp(input.attr("pattern"));
                        if ((input.val() == "" && input.attr("required") == "required") || !input.val().match(regExp)) {
                            if (input.attr("id") != "email") {
                                panelToShow = input.closest(".tab-pane").attr("id");
                                jQuery("#tabHeader1 " + "a[href=#" + panelToShow + "]").click();
                                break;
                            }
                        }
                        if (selectedId == null) {
                            if (input.attr("id") == "pwd") {
                                pass = input.val();
                            } else if (input.attr("id") == "pwdConfirm" && input.val() != pass) {
                                jQuery("#pwdConfirm").focus();
                                _alert("error", "Las contraseñas no coinciden");
                            }
                        }
                    }
                });

                jQuery("#userForm").unbind("submit.send");
                jQuery("#userForm").bind("submit.send", function () {

                    userModal.message = null;
                    if (userError != null) {
                        _alert("error", userError);

                    } else if (emailError != null && jQuery("#email").val() != "") {
                        _alert("error", emailError);

                    } else if (selectedId == null && jQuery("#pwd").val().length < 6) {
                        _alert("error", "Debes establecer una contraseña");

                    } else if (jQuery("#pwd").val() != jQuery("#pwdConfirm").val()) {
                        _alert("error", "Las contraseñas deben coincidir");

                    } else if (selectedId != null && (selectedProfile != editingProfile)) {
                        _confirm({
                            title: "Editar Perfil",
                            message: "El cambio de perfil puede ocasionar pérdida de información si el nuevo perfil no contiene los campos del anterior. ¿Está seguro que desea realizar la modificación de perfil?",
                            action: function () {
                                userModal.editProfileAction();
                            },
                            onCancelAction: function () {
                                userModal.message = "El usuario ha cancelado";
                                jQuery("#final_msg").text(userModal.message);
                            }
                        });
                    } else {
                        userModal.editProfileAction();
                    }
                    return false;
                });
            },

            editProfileAction: function () {
                if (userModal.message == null) {
                    var formString = "userID=" + selectedId + "&userKey=" + jQuery("#userKey").val() + "&userLocations=" + userLocations.getLocations() + "&profileSelect=" + jQuery("#profileSelect").val() + "&" + jQuery("#userForm").serialize();
                    var fd = new FormData();

                    var keys = Object.keys(userModal.imageArray);
                    for (i = 0; i < keys.length; i++) {
                        formString += "&" + keys[i] + "=" + userModal.imageArray[keys[i]];
                    }

                    fd.append('data', formString);
                    fd.append('file', jQuery('#file')[0].files[0]);
                    _loading();
                    jQuery.ajax({
                        url: "/User/User/saveUser",
                        type: "POST",
                        data: fd,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            model.init();
                            _loading();
                            jQuery("#admin_panel").modal("hide");
                            model.restart();
                            jQuery("#userForm").reset();
                            jQuery("#user").val("");
                            jQuery("#pwd").val("");
                            _alert("success", "Guardado Correctamente");
                            jQuery("#img_pre").attr("src", "/Content/Images/imgPerfil/avatar_06.png");
                            jQuery("#userLocationsTable tbody").html("");
                            uncheckAll();
                        },
                        error: function () {
                            _loading();
                            _alert("error", "Ha ocurrido un error");
                        }
                    });
                } else {
                    jQuery("#final_msg").text(userModal.message);
                }

            }
        };

        var userRelation = {

            init: function () {
                userRelation.bindAll();
            },

            // Add a customer to the relation
            // param customer (PlainObject) e.g. {_id:"",name:""}
            // param init (integer) 1 if you are initializing the User-Customer relation
            addCustomer: function (customer, init) {
                var newClass = "new_customer";
                if (init)
                    newClass = "";

                jQuery("#customersList").append(
                        jQuery("<tr>", { class: newClass }).attr("data-id", customer.id)
                        .append(jQuery("<td>", { class: "customer-name" }).html(customer.name))
                        .append(jQuery("<td>", { class: "text-center" })
                            .append(jQuery("<a>", { href: "#" }).html("<span class='icon icon-remove'></span></a>")
                                .click(userRelation.removeCustomer)))
                    );
                jQuery("#customers").find("option[value=" + customer.id + "]").remove();

                //Add new customer to the list
                _myCustomerList.push(customer.id);
            },

            // Remove a customer from the relation
            removeCustomer: function () {
                var customer_row = jQuery(this).closest("tr");
                var customer_id = customer_row.data("id");
                var customer_name = customer_row.find(".customer-name").html();
                if (!customer_row.hasClass("new_customer")) {

                    _confirm({
                        title: "Eliminar Cliente",
                        messagee: "Desea eliminar a este cliente?",
                        action: function () {
                            //Send the remove request to the server
                            jQuery.ajax({
                                url: "/User/User/DeleteCustomerRelation",
                                type: "POST",
                                data: {
                                    id_user: selectedId,
                                    id_customer: customer_id
                                },
                                beforeSend: _loading(),
                                complete: _loading(),
                                success: function () {
                                    jQuery(customer_row).remove();
                                    jQuery("#customers").append(
                                        jQuery("<option>").attr("value", customer_id).html(customer_name)
                                    );
                                },
                                error: function () {
                                    _alert("error", "Ha Ocurrido un error");
                                }
                            });
                        }
                    });
                }
                else {
                    jQuery(customer_row).remove();
                    jQuery("#customers").append(
                        jQuery("<option>").attr("value", customer_id).html(customer_name)
                    );
                }

                // Remove customer from the list
                for (var n in _customersList) {
                    if (_myCustomerList[n] == customer_id) {
                        _myCustomerList.splice(n, 1);
                        break;
                    }
                }
            },

            // Remove all customers from the relation section, and set them back to the Customer list
            clearCustomersTable: function () {
                jQuery("#customersList").html("");
                jQuery("#customers").html("");
                for (customer in _customersList) {
                    jQuery("#customers").append(
                            jQuery("<option>").attr("value", _customersList[customer].id).html(_customersList[customer].name)
                        );
                }
            },

            bindAll: function () {
                // Save the current realtion
                jQuery("#save_relation").click(function () {
                    if (_myCustomerList.length > 0) {
                        var customerList = JSON.stringify(_myCustomerList);
                        jQuery.ajax({
                            url: "/User/User/SaveCustomerRelation",
                            data: { customerList: customerList, id_user: selectedId },
                            type: "POST",
                            beforeSend: _loading(),
                            complete: _loading(),
                            success: function (data) {
                                jQuery("#user-customer_panel").modal("hide");
                            },
                            error: function (errorThrown) {
                                _alert("error", "Ha ocurrido un error");
                            }
                        });
                    }
                    else
                        jQuery("#user-customer_panel").modal("hide");

                    return null;
                });

                // Cancel the current changes to the User-Customer relation
                jQuery("#cancel_relation").on("click", function () {
                    jQuery("#user-customer_panel").modal("hide");
                });

                // Add a customer to the relation
                jQuery("#addCustomer").click(function () {
                    if (jQuery("#customers").val() != null) {
                        var selectedCustomer = jQuery("#customers").find("option[value=" + jQuery("#customers").val() + "]");
                        var newCustomer = { id: selectedCustomer.val(), name: selectedCustomer.text() };
                        userRelation.addCustomer(newCustomer);
                    }

                    return false;
                });
            }
        };

        //ImagePreview----------------------------------------------------

        var input = document.getElementById("file"),
            formdata = false;

        function showUploadedItem(source) {

            jQuery('#img_pre').attr('src', source);

        }

        function addPhoto(source) {
            if (window.FileReader) {
                reader = new FileReader();
                reader.onloadend = function (e) {
                    showUploadedItem(e.target.result);
                };
                reader.readAsDataURL(source);
            }
        }

        if (window.FormData) {
            formdata = new FormData();
        }

        input.addEventListener('change', function (evt) {
            var file = this.files[0];

            if (!!file.type.match(/image.*/)) {
                addPhoto(file);
            }

        }, false);
        //EndImagePreview-------------------------------------

        jQuery(document).ready(function ($) {
            $("#boss").select2();
            basicProfile = selectedProfile = jQuery("#profileSelect").find(":selected").val();
            userModal.loadProfileFields(basicProfile);
            userModal.loadProfileFieldsTitles(basicProfile);
            model.init();
            table.init();
            userModal.init();
            userRelation.init();
            userLocations.init();
            userKey.init();
            witnesses.init();
            tree.init({ id: "null", name: "Home" });
            @if (upd != null && upd != "")
            {
            @(new HtmlString("upd = '" + upd + "';"))
            }
            @if (del != null && del != "")
            {

            @(new HtmlString("del ='" + del + "';"))
            }
            @if (updc != null && updc != "")
            {
            @(new HtmlString("updc = '" + updc + "';"))
            }
            @if (delc != null && delc != "")
            {

            @(new HtmlString("delc ='" + delc + "';"))
            }

            //START - Import Section
            jQuery("#T9").bind("change.changeImage", function () {

                var fa = new FormData();
                //var idcateg = jQuery("#importbtn").data("idcat");

                fa.append('file', jQuery('#T9')[0].files[0]);
                //fa.append('idcategory', idcateg);
                var fileup = jQuery('#T9')[0].files[0]
                var format = fileup.name.split('.');

                var ext = format[format.length - 1];
                ext = ext.toLowerCase();

                if (ext == "xlsx") {

                    jQuery.ajax({
                        url: "/User/User/ImpExcel",
                        contentType: false,
                        processData: false,
                        data: fa,
                        type: "POST",
                        beforeSend: _loading(),

                        success: function (data) {
                            if (data != null) {
                                jQuery('#excelTable').html("");
                                jQuery('#excelTable').html(data);
                                jQuery('#excelTable').modal("show");
                                jQuery("#T9").val("");
                                _loading();
                            } else {
                                alert("Ocurrio un error, Verifique el Archivo Fuente");
                                jQuery("#T9").val("");
                                _loading();
                            }
                        },
                        error: function (errorThrown) {
                            alert("Ocurrio un error, intenta más tarde.");
                            jQuery("#T9").val("");
                            _loading();
                        }
                    });

                } else {
                    alert("Elija Un Archivo de Excel(solo Formato xlsx)");
                    jQuery("#T9").val("");
                }
                return null;
            });
            //END - Import Section

            if (updc == "" || upd == "") {
                upd = "";
            }

            if (delc == "" || del == "") {

                del = "";
            }
        });
    </script>
}
