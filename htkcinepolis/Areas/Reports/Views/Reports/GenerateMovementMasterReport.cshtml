@using MongoDB.Bson
@{Layout = null;}
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Web;
@using System.Web.Mvc;
@using System.Reflection;
@using System.IO;
@using System.util;
@using System.Net;
@using System.Dynamic;
@using System.Globalization;
@model JArray
  
@{

   
  
    ViewBag.Title = "GenerateCustomReport";

    Dictionary<string, string> cols = new Dictionary<string, string>();
    Dictionary<string, int> graph = new Dictionary<string, int>();
    Dictionary<string, int> graph2 = new Dictionary<string, int>();
    Dictionary<string, int> graph3 = new Dictionary<string, int>();
    Dictionary<int, string> headersgraph = new Dictionary<int, string>();
    Dictionary<string, int[]> graphtime = new Dictionary<string, int[]>();
    Dictionary<string, string> semaphores = new Dictionary<string, string>();
    List<string> headsg = new List<string>();
    int years = (int)ViewData["years"];
    Dictionary<string, int[]> graphend = new Dictionary<string, int[]>();
    int indexfor = 0;
    for (int i = 0; i < ((List<string>)ViewData["headmult"]).Count(); i++) //foreach (var x in (List<string>)ViewData["headmult"]) 
        {
            try
            {
                headsg.Add(((List<string>)ViewData["headmult"])[i]);
            }
            catch (Exception ex) { }
        }
    foreach (var x in (Dictionary<string, string>)ViewData["semaphores"])
    {
        try{
        semaphores.Add(x.Key, x.Value);
         }
        catch (Exception ex) { }
    }
    foreach (var x in (Dictionary<string, int[]>)ViewData["bodygraph"])
    {
        try { 
        graphend.Add(x.Key, x.Value);
             }
        catch (Exception ex) { }

    }
    foreach (var x in (Dictionary<string, string>)ViewData["cols"])
    {
        try { 
        cols.Add(x.Key, x.Value);
             }
        catch (Exception ex) { }
    }
    foreach (var x in (Dictionary<string, int>)ViewData["graph"])
    {
        try { 
        graph.Add(x.Key, x.Value);
             }
        catch (Exception ex) { }
    }

    foreach (var x in (Dictionary<string, int>)ViewData["graph2"])
    {
        try
        {
            graph2.Add(x.Key, x.Value);
        }
        catch (Exception ex) { }
    }

    foreach (var x in (Dictionary<string, int>)ViewData["graph3"])
    {
        try
        {
            graph3.Add(x.Key, x.Value);
        }
        catch (Exception ex) { }
    }
    
    foreach (var x in (Dictionary<int, string>)ViewData["th"])
    {
        try { 
        headersgraph.Add(x.Key, x.Value);
             }
        catch (Exception ex) { }
    }
    foreach (var x in (Dictionary<string, int[]>)ViewData["graphtime"])
    {
        try { 
        graphtime.Add(x.Key, x.Value);
             }
        catch (Exception ex) { }
    }
    string[] headarray = headsg.ToArray();
    int count = 0;

    int numproccess = Convert.ToInt16(ViewData["numproccess"].ToString());


    string[] datesarray = (string[])ViewData["dates"];
  // dynamic value = new { String="", string="", };

    String noapprovedList = ViewData["approva"] as String;
    String semaphores1 =ViewData["semap"] as String;

    JArray noapproved = JsonConvert.DeserializeObject<JArray>(noapprovedList);
    JArray semaphor = JsonConvert.DeserializeObject<JArray>(semaphores1);
    
   var  semaphorosvalues = new Dictionary<string, string>();
    try
    {

        for (int i = 0; i < noapproved.Count(); i++) //foreach (JObject item in noapproved) 
            {


                DateTime datenow = DateTime.Now;
                string date = (string)noapproved[i]["date"];
                DateTime dateCreated = DateTime.ParseExact(date.Substring(0, 10), "dd/MM/yyyy", null);
                TimeSpan time = datenow - dateCreated;
                int diferences = time.Days;
                var values = 0;

                for (int j = 0; j < semaphor.Count(); j++) //foreach (JObject sem in semaphor)  
                {
                    if (diferences >= Convert.ToInt16(semaphor[j]["days"]) && (string)noapproved[i]["type"] == (string)semaphor[j]["type"])
                    {
                        if ((int)semaphor[j]["days"] > values)
                        {
                            try
                            {
                                semaphorosvalues.Add((string)noapproved[i]["_id"], (string)semaphor[j]["color"]);
                            }
                            catch (Exception ex)
                            {
                                semaphorosvalues[(string)noapproved[i]["_id"]] = (string)semaphor[j]["color"];

                            }
                            values = Convert.ToInt16(semaphor[j]["days"]);

                        }
                    }
                }

            }
        
    }
    catch (Exception ex) {  }
    if (semaphores.Count() == 0)
    {
        semaphores = semaphorosvalues;
    }
    int numcols = 0;
    String datajson = ViewData["result"].ToString();
    String datajson2 = ViewData["result2"].ToString();
    string[] colsa = cols.Keys.ToArray();
    string colsjson = JsonConvert.SerializeObject(colsa);
}
<style>
    .details {
        width: 800px !important;
        margin-left:-25% !important;
    }
    .dataTables_scrollBody {
        overflow-x: hidden !important;
    }
    .dataTables_scroll {
        overflow-x: auto !important;
    }
    
     #mailtablex tr > td {
        text-align: center;
    }
</style>
<div id="viewobj" class="modal modal-demand  hide fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="margin-left:-30% !important" tabindex="-1">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
        <h3 class="modal-header-text">Objetos por Activo</h3>
    </div>

    <div class="modal-body" style="">

    </div>
    <div class="modal-footer">
        <span width="80%" id="final_msg" class="error_msg"></span>
        <input value="Cerrar" class="btn grey close" data-dismiss="modal" aria-hidden="true" type="button" id="cancel_button1">
    </div>

</div>

@for (int i = 0; i < Model.Count();i++ ) //foreach (JObject item in Model) 
    {
        try
        {


            foreach (var x in cols)
            {


                try
                {
                    if (x.Key == "images" && Model[i][x.Key].ToString() != "sin Imagen")
                    {
                            
                                
                                <div id="@Model[i]["_id"].ToString()" class="modal hide fade" tabindex="-1" data-backdrop="static">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icon-remove" style="margin-top: 10px; margin-right: 10px"></i></button>
                                        <h3 class="modal-header-text">Imagenes</h3>
                                    </div>

                                    <form id="userForm" method="post" autocomplete="off">
                                        <div class="modal-body">

                                            <div class="navbar-inner">
                                                <ul class="nav nav-tabs" id="tabHeader1">
                                                    <li class="active" id="staticFormHeader"><a href="#staticFieldsSection" data-toggle="tab">Preview</a></li>
                                                </ul>
                                            </div>
                                            <div class="tab-content" id="tabContent1">
                                                <div class="tab-pane active staticFieldsSection perfilMargen" id="staticFieldsSection">

                                                    <table width="100%">
                                                        <tr>
                                                            <td width="50%">

                                                                <label>Seleccione una imagen: </label>
                                                                <div class="staticField">
                                                                    <select class="changeimage" style="width:90%;">
                                                                        <option value="0">Elija Una opcion</option>
                                                                        @{string[] words = Model[i][x.Key].ToString().Split(',');
                                                                          string firstimg = words.First();
                                                                          foreach (string word in words)
                                                                          {
                                                                            <option value="@word">@word</option>
                                                                          }

                                                                        }
                                                                    </select>
                                                                </div>

                                                            </td>
                                                            <td rowspan="2" width="50%" style="text-align:center">

                                                                <img class='zoom' style="height: 200px; width: 200px;" src='~/Uploads/Dictamenes/imagenes/@firstimg' data-zoom-image="/Uploads/Dictamenes/imagenes/@firstimg" />


                                                            </td>
                                                        </tr>

                                                    </table>
                                                </div>


                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <span width="80%" id="final_msg" class="error_msg"></span>
                                            <input value="Cerrar" data-dismiss="modal" class="btn grey" type="button" id="cancel_button">
                                        </div>
                                    </form>
                                </div>
                           
                    }



                }
                catch (Exception ex) { }

            }




        }
        catch (Exception ex) { }
    }
<div class="well">







    <div class="well-content no_padding row-fluid">
        <center>
            <div style="width:100%;align-content:center;">


                <center>
                    <div class="well">

                        <div class="well-content no-search">
                            <div class="navbar-inner">
                                <ul class="nav nav-tabs" id="tabHeader2">
                                    <li class="active" id="listaHeader"><a href="#lista" data-toggle="tab">Resumen</a></li>
                                    <li id="autorizacionesHeader">
                                        <a href="#autorizaciones" data-toggle="tab">Tablas de Datos <span id="counterauthos" class="badge badge-important">@numproccess</span></a>
                                    </li>
                                    <li id="grafic2" >
                                        <a href="#grafica" data-toggle="tab">Graficas <span id="counterauthos1" class="badge badge-important"></span></a>
                                    </li>

                                </ul>
                            </div>
                            <div class="tab-content" id="tabContent2">
                                <div class="tab-pane active lista listamargen" style="width: 100%" id="lista">

                                    <div class="well" style="background:#0072c6; ">
                                        <div class="well-header row-fluid   titleclient" style="background-color:white">


                                            <h5 style="color:black">Consulta Maestra de Movimientos </h5>



                                            <div class="btn-group">

                                                <button type="button" class="btn btn-mini  fileinput-button" style="background-color:#06550a" id="exporttoexcelx" title="Exportar a Excel" rel="tooltip" data-placement="top">
                                                    <i class="excelbtn"></i>
                                                </button>
                                                <button type="button" class="btn btn-mini red " id="exporttopdfx" title="Exportar a Pdf" rel="tooltip" data-placement="top">
                                                    <i class="pdfbtn"></i>
                                                </button>




                                            </div>

                                        </div>
                                        <div class="well-content no_padding row-fluid">
                                            <br />
                                            <div class="float_left" style="padding-left:1.5%;"></div>
                                            <div class="float_margen">
                                                <div id="tableuser">
                                                    <table id="tab_tableuser" class="table table-striped table-hover">

                                                        <thead>
                                                            <tr class="success">

                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white; font-weight: bold; text-align: center">#Movimientos</th>
                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white; font-weight: bold; text-align: center">Fecha Inicio</th>
                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white; font-weight: bold; text-align: center">Fecha Fin</th>


                                                            </tr>
                                                        </thead>
                                                        <tbody>


                                                            <tr class="mailtr">


                                                                <td class="table-fixed-medium getmail" style="text-align:center;">@numproccess</td>

                                                                <td class="table-fixed-medium getmail" style="text-align:center;">@datesarray[0]</td>
                                                                <td class="table-fixed-medium getmail" style="text-align:center;">@datesarray[1]</td>


                                                            </tr>



                                                        </tbody>

                                                    </table>
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                </div>


                                <div class="tab-pane autorizaciones autorizacionmargen" id="autorizaciones" >
                                    <div class="well">



                                        <!--   <div class="well-header">
                                            <center> <h4 style="color:white;padding-top:10px;">Reporte de Usuarios</h4></center>
                                        </div>-->
                                        <div class="no_padding row-fluid">
                                            <div class="float_left" style="padding-left:1.5%;">

                                            </div>

                                            <div id="reports" class="float_margen">
                                                <div class="row_fluid" style="  padding-bottom: 12%;">
                                                    <div id="firstFilter" class="span3">
                                                        <div class="hida" style="padding-left: 2%;">
                                                            <input id="year1" type="checkbox" style="right:5px;display:none" title="Es fecha?" />
                                                            Primera Agrupación:
                                                        </div>
                                                        <select class="span11">
                                                            <option value="99">Elige una Columna</option>
                                                            @{ int indexcol = 0;}
                                                            @foreach (var item in cols)
                                                            {
                                                                <option value="@indexcol">@item.Value</option>
                                                                indexcol++;
                                                            }
                                                        </select>
                                                    </div>
                                                    <div id="secondFilter" class="span3" style="display:none">
                                                        <div class="hida" style="padding-left: 2%;">
                                                            <input id="year2" type="checkbox" style="right: 5px; display: none" title="Es fecha?" />

                                                            Segunda Agrupación:
                                                        </div>
                                                        <select class="span11">
                                                            <option value="99">Elige una Columna</option>
                                                            @{indexcol = 0;}
                                                            @foreach (var item in cols)
                                                            {
                                                                <option value="@indexcol">@item.Value</option>
                                                                indexcol++;
                                                            }
                                                        </select>
                                                    </div>
                                                    <div id="thridFilter" class="span3" style="display:none">
                                                        <div class="hida" style="padding-left: 2%;">
                                                            <input id="year3" type="checkbox" style="right: 5px; display: none" title="Es fecha?" />

                                                            Tercera Agrupación:
                                                        </div>
                                                        <select class="span11">
                                                            <option value="99">Elige una Columna</option>
                                                            @{indexcol = 0;}
                                                            @foreach (var item in cols)
                                                            {
                                                                <option value="@indexcol">@item.Value</option>
                                                                indexcol++;
                                                            }
                                                        </select>
                                                    </div>
                                                    <div class="span3">
                                                        <div class="hida" style="padding-left: 2%; padding-top: 7%;">

                                                            <input type="button" class="btn button_green" id="group" value="Agrupar" />
                                                            <input type="button" class="btn black" id="ungroup" value="Desagrupar" style=" margin-left: 8%;" />

                                                        </div>

                                                    </div>
                                                </div>
                                                <br />

                                                <table id="mailtablex" class="table table-striped table-hover dataTable" style="max-height: 400px; border-collapse: collapse;">

                                                    <thead>
                                                        <tr>
                                                            @foreach (var x in cols)
                                                            {

                                                               
                                                                 numcols++;
                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white;  text-align: center;font-size:12px;">@x.Value.ToUpper()</th>
                                                                
                                                            }

                                                        </tr>
                                                    </thead>
                                                    <tbody>

                                                        @*foreach (JObject item in Model)
                                                        {  
                                                            try{
                                                            string color = "";
                                                           
                                                            if (item["semaforo"].ToString()=="1")
                                                            {
                                                                color = "border: 5px solid " + item["color"].ToString();
                                                            }
                                                            <tr class="mailtr" style="@color;">

                                                                @foreach (var x in cols)
                                                                {
                                                                    HtmlString data = new HtmlString(item[x.Key].ToString());
                                                                    <td class="table-fixed-medium getmail" style="text-align: center; width: 100px !important; max-width: 100px !important; min-width: 100px !important; ">
                                                                        @try
                                                                        {
                                                                        if (2 == 22){ 
                                                                            
                                                                            if(x.Key == "images" && item[x.Key].ToString() != "sin Imagen")
                                                                            {
                                                                              
                                                                                 <div class="btn-group">
                                                                                     <button class="viewimg btn btn-mini blue fileinput-button" data-id="@item["_id"].ToString()" data-target="#@item["_id"].ToString()" data-toggle="modal"  data-original-title="ver Imagenes" rel="tooltip" data-placement="top">
                                                                                         <i class=" icon-picture"></i>
                                                                                     </button>
                                                                               </div>
                                                                             
                                                                                    
                                                                            }else  if (x.Key == "objects")
                                                                            {
                                                                               
                                                                               <div class="btn-group">
                                                                                <button class="viewdetail btn btn-mini blue fileinput-button" data-id="@item["_id"].ToString()"  data-original-title="ver Detalle" rel="tooltip" data-placement="top">
                                                                                    <i class=" icon-tag"></i>
                                                                                </button>
                                                                               </div>
                                                                            }
                                                                            else if (x.Key == "receiptFile")
                                                                            {
                                                                                try
                                                                                {

                                                                                    foreach (string rec in item[x.Key])
                                                                                    {
                                                                                        try
                                                                                        {
                                                                                            if (rec.Contains("ACT"))
                                                                                            {
                                                                                                HtmlString file = new HtmlString("<a  href='/Uploads/Dictamenes/documentos/" + rec + ".pdf' target='_blank'>" + rec + "</a>");
                                                                                                <h5>@file</h5>
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                HtmlString file = new HtmlString("<a  href='/Uploads/Dictamenes/documentos/" + rec + "' target='_blank'>" + rec + "</a>");
                                                                                                <h5>@file</h5>
                                                                                            }

                                                                                        }
                                                                                        catch
                                                                                        {

                                                                                        }
                                                                                    }

                                                                                }
                                                                                catch { }
                                                                            }
                                                                            else if (x.Key == "report")
                                                                            {
                                                                                try
                                                                                {
                                                                                    string link = "";
                                                                                    if (item[x.Key].ToString() != "N/A")
                                                                                    {
                                                                                        link = item[x.Key].ToString() + ".pdf";
                                                                                        if (item[x.Key].ToString().Contains("STA"))
                                                                                        {
                                                                                            <a class="sta" href="/ObjectAdmin/Demand/generateTempPDF?demandid=@item["_id"].ToString()" target="_blank">@link</a>
                                                                                        }
                                                                                        else
                                                                                        {

                                                                                            <a href="/Uploads/Dictamenes/@link" target="_blank">@link</a>
                                                                                        }

                                                                                    }

                                                                                }
                                                                                catch { }
                                                                            }
                                                                            }
                                                                            else
                                                                            {
                                                                                try
                                                                                {
                                                                               
                                                                                @data    
                                                                               @* <Text>@item[x.Key].ToString()</Text>*
                                                                                }
                                                                                catch { }
                                                                            }

                                                                        }
                                                                        catch (Exception ex) { }
                                                                    </td>
                                                                }



                                                            </tr>
                                                                count++;
                                                           }
                                                           catch (Exception ex) { }
                                                        }*@

                                                    </tbody>

                                                </table>
                                                @if (Model.Count() == 0)
                                                {
                                                    <div>
                                                        <br />
                                                        <h4>  NO HAY MOVIMIENTOS CREADOS EN ESTE RANGO DE FECHAS</h4>
                                                        <br />
                                                    </div>

                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="tab-pane autorizaciones autorizacionmargen" style="width: 100%" id="grafica">
                                    <div class="well-content no_padding row-fluid">



                                        <div class="well-header" style="background: #8793A0">
                                            <h5 style="color:white;">GRAFICAS</h5>
                                        </div>
                                        <div class="well-content no_padding row-fluid">

                                            <div class="span4 container" style="padding:7% 0px 0px 7%;">
                                                <p>
                                                    <strong> Tipo De Grafica:</strong>
                                                    <select id="selectgraph" class="chosen">


                                                        <option value="piegoo">Circular</option>


                                                        <option value="goobar">Barras</option>
                                                        <option value="tablebar">Area Escalonada</option>


                                                        @if (years < 10)
                                                        {
                                                            <option value="custom">Custom</option>
                                                            <option value="linegoo">Linea</option>
                                                            <option value="barhor">Barras(Horizontal)</option>
                                                            <option value="gooarea">Areas</option>
                                                            <option value="bargroup">Grupo Barras</option>
                                                        }

                                                    </select>
                                                </p>
                                                <br />
                                                <p>
                                                    <strong> Agrupar por:</strong>
                                                    <select id="selectgroup" class="chosen">
                                                        <option value="location">Ubicaciones</option>
                                                        <option value="user">Usuarios</option>
                                                        <option value="movement">Movimientos</option>
                                                    </select>
                                                </p>


                                            </div>
                                            <div class="span8 container" style="padding-right: 30%;  border-color: blue; padding-bottom: 5%;border-left:1px solid #0072c6">

                                                <div id="chart"></div>

                                            </div>
                                        </div>



                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                </center>


            </div>
        </center>

    </div>

</div>

<div class="float_right">

</div>

<div class="hidden">
    <canvas id="canvas1" height="0" width="0"></canvas>
</div>
<div id="pngimg"></div>
<link href="~/Content/Scripts/library/graph/charting/css/visualize.css" rel="stylesheet" />
<link href="~/Content/Scripts/library/graph/charting/css/visualize-dark.css" rel="stylesheet" />
<script src="~/Content/Scripts/library/graph/charting/js/example-filtering.js"></script>
<script src="https://www.google.com/jsapi"></script>

<script src="~/RivkaBase/Scripts/RivkaGroup/rivkagroup.js"></script>

<script>

    function viewdetail(id) {
        var iddemand = id;
        _loading();
        jQuery.ajax({
            url: "/Reports/Reports/getDetail",
            type: "POST",

            data: { iddemand: iddemand },
            success: function (data) {
                debugger;
                if (data != null && data != "null") {
                    jQuery("#viewobj").find(".modal-body").html("");
                    jQuery("#viewobj").find(".modal-body").html(data);
                    jQuery("#viewobj").modal("show");
                    /*   setTimeout(function () {
                           jQuery("#viewobj").css("width", "800px")
                           jQuery("#viewobj").css("margin-left", "-25%")
                       }, 1000);*/

                } else {
                    _alert("error", "Ha ocurrdido un error");
                }
                _loading();

            },
            error: function (errorThrown) {
                _alert("error", "Ha ocurrdido un error");
                _loading();
            }
        });
    }
    function viewimg(id) {

        jQuery(".zoomContainer").remove()
        bindzoom();
    }

    jQuery(document).ready(function ($) {
        // graph api google


        $('#firstFilter select').select2();
        $('#secondFilter select').select2();
        $('#thridFilter select').select2();
       
        function bindButtons() {
            $(".viewimg").unbind("click.viewimg");
            $(".viewimg").bind('click.viewimg', function () {
                var id = jQuery(this).data("id");
                jQuery(".zoomContainer").remove()
                bindzoom();
                // jQuery("#" + id).modal("show");


            });
            $(".viewdetail").unbind("click.viewdetail");
            $(".viewdetail").bind('click.viewdetail', function () {

                var iddemand = $(this).data("id");
                _loading();
                jQuery.ajax({
                    url: "/Reports/Reports/getDetail",
                    type: "POST",

                    data: { iddemand: iddemand },
                    success: function (data) {
                        debugger;
                        if (data != null && data != "null") {
                            jQuery("#viewobj").find(".modal-body").html("");
                            jQuery("#viewobj").find(".modal-body").html(data);
                            jQuery("#viewobj").modal("show");
                            /*   setTimeout(function () {
                                   jQuery("#viewobj").css("width", "800px")
                                   jQuery("#viewobj").css("margin-left", "-25%")
                               }, 1000);*/

                        } else {
                            _alert("error", "Ha ocurrdido un error");
                        }
                        _loading();

                    },
                    error: function (errorThrown) {
                        _alert("error", "Ha ocurrdido un error");
                        _loading();
                    }
                });
            });
        }
        function updatebinds() {
            var element = jQuery("#mailtablex").dataTable();
            var aux = jQuery(element.fnGetNodes()).find(".viewdetail");
            var aux1 = jQuery(element.fnGetNodes()).find(".viewimg");
            jQuery(aux1).unbind("click.viewimg");
            jQuery(aux1).bind('click.viewimg', function () {
                var id = jQuery(this).data("id");
                jQuery(".zoomContainer").remove()
                bindzoom();
                // jQuery("#" + id).modal("show");


            });
            jQuery(aux).unbind("click.viewdetail");
            jQuery(aux).bind('click.viewdetail', function () {

                var iddemand = $(this).data("id");
                _loading();
                jQuery.ajax({
                    url: "/Reports/Reports/getDetail",
                    type: "POST",

                    data: { iddemand: iddemand },
                    success: function (data) {
                        debugger;
                        if (data != null && data != "null") {
                            jQuery("#viewobj").find(".modal-body").html("");
                            jQuery("#viewobj").find(".modal-body").html(data);
                            jQuery("#viewobj").modal("show");
                            /* setTimeout(function () {
                                 jQuery("#viewobj").css("width", "800px")
                                 jQuery("#viewobj").css("margin-left", "-25%")
                                 _loading();
                             }, 1000);*/

                        } else {
                            _alert("error", "Ha ocurrdido un error");
                        }


                    },
                    error: function (errorThrown) {
                        _alert("error", "Ha ocurrdido un error");
                        _loading();
                    }
                });
            });
        }
        bindButtons();
        initGroup(updatebinds);
        try {

            var th = $('#mailtablex thead tr').clone()
            //jQuery('#mailtablex thead').append(th)
            jQuery("#mailtablex").dataTable({
                "sPaginationType": "full_numbers",
                "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                "iDisplayLength": 10,
                "sScrollY": "250px",
                aLengthMenu: [
                [10, 50, 100, -1],
                [10, 50, 100, "Todos"]
                ],
                "oLanguage": {
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                    "sSearch": "Filtro",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Ultimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"

                    },
                    "sEmptyTable": "Tabla Sin Datos"
                }
            }).columnFilter({
                sPlaceHolder: "head:after",
                aoColumns: [
                           @for(int i=1;i<numcols;i++)
            {
           @(new HtmlString(" { type: 'text' }, "))

            }
            { type: "text" }
                ]
            });

            $('#mailtablex input').css("width", "100%")
            setTimeout(function () {
                var table = jQuery("#mailtablex").dataTable();
                table.fnAdjustColumnSizing();
            }, 1000);
            /* setTimeout(function () {
                 var table = jQuery('#mailtablex').DataTable();
                 new jQuery.fn.dataTable.FixedHeader(table);
             }, 2000);*/
        } catch (e) { }
        var valuegen = 'line';
        jQuery("#autorizacionesHeader").unbind("click.list2")
        jQuery("#autorizacionesHeader").bind("click.list2", function () {
            debugger;
            /* setTimeout(function () {
                 var table = jQuery('#mailtablex').DataTable();
                 new jQuery.fn.dataTable.FixedHeader(table);
             }, 2000);*/
            headers1();
            setTimeout(function () {
                jQuery(".dataTables_scrollHeadInner table thead tr:first() th:eq(1)").trigger("click")
            }, 200)
           
           
        });
        jQuery(".hide_navigation").on("click.men", function () {
            jQuery(".dataTables_scrollHeadInner table thead tr:first() th:eq(0)").trigger("click")
        })
        jQuery("#listaHeader,#grafic2").unbind("click.list")
        jQuery("#listaHeader,#grafic2").bind("click.list", function () {
            // jQuery(".fixedHeader").remove()

        });

        jQuery("#main_navigation").hover(function () {

            jQuery(".zoomContainer").remove()
        })
        $(".changeimage").unbind("change.image");
        $(".changeimage").bind('change.image', function () {
            debugger;
            var imagepath = jQuery(this).find(":selected").val();
            jQuery(this).closest("tr").find("img").attr("src", "/Uploads/Dictamenes/imagenes/" + imagepath);
            jQuery(this).closest("tr").find("img").data("zoom-image", "/Uploads/Dictamenes/imagenes/" + imagepath);
            jQuery(".zoomContainer").remove()
            bindzoom();
        });


        function drawtable() {

            $('.visualize').remove();
            $('#chart').html("");
            var value = $("#selectgraph").val();

            // Create and populate the data table.
            var value2 = $("#selectgroup").val();
            //   jQuery('#selectformat').val('none');
            var data = null;
            if (value2 == "location") {
                data = google.visualization.arrayToDataTable([
                     ['Estados', '#Movimientos']
                     @foreach(var x in graph){

                   @(new HtmlString(",['"+x.Key+"',"))


                   @(new HtmlString(""+x.Value+"]"))
                    }



                ]);
            }
            if (value2 == "user") {
                data = google.visualization.arrayToDataTable([
                    ['Usuarios', '#Movimientos']
                    @foreach(var x in graph2){

                   @(new HtmlString(",['"+x.Key+"',"))


                   @(new HtmlString(""+x.Value+"]"))
                    }



                ]);
            }
            if (value2 == "movement") {
                data = google.visualization.arrayToDataTable([
                                ['Tipos de Movimiento', '#Movimientos']
                                @foreach(var x in graph3){

                   @(new HtmlString(",['"+x.Key+"',"))


                   @(new HtmlString(""+x.Value+"]"))
                    }



                ]);
            }










            // Create and draw the visualization.
            var options = {
                width: 600, height: 400,
                title: 'Movimientos Por Ubicacion',
                vAxis: { title: 'Acumulado' },
                isStacked: true
            };

            if (value == 'piegoo' || valuegen == 'line') {
                valuegen = ''
                var chart = new google.visualization.PieChart(document.getElementById('chart'));
                chart.draw(data, options);
            } else
                if (value == 'tablebar') {

                    var chart = new google.visualization.SteppedAreaChart(document.getElementById('chart'));
                    chart.draw(data, options);
                }

            $('#chart').removeClass("loading-custom");
        }

        function drawbar() {


            var heads = new Array();
            var rows = new Array();
            var value2 = $("#selectgroup").val();

            if (value2 == "location") {
                heads.push('Estado'); rows.push('#Movimientos');
                @foreach(var x in graph){
                @(new HtmlString("heads.push('"+x.Key+"');"))
                @(new HtmlString("rows.push("+x.Value+");"))
                        }
            }
            if (value2 == "user") {
                heads.push('Usuario'); rows.push('#Movimientos');
                @foreach(var x in graph2){
                @(new HtmlString("heads.push('"+x.Key+"');"))
                @(new HtmlString("rows.push("+x.Value+");"))
                        }
            }
            if (value2 == "movement") {
                heads.push('Tipo de movimiento'); rows.push('#Movimientos');
                @foreach(var x in graph3){
                @(new HtmlString("heads.push('"+x.Key+"');"))
                @(new HtmlString("rows.push("+x.Value+");"))
                }
            }
            $('.visualize').remove();
            $('#chart').html("");


            var wrapper = new google.visualization.ChartWrapper({
                chartType: 'ColumnChart',
                dataTable: [heads, rows],
                /*  dataTable: [['', 'Germany', 'USA', 'Brazil', 'Canada', 'France', 'RU'],
                              ['', 700, 300, 400, 500, 600, 800]],*/
                options: {
                    'title': 'Movimientos Por Ubicacion', 'width': 600,
                    'height': 400
                },
                containerId: 'chart'
            });
            wrapper.draw();
            $('#chart').removeClass("loading-custom");
        }
        function drawVisualization() {
            // Some raw data (not necessarily accurate)

            var heads = new Array();
            $('.visualize').remove();
            $('#chart').html("");
            @foreach(var x in headsg){
            @(new HtmlString("heads.push('"+x+"');"))
            }
            var data = new google.visualization.DataTable();

            var length = heads.length;
            for (var i = 0; i < length; i++) {
                if (i == 0) {
                    data.addColumn('string', heads[i]);
                } else {
                    data.addColumn('number', heads[i]);
                }
            }
            @foreach(var x in graphend){
                if (indexfor == 0) {
                @(new HtmlString("data.addRows([['"+x.Key+"'"))
                    indexfor++;
                }
                else
                {
                   @(new HtmlString(",['"+x.Key+"'"))

                }
                for (int i = 0; i < x.Value.Length; i++)
                {
                    @(new HtmlString("," + x.Value[i] + ""))
                }
                 @(new HtmlString("]"))
            }
            @if (indexfor > 0) {
         @(new HtmlString("]);"))
        }
            /* data.addRows([
             ['enero', 165, 938, 522, 998, 450],
             ['feb', 135, 1120, 599, 1268, 288],
             ['marzo', 157, 1167, 587, 807, 397],
             ['abril', 139, 1110, 615, 968, 215],
             ['mayo', 136, 691, 629, 1026, 366]
             ]);*/



            // Create and draw the visualization.
            var value = $("#selectgraph").val();

            if (value == 'gooarea') {
                var ac = new google.visualization.AreaChart(document.getElementById('chart'));
                ac.draw(data, {
                    title: 'Historial De Movimientos',
                    isStacked: true,
                    width: 600,
                    height: 400,
                    vAxis: { title: "#Movimientos" },
                    hAxis: { title: heads[0] }
                });
            } else if (value == 'bargroup') {
                var ac = new google.visualization.ColumnChart(document.getElementById('chart'));
                ac.draw(data, {
                    title: 'Historial  De Movimientos',
                    isStacked: true,
                    width: 600,
                    height: 400,
                    vAxis: { title: "#Movimientos" },
                    hAxis: { title: heads[0] }
                });

            } else if (value == 'linegoo') {
                var ac = new google.visualization.LineChart(document.getElementById('chart'));
                ac.draw(data, {
                    title: 'Historial  De Movimientos',
                    isStacked: true,
                    width: 600,
                    height: 400,
                    vAxis: { title: "#Movimientos" },
                    hAxis: { title: heads[0] }
                });

            } else if (value == 'custom') {

                var motionchart = new google.visualization.MotionChart(document.getElementById('chart'));
                motionchart.draw(data, { 'width': 600, 'height': 400 });

            } else if (value == 'barhor') {

                var chart = new google.visualization.BarChart(document.getElementById('chart'));
                chart.draw(data, {
                    title: 'Historial  De Movimientos',
                    isStacked: true,
                    width: 600,
                    height: 400,
                    vAxis: { title: heads[0] },
                    hAxis: { title: "#Movimientos" }
                });

            }
            $('#chart').removeClass("loading-custom");
        }


        //

        enhance({
            loadScripts: [
                { src: 'js/excanvas.js', iecondition: 'all' },


            ],
            loadStyles: [

            ]
        });

        $('#example')
        .visualize({
            rowFilter: ':not()',
            colFilter: ':not()',
            type: 'bar', height: '300px', width: '420px'
        });

        //$(".sta").on("click", function () {
        //    debugger;
        //    var iddemand = $(this).closest(".viewdetail").data("id");
        //    window.open("/Reports/Reports/generateTempPDF?demandid=" + iddemand);
        //    _loading();
        //    jQuery.ajax({
        //        url: "/Reports/Reports/generateTempPDF",
        //        type: "POST",

        //        data: { demandid: iddemand },
        //        success: function (data) {

        //        },
        //        error: function (errorThrown) {
        //            _alert("error", "Ha ocurrdido un error");
        //            _loading();
        //        }
        //    });

        //});
        $("#selectgraph").on('change', function () {
            debugger;
            var value = $("#selectgraph").val();
            jQuery('#selectformat').val('none');

            if (value != 0) {

                $('.visualize').remove();
                $('#chart').html("");
                if (value == 'area' || value == 'line') {
                    $('#example2').visualize({
                        rowFilter: ':not()',
                        colFilter: ':not()',
                        type: value, height: '300px', width: '520px'
                    });
                } else if (value == 'goobar') {
                    $('#chart').addClass("loading-custom");

                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawbar, 'packages': ['corechart'] }) }, 20);

                } else if (value == 'gooarea' || value == 'bargroup' || value == 'linegoo' || value == 'custom' || value == 'barhor') {
                    $('#chart').addClass("loading-custom");
                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawVisualization, 'packages': ['corechart', 'motionchart'] }) }, 20);


                } else if (value == 'tablebar' || value == 'piegoo') {
                    $('#chart').addClass("loading-custom");
                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawtable, 'packages': ['corechart', 'imageareachart'] }) }, 20);


                } else {
                    $('#example').visualize({
                        rowFilter: ':not()',
                        colFilter: ':not()',
                        type: value, height: '300px', width: '420px'
                    });
                }

                $("html, body").animate({ scrollTop: $(document).height() }, "fast");
            }
        });

        $("#selectgroup").on('change', function () {
            debugger;
            var value2 = $("#selectgroup").val();
            var value = $("#selectgraph").val();
            //   jQuery('#selectformat').val('none');

            if (value2 == "location") { }
            if (value2 == "user") { }
            if (value2 == "movement") { }

            if (value != 0) {

                $('.visualize').remove();
                $('#chart').html("");
                if (value == 'area' || value == 'line') {
                    $('#example2').visualize({
                        rowFilter: ':not()',
                        colFilter: ':not()',
                        type: value, height: '300px', width: '520px'
                    });
                } else if (value == 'goobar') {
                    $('#chart').addClass("loading-custom");

                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawbar, 'packages': ['corechart'] }) }, 20);

                } else if (value == 'gooarea' || value == 'bargroup' || value == 'linegoo' || value == 'custom' || value == 'barhor') {
                    $('#chart').addClass("loading-custom");
                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawVisualization, 'packages': ['corechart', 'motionchart'] }) }, 20);


                } else if (value == 'tablebar' || value == 'piegoo') {
                    $('#chart').addClass("loading-custom");
                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawtable, 'packages': ['corechart', 'imageareachart'] }) }, 20);


                } else {
                    $('#example').visualize({
                        rowFilter: ':not()',
                        colFilter: ':not()',
                        type: value, height: '300px', width: '420px'
                    });
                }

                $("html, body").animate({ scrollTop: $(document).height() }, "fast");
            }
        });


        $("#exporttoexcelx").on('click', function () {

            exportReports("goexcel");
        });
        $("#exporttopdfx").on('click', function () {

            exportReports("gopdf");
        });
        function exportReports(type) {

            var data = "";
            var result = "";
            var namefilter = "";
            // var value = $("#selectformat").val();
            var value = type;


            @*(new HtmlString("result="+Model+";"))*@
            result = datafull;
            jQuery.each(datafull2, function () {
                result.push(this)

            })
            var jsonresult = JSON.stringify(result);
          
            var arraycols = new Array();
            var numtotal = "";
            var arraydates = {};
            var namereport = "Procesos";
            var typefilter = "";


            @foreach (var x in cols)
            {
                   @(new HtmlString("var datacols = {};"))
                  @(new HtmlString("datacols.key='"+x.Key+"';"))
                  @(new HtmlString("datacols.value='"+x.Value+"';"))
                  @(new HtmlString("arraycols.push(datacols);"))
             }
            var jsoncols = JSON.stringify(arraycols);
            @(new HtmlString("numtotal="+numproccess.ToString()+";"))


            @(new HtmlString("arraydates.start='"+datesarray[0]+"';"))
            @(new HtmlString("arraydates.end='"+datesarray[1]+"';"))
            var jsondates = JSON.stringify(arraydates);

            //   window.open('/Uploads/Reports/' + data, '_blank');

            //  var table = $("#customers").html();
            //  demoFromHTML();
            // demotablepdf();
            /* doc.text(20, 20, 'Hello world!');
             doc.text(20, 30, 'This is client-side Javascript, pumping out a PDF.');
             doc.addPage();
             doc.text(20, 20, 'Do you like that?');
             doc.save('sample-file.pdf');*/


            var filename = "";
            var heads = new Array();
            svg = $('svg').parent().html();
            canvg('canvas1', svg);
            canvas = document.getElementById("canvas");
            // img_PNG = "<img src='#{canvas.toDataURL()}' />";
            canvas1 = document.getElementById("canvas1");
            var imgjpeg = canvas1.toDataURL("image/jpeg");

            //  $('#pngimg').html(img_PNG);

            if (value == "gopdf") {
                jQuery.ajax({

                    url: "/Reports/Reports/exp1",
                    data: { result: jsonresult, namefilter: namefilter, numtot: numtotal, datacols: jsoncols, datesarray: jsondates, namereports: namereport, typefilters: typefilter, graph: imgjpeg, rotate: 1 },
                    beforeSend: _loading(),
                    type: "POST",
                    success: function (data) {
                        window.open('/Uploads/Reports/' + data, '_blank');

                        _loading();

                    },
                    error: function (errorThrown) {
                        alert("Ocurrio un Error, Intente Mas tarde");
                        _loading();
                    }


                });
            }
            if (value == "goexcel") {
                debugger;
               // jQuery("#ungroup").trigger("click");
                var headsarray = [];
                var colsnum = 0;
                //jQuery("#mailtablex thead tr:first").find("th").each(
                jQuery("#mailtablex_wrapper thead tr:first").find("th").each(
                function () {
                    if (jQuery(this).text().trim() != "DETALLE") {
                        headsarray.push(jQuery(this).text().trim())
                    }
                    colsnum++;
                });
                var table = jQuery("#mailtablex").dataTable()

                var tr = table.fnGetNodes()
                var arrays = [];
                jQuery(tr).each(function () {

                    var array = [];

                    for (var i = 0; i < colsnum; i++) {
                        if (i != 1) {
                            array.push(jQuery(this).find("td:eq(" + i + ")").text().trim())
                        }

                    }
                    arrays.push(array);
                });
                debugger;
                var jsondata = JSON.stringify(arrays);
                var jsonheads = JSON.stringify(headsarray);

                jQuery.ajax({

                    url: "/Reports/Reports/exportexcel",
                    type: "POST",
                    data: { heads: jsonheads, data: jsondata },
                    beforeSend: _loading(),
                    type: "POST",
                    success: function (data) {
                        window.open('/Uploads/Reports/' + data, '_blank');

                        _loading();

                    },
                    error: function (errorThrown) {
                        alert("Ocurrio un Error, Intente Mas tarde");
                        _loading();
                    }


                });

            }

        }
        $('#chart').addClass("loading-custom");
        setTimeout(function () { google.load('visualization', '1', { 'callback': drawtable, 'packages': ['corechart', 'imageareachart'] }) }, 10);

    });

    function headers1() {
        setTimeout(function () {
            var table = jQuery("#mailtablex").dataTable();

            table.fnAdjustColumnSizing();
            if (table.find("thead tr").length > 1)
                table.find("thead tr").last().remove();
            if (jQuery(".dataTables_scrollHead thead tr").length > 1)
                jQuery(".dataTables_scrollHead thead tr").last().remove();

            var th = jQuery('#mailtablex thead tr').clone()
            jQuery('#mailtablex thead').append(th)
            table.columnFilter({
                sPlaceHolder: "head:after",
                aoColumns: [
          @for(int i=1;i<numcols;i++)
            {
           @(new HtmlString(" { type: 'text' }, "))

            }
            { type: "text" }
                ]
            });
            jQuery('#mailtablex input').css("width", "100%")
            var head = jQuery("#mailtablex").find("thead tr").last();
            jQuery(".dataTables_scrollHead tr").after(head)
            jQuery(".dataTables_scrollHead input").css("width", "100%")
            jQuery(".dataTables_scrollHead tr:last th").css("padding", "10px")
            jQuery('#mailtablex ').css("width", "100%")
            var style = jQuery(".dataTables_scrollHead").attr("style")
            var style2 = jQuery(".dataTables_scrollBody").attr("style")
            if (style.indexOf("width: 100%")) {
                style = style.replace("100%", "1111px")
                jQuery(".dataTables_scrollHead").attr("style", style)

            }
            if (style2.indexOf("width: 100%")) {
               // style2 = style2.replace("100%", "1111px")
                //jQuery(".dataTables_scrollBody").attr("style", style2)
            }
            jQuery(".dataTables_scrollHeadInner table thead tr:last() th").on("keyup.filter", function () {
                debugger
                jQuery(".dataTables_scrollHeadInner table thead tr:last() th:eq(" + jQuery(this).index() + ")").trigger("focus")
                jQuery(".dataTables_scrollHeadInner table thead tr:last() th:eq(" + jQuery(this).index() + ") input").trigger("focus")
            })

        }, 100);
    }
     @(new HtmlString("datafull=\""+datajson+"\";"))
     @(new HtmlString("datafull2=\""+datajson2+"\";"))
     @(new HtmlString("datacols="+colsjson+";"))
</script>

