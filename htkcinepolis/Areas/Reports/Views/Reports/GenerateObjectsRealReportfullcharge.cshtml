@using MongoDB.Bson;
@{Layout = null;}
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@model JArray
@{

    ViewBag.Title = "GenerateObjectRealReport";

    Dictionary<string, string> cols = new Dictionary<string, string>();
    Dictionary<string, int> graph = new Dictionary<string, int>();
    Dictionary<string, int> graph2 = new Dictionary<string, int>();
    Dictionary<string, int> graph3 = new Dictionary<string, int>();
    Dictionary<int, string> headersgraph = new Dictionary<int, string>();
    Dictionary<string, int[]> graphtime = new Dictionary<string, int[]>();
    List<string> headsg = new List<string>();
    int years = (int)ViewData["years"];
    Dictionary<string, int[]> graphend = new Dictionary<string, int[]>();
    int indexfor = 0;
    foreach (var x in (List<string>)ViewData["headmult"])
    {
        headsg.Add(x);
    }
    foreach (var x in (Dictionary<string, int[]>)ViewData["bodygraph"])
    {

        graphend.Add(x.Key, x.Value);
    }
    foreach (var x in (Dictionary<string, string>)ViewData["cols"])
    {
        cols.Add(x.Key, x.Value);
    }
    foreach (var x in (Dictionary<string, int>)ViewData["graph"])
    {
        try
        {
            graph.Add(x.Key, x.Value);


        }
        catch { }
    }

    foreach (var x in (Dictionary<string, int>)ViewData["graph2"])
    {
        try
        {
            graph2.Add(x.Key, x.Value);
        }
        catch (Exception ex) { }
    }

    foreach (var x in (Dictionary<string, int>)ViewData["graph3"])
    {
        try
        {
            graph3.Add(x.Key, x.Value);
        }
        catch (Exception ex) { }
    }
    
    foreach (var x in (Dictionary<int, string>)ViewData["th"])
    {

        headersgraph.Add(x.Key, x.Value);
    }
    foreach (var x in (Dictionary<string, int[]>)ViewData["graphtime"])
    {

        graphtime.Add(x.Key, x.Value);
    }
    string[] headarray = headsg.ToArray();
    int count = 5;

    long numusers = Convert.ToInt64(ViewData["numusers"].ToString());
    string nameprofiles = ViewData["profiles"].ToString();
    string[] datesarray = (string[])ViewData["dates"];

    int numcols = 0;
    String datajson = ViewData["result"].ToString();
    String datajson2 = ViewData["result2"].ToString();
   string dataprofilex = ViewData["dataprofile"].ToString();
   string datastartdate = ViewData["datastartdate"].ToString();
   string dataenddate = ViewData["dataenddate"].ToString();
   string datacols1 = ViewData["datacol"].ToString();
   string datacustomfields = ViewData["datacustomfiled"].ToString();
   string datastatus = ViewData["datastatus"].ToString();
   // JArray datajson = ViewData["result"] as JArray;
    //try
    //{
    //    foreach (var item in Model)
    //    {
    //        try
    //        {
    //            JObject item2 = item as JObject;
    //            datajson.Add(item2);
    //        }
    //        catch { }
    //    }
    //}
    //catch (Exception ex)
    //{

    //}
    long totalfull = 0;
    try
    {
        totalfull = Convert.ToInt64(ViewData["total"].ToString());
    }
    catch { }
    string profile = "";
    string startdate = "";
    string enddate = "";
    string col = "";
    string customfields = "";
    string status = "";
    try
    {
        profile = ViewData["profile"].ToString();
        startdate= ViewData["startdate"].ToString();
        enddate=  ViewData["enddate"].ToString();
        col= ViewData["col"].ToString();
        customfields= ViewData["customfields"].ToString();
        status= ViewData["status"].ToString();
    }
    catch {  }
}
<style>
    #mailtablex tr > td {
        text-align: center;
    }
</style>
<div class="well">
   



    <div class="well-content no_padding row-fluid">
        <center>
            <div style="width:100%;align-content:center;">


                <center>
                    <div class="well">

                        <div class="well-content no-search">
                            <div class="navbar-inner">
                                <ul class="nav nav-tabs" id="tabHeader2">
                                    <li class="active" id="listaHeader"><a href="#lista" data-toggle="tab">Resumen</a></li>
                                    <li id="autorizacionesHeader"><a href="#autorizaciones" data-toggle="tab">Tablas de Datos <span id="counterauthos" class="badge badge-important">@numusers</span></a></li>
                                    <li id="grafic2"><a href="#grafica" data-toggle="tab">Graficas <span id="counterauthos1" class="badge badge-important"></span></a></li>

                                </ul>
                            </div>
                            <div class="tab-content" id="tabContent2">
                                <div class="tab-pane active lista listamargen" style="width: 100%" id="lista">

                                    <div class="well">
                                        <div class="well-header row-fluid titleclient" style="background-color:white">


                                            <h5 style="color:black">Reporte de Activos </h5>



                                            <div class="btn-group">

                                                <button type="button" class="btn btn-mini  fileinput-button" style="background-color:#06550a" id="exporttoexcelx" title="Exportar a Excel" rel="tooltip" data-placement="top">
                                                    <i class="excelbtn"></i>
                                                </button>
                                                <button type="button" class="btn btn-mini red " id="exporttopdfx" title="Exportar a Pdf" rel="tooltip" data-placement="top">
                                                    <i class="pdfbtn"></i>
                                                </button>


                                            </div>

                                        </div>
                                        <div class="well-content no_padding row-fluid">
                                            <br />
                                            <div class="float_left" style="padding-left:1.5%;"></div>
                                            <div class="float_margen">
                                                <div id="tableuser">
                                                    <table id="tab_tableuser" class="table table-striped table-hover">

                                                        <thead>
                                                            <tr class="success">

                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white; font-weight: bold; text-align: center">#Activos</th>
                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white; font-weight: bold; text-align: center">Ubicaciones(es)</th>
                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white; font-weight: bold; text-align: center">Campos Adicionales</th>
                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white; font-weight: bold; text-align: center">Fecha Inicio</th>

                                                                <th class="table-fixed-medium getmail" style="background: #8793A0; color: white; font-weight: bold; text-align: center">Fecha Fin</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody>


                                                            <tr class="mailtr">


                                                                <td id="countfull" class="table-fixed-medium getmail" style="text-align:center;">@numusers</td>
                                                                <td class="table-fixed-medium getmail" style="text-align:center;">@nameprofiles</td>
                                                                <td class="table-fixed-medium getmail" style="text-align:center;">Todos</td>

                                                                <td class="table-fixed-medium getmail" style="text-align:center;">@datesarray[0]</td>
                                                                <td class="table-fixed-medium getmail" style="text-align:center;">@datesarray[1]</td>


                                                            </tr>



                                                        </tbody>

                                                    </table>
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                </div>
                                <div class="tab-pane autorizaciones autorizacionmargen" id="autorizaciones">

                                    <div class="well">



                                        <!--   <div class="well-header">
                                            <center> <h4 style="color:white;padding-top:10px;">Reporte de Usuarios</h4></center>
                                        </div>-->
                                        <div class="no_padding row-fluid">
                                            <div class="float_left" style="padding-left:1.5%;"></div>
                                            <div class="row-fluid" style="display:none">

                                                <div class="span3 float-right" style=" padding-top: 2%;">
                                                    <div class="controls">
                                                        <label>No. de Registros</label>
                                                        <select id="paginationselect" class="m-wrap span12" data-placeholder="Selecciona Municipio" tabindex="1">
                                                            <option value="50">50</option>
                                                            <option value="100">100</option>
                                                            <option value="200">200</option>
                                                            <option value="500">500</option>
                                                            <option value="1000">1000</option>
                                                            @*<option value="-1">Todos</option>*@
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="span3 float-right" style=" padding-top: 2%;">
                                                    <div class="controls">
                                                        <label>Paginación</label>
                                                        <select id="indexselect" class="span12 m-wrap" data-placeholder="Selecciona una colonia" tabindex="1">
                                                            @ViewData["pagination"]
                                                        </select>
                                                    </div>
                                                </div>


                                            </div>
                                            <div id="reports" class="float_margen">
                                                <div class="container1  " style="max-height:500px;  padding: 0px 20px 25px 0px; ">
                                                    <div class="row_fluid" style="  padding-bottom: 2%;">
                                                        <div id="firstFilter" class="span3">
                                                            <div class="hida" style="padding-left: 12%;">
                                                                <input id="year1" type="checkbox" style="right:5px;display:none" title="Es fecha?" />
                                                                Primera Agrupación:
                                                            </div>
                                                            <select class="span11">
                                                                <option value="99">Elige una Columna</option>
                                                                @{ int indexcol = 0;}
                                                                @foreach (var item in cols)
                                                                {
                                                                    <option value="@indexcol">@item.Value</option>
                                                                    indexcol++;
                                                                }
                                                            </select>
                                                        </div>
                                                        <div id="secondFilter" class="span3" style="display:none">
                                                            <div class="hida" style="padding-left: 2%;">
                                                                <input id="year2" type="checkbox" style="right: 5px; display: none" title="Es fecha?" />

                                                                Segunda Agrupación:
                                                            </div>
                                                            <select class="span11">
                                                                <option value="99">Elige una Columna</option>
                                                                @{indexcol = 0;}
                                                                @foreach (var item in cols)
                                                                {
                                                                    <option value="@indexcol">@item.Value</option>
                                                                    indexcol++;
                                                                }
                                                            </select>
                                                        </div>
                                                        <div id="thridFilter" class="span3" style="display:none">
                                                            <div class="hida" style="padding-left: 2%;">
                                                                <input id="year3" type="checkbox" style="right: 5px; display: none" title="Es fecha?" />

                                                                Tercera Agrupación:
                                                            </div>
                                                            <select class="span11">
                                                                <option value="99">Elige una Columna</option>
                                                                @{indexcol = 0;}
                                                                @foreach (var item in cols)
                                                                {
                                                                    <option value="@indexcol">@item.Value</option>
                                                                    indexcol++;
                                                                }
                                                            </select>
                                                        </div>
                                                        <div class="span3">
                                                            <div class="hida" style="padding-left: 2%; padding-top: 7%;">

                                                                <input type="button" class="btn button_green" id="group" value="Agrupar" />
                                                                <input type="button" class="btn black" id="ungroup" value="Desagrupar" style=" margin-left: 8%;" />

                                                            </div>

                                                        </div>
                                                    </div>
                                                    <br />
                                                    <div id="here"></div>
                                                    <table id="mailtablex" class="table table-striped table-hover">

                                                        <thead style="">
                                                            <tr class="header">
                                                                @foreach (var x in cols)
                                                                {
                                                                    numcols++;
                                                                    <th class="table-fixed-medium getmail" style="background: #8793A0; color: white;  text-align: center;font-size:12px;">@x.Value.ToUpper()</th>
                                                                }

                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @*
                                                            @foreach (var item2 in datajson)
                                                            {
                                                                JObject item = item2 as JObject;
                                                                try
                                                                {
                                                                   @* <tr class="mailtr" style="@item["color"]">

                                                                        @foreach (var x in cols)
                                                                        {

                                                                            <td class="table-fixed-medium getmail" style="text-align:center;">
                                                                                @try
                                                                                {<Text>@item[x.Key].ToString()</Text>}
                                                                                catch (Exception ex)
                                                                                {
                                                                                    { }
                                                                                }
                                                                            </td>
                                                                        }



                                                                    </tr>
                                                                       
                                                                    count++;
                                                                    break;
                                                                }
                                                                catch
                                                                {

                                                                }
                                                            }
                                                            *@
                                                        </tbody>

                                                    </table>
                                                    @if (numusers == 0)
                                                    {
                                                        <div>
                                                            <br />
                                                            <h4>  NO HAY OBJETOS REALES CREADOS EN ESTE RANGO DE FECHAS</h4>

                                                        </div>

                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane autorizaciones autorizacionmargen" style="width: 100%" id="grafica">

                                    <div class="well-content no_padding row-fluid">



                                        <div class="well-header" style="background: #8793A0">
                                            <h5 style="color:white;">GRAFICAS</h5>
                                        </div>
                                        <div class="well-content no_padding row-fluid">

                                            <div class="span4 container" style="padding:7% 0px 0px 7%;">
                                                <p>
                                                    <strong> Tipo De Grafica:</strong>
                                                    <select id="selectgraph" class="chosen">


                                                        <option value="piegoo">Circular</option>


                                                        <option value="goobar">Barras</option>
                                                        <option value="tablebar">Area Escalonada</option>


                                                        @if (years < 10)
                                                        {
                                                            <option value="custom">Custom</option>
                                                            <option value="linegoo">Linea</option>
                                                            <option value="barhor">Barras(Horizontal)</option>
                                                            <option value="gooarea">Areas</option>
                                                            <option value="bargroup">Grupo Barras</option>
                                                        }

                                                    </select>
                                                </p>
                                                <br />
                                                <p>
                                                    <strong> Agrupar por:</strong>
                                                    <select id="selectgroup" class="chosen">
                                                        <option value="location">Ubicaciones</option>
                                                        <option value="object_id">ID Articulo</option>
                                                        <option value="name">Descripcion</option>
                                                    </select>
                                                </p>


                                            </div>
                                            <div class="span8 container" style="padding-right: 30%;  border-color: blue; padding-bottom: 5%;border-left:1px solid #0072c6">

                                                <div id="chart"></div>

                                            </div>
                                        </div>



                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </center>


            </div>
        </center>

    </div>

</div>

<div class="float_right">
    <!-- <input type="submit" class="btn blue" id="export" value="Generar Pdf" />
     <input type="submit" class="btn blue" id="exportexcel" value="Generar Excel" />-->


</div>

<div class="hidden">
    <canvas id="canvas1" height="0" width="0"></canvas>
</div>
<div id="pngimg"></div>
@*<input type="hidden" id="dataresult" value="@datajson"/>*@
<link href="~/Content/Scripts/library/graph/charting/css/visualize.css" rel="stylesheet" />
<link href="~/Content/Scripts/library/graph/charting/css/visualize-dark.css" rel="stylesheet" />

<script src="~/Content/Scripts/library/graph/charting/js/example-filtering.js"></script>
<script src="~/RivkaBase/Scripts/RivkaGroup/rivkagroup.js"></script>
<!--<script type="text/javascript" src="https://www.google.com/jsapi?autoload={'modules':[{'name':'visualization','version':'1.0','packages':['controls']}]}"></script>-->
<script src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
    //var my_script = document.createElement('script'); my_script.setAttribute('src', 'https://www.google.com/jsapi'); document.head.appendChild(my_script);
    //my_script.setAttribute('async', true);

    // jQuery('.overOn').perfectScrollbar({ wheelSpeed: 1000 });

    jQuery(document).ready(function ($) {
        var valuegen = 'line';
        debugger;
        initGroup();
        try {
            /*  jQuery('#mailtablex').fixedHeaderTable({  altClass: 'odd', autoShow: false });

              jQuery('#mailtablex').fixedHeaderTable('show', 1000);
              jQuery('#mailtablex thead').remove();
              jQuery('#mailtablex').removeAttr("Style");
              jQuery('#mailtablex').css("font-size", "15px");*/
            debugger;
            var th = $('#mailtablex thead tr').clone()
            // $('#mailtablex thead').append(th)
            $('#firstFilter select').select2();
            $('#secondFilter select').select2();
            $('#thridFilter select').select2();
            jQuery("#mailtablex").dataTable({
                "sPaginationType": "full_numbers",
                @*"aaData":  @new HtmlString(datajson),
                    "bDeferRender": true,*@
                "sDom": "<'tableHeader'<l><'clearfix'f>r>t<'tableFooter'<i><'clearfix'p>>",
                "iDisplayLength": 50,
                "sScrollY": "250px",
                aLengthMenu: [
                [10,50, 100,-1],
                [10,50, 100, "Todos"]
                ],
                "oLanguage": {
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sInfo": "Mostrando del _START_ al _END_ de _TOTAL_ registros",
                    "sSearch": "Filtro",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Ultimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"

                    },
                    "sEmptyTable": "Tabla Sin Datos"
                }
            }).columnFilter({
                sPlaceHolder: "head:after",
                aoColumns: [
                           @for(int i=1;i<numcols;i++)
                               {
                              @(new HtmlString(" { type: 'text' }, "))

                               }
                           { type: "text" }
                ]
            });
            $('#mailtablex input').css("width", "100%")
            setTimeout(function () {
                var table = jQuery("#mailtablex").dataTable();
                table.fnAdjustColumnSizing();
            }, 1000);
            /* setTimeout(function () {
                 var table = jQuery('#mailtablex').DataTable();
                 new jQuery.fn.dataTable.FixedHeader(table);
             }, 2000);*/
            /*
            .columnFilter({
                sPlaceHolder: "head:after",
                aoColumns: [
                            { type: "select", values: nisarray },
                            { type: "text" },
                            { type: "text" },
                            { type: "number-range" },
                            { type: "text" },
                           { type: "number-range" },
                           { sType: "date-uk", type: "date-range" },
                           { type: "text" }
                     ]
            })
            */
        } catch (e) { }
        jQuery("#autorizacionesHeader").unbind("click.list2")
        jQuery("#autorizacionesHeader").bind("click.list2", function () {
            debugger;
            /* setTimeout(function () {
                 var table = jQuery('#mailtablex').DataTable();
                 new jQuery.fn.dataTable.FixedHeader(table);
             }, 2000);*/
            headers1();

            setTimeout(function () {
                var table = jQuery('#mailtablex').dataTable();
                table.fnDraw()
            }, 1000);

        });
        jQuery("#listaHeader,#grafic2").unbind("click.list")
        jQuery("#listaHeader,#grafic2").bind("click.list", function () {
            // jQuery(".fixedHeader").remove()

        });
        function demotablepdf() {

            var table = tableToJson($('#mailtablex').get(0))
            var doc = new jsPDF('p', 'pt', 'a4', true);

            doc.cellInitialize();
            $.each(table, function (i, row) {

                $.each(row, function (j, cell) {
                    doc.cell(10, 5, 100, 50, cell, i);  // 2nd parameter=top margin,1st=left margin 3rd=row cell width 4th=Row height
                })
            })


            doc.save('sample-file.pdf');

        }
        function demoFromHTML() {
            var pdf = new jsPDF('p', 'in', 'letter')



            // source can be HTML-formatted string, or a reference
            // to an actual DOM element from which the text will be scraped.
            , source = $('#chart')[0]

            // we support special element handlers. Register them with jQuery-style
            // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
            // There is no support for any other type of selectors
            // (class, of compound) at this time.
            , specialElementHandlers = {
                // element with id of "bypass" - jQuery style selector
                '#bypassme': function (element, renderer) {
                    // true = "handled elsewhere, bypass text extraction"
                    return true
                }
            }

            // all coords and widths are in jsPDF instance's declared units
            // 'inches' in this case
            pdf.fromHTML(
                source // HTML string or DOM elem ref.
                , 0.5 // x coord
                , 0.5 // y coord
                , {
                    'width': 7.5 // max width of content on PDF
                    , 'elementHandlers': specialElementHandlers
                }
            )

            pdf.save('Test.pdf');
        }
        function drawtable() {

            $('.visualize').remove();
            $('#chart').html("");
            var value = $("#selectgraph").val();

            // Create and populate the data table.
            var value2 = $("#selectgroup").val();
            //   jQuery('#selectformat').val('none');
            var data = null;
            if (value2 == "location") {
                data = google.visualization.arrayToDataTable([
                     ['Ubicaciones', '#Activos']
                     @foreach(var x in graph){

                       @(new HtmlString(",[\"" + x.Key + "\","))


                       @(new HtmlString(""+x.Value+"]"))
                         }



                ]);
            }
            if (value2 == "object_id") {
                data = google.visualization.arrayToDataTable([
                    ['ID Articulo', '#Activos']
                    @foreach(var x in graph2){

                       @(new HtmlString(",[\"" + x.Key + "\","))


                       @(new HtmlString(""+x.Value+"]"))
                        }



                ]);
            }
            if (value2 == "name") {
                data = google.visualization.arrayToDataTable([
                                ['Descripciones', '#Activos']
                                @foreach(var x in graph3){
                                        string key=x.Key.Replace("'","\"");

                       @(new HtmlString(",['" + key + "',"))


                       @(new HtmlString("" + x.Value + "]"))
                                    }



                ]);
            }


            var options = {
                width: 600, height: 400,
                title: 'Activos Por Ubicacion',
                vAxis: { title: 'Acumulado' },
                isStacked: true
            };
            if (value == 'piegoo' || valuegen == 'line') {
                valuegen = ''
                var chart = new google.visualization.PieChart(document.getElementById('chart'));
                chart.draw(data, options);
            } else
                if (value == 'tablebar') {

                    var chart = new google.visualization.SteppedAreaChart(document.getElementById('chart'));
                    chart.draw(data, options);
                }

            $('#chart').removeClass("loading-custom");
        }

        function drawbar() {


            var heads = new Array();
            var rows = new Array();
            $('.visualize').remove();
            $('#chart').html("");
            @*@foreach(var x in graph){
        @(new HtmlString("heads.push('"+x.Key+"');"))
        @(new HtmlString("rows.push("+x.Value+");"))
        }*@

            var value2 = $("#selectgroup").val();

            if (value2 == "location") {
                heads.push('Ubicaciones'); rows.push('#Activos');
                @foreach(var x in graph){
                        string key = x.Key.Replace("'", " ");
                        key = x.Key.Replace("\"", " ");

                    @(new HtmlString("heads.push(\"" + key + "\");"))
                    @(new HtmlString("rows.push("+x.Value+");"))
                    }
            }
            if (value2 == "object_id") {
                heads.push('ID Articulo'); rows.push('#Activos');
                @foreach(var x in graph2){
                        string key = x.Key.Replace("'", " ");
                        key = x.Key.Replace("\"", " ");

                    @(new HtmlString("heads.push(\"" + key + "\");"))
                    @(new HtmlString("rows.push("+x.Value+");"))
                    }
            }
            if (value2 == "name") {
                heads.push('Descripciones'); rows.push('#Activos');
                @foreach(var x in graph3){
                        string key = x.Key.Replace("'", " ");
                        key = x.Key.Replace("\"", " ");

                    @(new HtmlString("heads.push(\"" + key + "\");"))
                    @(new HtmlString("rows.push("+x.Value+");"))
                    }
            }
            var wrapper = new google.visualization.ChartWrapper({
                chartType: 'ColumnChart',
                dataTable: [heads, rows],
                /*  dataTable: [['', 'Germany', 'USA', 'Brazil', 'Canada', 'France', 'RU'],
                              ['', 700, 300, 400, 500, 600, 800]],*/
                options: {
                    'title': 'Activos', 'width': 600,
                    'height': 400
                },
                containerId: 'chart'
            });
            wrapper.draw();
            $('#chart').removeClass("loading-custom");
        }
        function drawVisualization() {
            // Some raw data (not necessarily accurate)

            var heads = new Array();
            $('.visualize').remove();
            $('#chart').html("");
            @foreach(var x in headsg){
        @(new HtmlString("heads.push(\"" + x + "\");"))
        }
            var data = new google.visualization.DataTable();
            debugger;
            var length = heads.length;
            for (var i = 0; i < length; i++) {
                if (i == 0) {
                    data.addColumn('string', heads[i]);
                } else {
                    data.addColumn('number', heads[i]);
                }
            }
            @foreach(var x in graphend){
             if (indexfor == 0) {
             @(new HtmlString("data.addRows([['" + x.Key + "'"))
                 indexfor++;
             }
             else
             {
                @(new HtmlString(",['" + x.Key + "'"))

             }
             for (int i = 0; i < x.Value.Length; i++)
             {
                 @(new HtmlString("," + x.Value[i] + ""))
             }
             @(new HtmlString("]"))
        }

            @if (indexfor > 0) {
         @(new HtmlString("]);"))
        }
            /* data.addRows([
             ['enero', 165, 938, 522, 998, 450],
             ['feb', 135, 1120, 599, 1268, 288],
             ['marzo', 157, 1167, 587, 807, 397],
             ['abril', 139, 1110, 615, 968, 215],
             ['mayo', 136, 691, 629, 1026, 366]
             ]);*/



            // Create and draw the visualization.
            var value = $("#selectgraph").val();

            if (value == 'gooarea') {
                var ac = new google.visualization.AreaChart(document.getElementById('chart'));
                ac.draw(data, {
                    title: 'Historial De Creacion De Activos',
                    isStacked: true,
                    width: 600,
                    height: 400,
                    vAxis: { title: "Num Activos" },
                    hAxis: { title: heads[0] }
                });
            } else if (value == 'bargroup') {
                var ac = new google.visualization.ColumnChart(document.getElementById('chart'));
                ac.draw(data, {
                    title: 'Historial De Creacion De Activos',
                    isStacked: true,
                    width: 600,
                    height: 400,
                    vAxis: { title: "Num Usuarios" },
                    hAxis: { title: heads[0] }
                });

            } else if (value == 'linegoo') {
                var ac = new google.visualization.LineChart(document.getElementById('chart'));
                ac.draw(data, {
                    title: 'Historial De Creacion De Activos',
                    isStacked: true,
                    width: 600,
                    height: 400,
                    vAxis: { title: "Num Activos" },
                    hAxis: { title: heads[0] }
                });

            } else if (value == 'custom') {

                var motionchart = new google.visualization.MotionChart(document.getElementById('chart'));
                motionchart.draw(data, { 'width': 600, 'height': 400 });

            } else if (value == 'barhor') {

                var chart = new google.visualization.BarChart(document.getElementById('chart'));
                chart.draw(data, {
                    title: 'Historial De Creacion De Activos',
                    isStacked: true,
                    width: 600,
                    height: 400,
                    vAxis: { title: heads[0] },
                    hAxis: { title: "#Activos" }
                });

            }
            $('#chart').removeClass("loading-custom");
        }



        enhance({
            loadScripts: [
                { src: 'js/excanvas.js', iecondition: 'all' },


            ],
            loadStyles: [

            ]
        });

        $('#example')
        .visualize({
            rowFilter: ':not()',
            colFilter: ':not()',
            type: 'bar', height: '300px', width: '420px'
        });

        $("#selectgraph").on('change', function () {
            var value = $("#selectgraph").val();
            jQuery('#selectformat').val('none');
            if (value != 0) {

                $('.visualize').remove();
                $('#chart').html("");
                if (value == 'area' || value == 'line') {
                    $('#example2').visualize({
                        rowFilter: ':not()',
                        colFilter: ':not()',
                        type: value, height: '300px', width: '520px'
                    });
                } else if (value == 'goobar') {
                    $('#chart').addClass("loading-custom");

                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawbar, 'packages': ['corechart'] }) }, 20);

                } else if (value == 'gooarea' || value == 'bargroup' || value == 'linegoo' || value == 'custom' || value == 'barhor') {
                    $('#chart').addClass("loading-custom");
                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawVisualization, 'packages': ['corechart', 'motionchart'] }) }, 20);


                } else if (value == 'tablebar' || value == 'piegoo') {
                    $('#chart').addClass("loading-custom");
                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawtable, 'packages': ['corechart', 'imageareachart'] }) }, 20);


                } else {
                    $('#example').visualize({
                        rowFilter: ':not()',
                        colFilter: ':not()',
                        type: value, height: '300px', width: '420px'
                    });
                }

                $("html, body").animate({ scrollTop: $(document).height() }, "fast");
            }
        });

        $("#selectgroup").on('change', function () {
            debugger;
            var value2 = $("#selectgroup").val();
            var value = $("#selectgraph").val();
            //   jQuery('#selectformat').val('none');


            if (value != 0) {

                $('.visualize').remove();
                $('#chart').html("");
                if (value == 'area' || value == 'line') {
                    $('#example2').visualize({
                        rowFilter: ':not()',
                        colFilter: ':not()',
                        type: value, height: '300px', width: '520px'
                    });
                } else if (value == 'goobar') {
                    $('#chart').addClass("loading-custom");

                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawbar, 'packages': ['corechart'] }) }, 20);

                } else if (value == 'gooarea' || value == 'bargroup' || value == 'linegoo' || value == 'custom' || value == 'barhor') {
                    $('#chart').addClass("loading-custom");
                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawVisualization, 'packages': ['corechart', 'motionchart'] }) }, 20);


                } else if (value == 'tablebar' || value == 'piegoo') {
                    $('#chart').addClass("loading-custom");
                    setTimeout(function () { google.load('visualization', '1', { 'callback': drawtable, 'packages': ['corechart', 'imageareachart'] }) }, 20);


                } else {
                    $('#example').visualize({
                        rowFilter: ':not()',
                        colFilter: ':not()',
                        type: value, height: '300px', width: '420px'
                    });
                }

                $("html, body").animate({ scrollTop: $(document).height() }, "fast");
            }
        });

        $("#graph").on('click', function () {

            //   setTimeout(function () { google.load('visualization', '1', { 'callback': drawVisualization, 'packages': ['corechart'] }) }, 2000);
            // google.load("visualization", "1", { packages: ["corechart"] });

            //   google.setOnLoadCallback(drawVisualization);
        });

        function tableToJson(table) {
            var data = [];

            // first row needs to be headers
            var headers = [];
            for (var i = 0; i < table.rows[0].cells.length; i++) {
                headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
            }


            // go through cells
            for (var i = 0; i < table.rows.length; i++) {

                var tableRow = table.rows[i];
                var rowData = {};

                for (var j = 0; j < tableRow.cells.length; j++) {

                    rowData[headers[j]] = tableRow.cells[j].innerHTML;

                }

                data.push(rowData);
            }

            return data;
        }

        $("#exporttoexcelx").on('click', function () {

            exportReports("goexcel");
        });
        $("#exporttopdfx").on('click', function () {

            exportReports("gopdf");
        });
        function exportReports(type) {

            var data = "";
            var result = "";
            var namefilter = "";
            // var value = $("#selectformat").val();
            var value = type;
            debugger

            @(new HtmlString("namefilter='" + nameprofiles + "';"))
                result = datafull;
                 try{
                jQuery.each(datafull2, function () {
                    result.push(this)

                })
                }catch(ex){ }
                var jsonresult = "[]";
                try{
                    jsonresult=JSON.stringify(result);
                } catch (ex) {

                }
                var arraycols = new Array();
                var numtotal = "";
                var arraydates = {};
                var namereport = "Activos";
                var typefilter = "Ubicaciones(es)";


                @foreach (var x in cols)
            {
                   @(new HtmlString("var datacols = {};"))
                  @(new HtmlString("datacols.key='"+x.Key+"';"))
                  @(new HtmlString("datacols.value='"+x.Value+"';"))
                  @(new HtmlString("arraycols.push(datacols);"))
             }
                var jsoncols = JSON.stringify(arraycols);
                @(new HtmlString("numtotal="+numusers.ToString()+";"))


                @(new HtmlString("arraydates.start='"+datesarray[0]+"';"))
                @(new HtmlString("arraydates.end='"+datesarray[1]+"';"))
                var jsondates = JSON.stringify(arraydates);

                //   window.open('/Uploads/Reports/' + data, '_blank');

                //  var table = $("#customers").html();
                //  demoFromHTML();
                // demotablepdf();
                /* doc.text(20, 20, 'Hello world!');
                 doc.text(20, 30, 'This is client-side Javascript, pumping out a PDF.');
                 doc.addPage();
                 doc.text(20, 20, 'Do you like that?');
                 doc.save('sample-file.pdf');*/


                var filename = "";
                var heads = new Array();
                svg = $('svg').parent().html();
                canvg('canvas1', svg);
                canvas = document.getElementById("canvas");
                // img_PNG = "<img src='#{canvas.toDataURL()}' />";
                canvas1 = document.getElementById("canvas1");
                var imgjpeg = canvas1.toDataURL("image/jpeg");

                //  $('#pngimg').html(img_PNG);

                if (value == "gopdf") {
                    jQuery.ajax({

                        url: "/Reports/Reports/exppdf",
                        data: { profile: dataprofilex, startdate: datastartdate, enddate: dataenddate, cols: datacols1, customfields: datacustomfields, status: datastatus, namefilter: namefilter, numtot: numtotal, datacols: jsoncols, datesarray: jsondates, namereports: namereport, typefilters: typefilter, graph: imgjpeg,rotate:1 },

                        //data: { result: jsonresult, namefilter: namefilter, numtot: numtotal, datacols: jsoncols, datesarray: jsondates, namereports: namereport, typefilters: typefilter, graph: imgjpeg,rotate:1 },
                        beforeSend: _loading(),
                        type: "POST",
                        success: function (data) {
                            window.open('/Uploads/Reports/' + data, '_blank');

                            _loading();

                        },
                        error: function (errorThrown) {
                            alert("Ocurrio un Error, Intente Mas tarde");
                            _loading();
                        }


                    });
                }
                if (value == "goexcel") {

                    jQuery.ajax({

                        url: "/Reports/Reports/ExportDataSetnew",
                        data: { profile: dataprofilex, startdate: datastartdate, enddate: dataenddate, cols: datacols1, customfields: datacustomfields,status:datastatus, namefilter: namefilter, numtot: numtotal, datacols: jsoncols, datesarray: jsondates, namereports: namereport, typefilters: typefilter, graph: imgjpeg },
                        beforeSend: _loading(),
                        type: "POST",
                        success: function (data) {
                            window.location.href = '/Uploads/Reports/' + data;

                            _loading();

                        },
                        error: function (errorThrown) {
                            alert("Ocurrio un Error, Intente Mas tarde");
                            _loading();
                        }


                    });

                }
               /* if (value == "goexcel") {
                    jQuery.ajax({

                        url: "/Reports/Reports/ExportDataSet",
                        data: { result: jsonresult, namefilter: namefilter, numtot: numtotal, datacols: jsoncols, datesarray: jsondates, namereports: namereport, typefilters: typefilter, graph: imgjpeg },
                        beforeSend: _loading(),
                        type: "POST",
                        success: function (data) {
                            window.location.href = '/Uploads/Reports/' + data;

                            _loading();

                        },
                        error: function (errorThrown) {
                            alert("Ocurrio un Error, Intente Mas tarde");
                            _loading();
                        }


                    });

                }*/


            }


            $('#chart').addClass("loading-custom");

            setTimeout(function () { google.load('visualization', '1', { 'callback': drawtable, 'packages': ['corechart', 'imageareachart'] }) }, 10);


        });

        function headers1() {
            setTimeout(function () {
                var table = jQuery("#mailtablex").dataTable();

                table.fnAdjustColumnSizing();
                if (table.find("thead tr").length>1)
                    table.find("thead tr").last().remove();
                if (jQuery(".dataTables_scrollHead thead tr").length > 1)
                    jQuery(".dataTables_scrollHead thead tr").last().remove();
                table.columnFilter({
                    sPlaceHolder: "head:after",
                    aoColumns: [
              @for(int i=1;i<numcols;i++)
                {
               @(new HtmlString(" { type: 'text' }, "))

                }
            { type: "text" }
                ]
            });
            jQuery('#mailtablex input').css("width", "100%")
            var head = jQuery("#mailtablex").find("thead tr").last();
            jQuery(".dataTables_scrollHead tr").after(head)
            jQuery(".dataTables_scrollHead input").css("width", "100%")
            jQuery(".dataTables_scrollHead tr:last th").css("padding", "10px")
            jQuery(".dataTables_scrollHeadInner table thead tr:last() th").on("keyup.filter", function () {
                debugger
                jQuery(".dataTables_scrollHeadInner table thead tr:last() th:eq(" + jQuery(this).index() + ")").trigger("focus")
                jQuery(".dataTables_scrollHeadInner table thead tr:last() th:eq(" + jQuery(this).index() + ") input").trigger("focus")
            })
        }, 100);
    }
    jQuery("#paginationselect").select2({

        allowClear: true
    });
    jQuery("#indexselect").select2({

        allowClear: true
    });
    jQuery("#paginationselect").unbind("change.page");
    jQuery("#paginationselect").bind("change.page", function () {


        var take = jQuery("#paginationselect").val()

        jQuery.ajax({
            url: "/Reports/Reports/getRange",
            type: "POST",
            data: { take: take,total: "@totalfull"},
            success: function (data) {
                jQuery("#indexselect").html("")
                jQuery("#indexselect").html(data)
                _loading()
                jQuery("#indexselect").trigger("change");

            },
            error: function () {
                alert("ocurrio un error");
                _loading()
            }
        });




    });
    jQuery("#indexselect").unbind("change.page");
    jQuery("#indexselect").bind("change.page", function () {
        var skip = jQuery("#indexselect").val();
        var take = jQuery("#paginationselect").val();
        var checkboxValuesfilter=new Array();
        var checkboxValues=new Array();
        var locationsObj = jQuery("#locationsFilter select").select2("data");
        for (i = 0; i < locationsObj.length; i++) {
            var objdata = new Object();
            objdata.data = locationsObj[i].id;
            objdata.value = locationsObj[i].text;
            checkboxValuesfilter.push(objdata);

        }
        var fieldsObj = jQuery("#fieldFilter select").select2("data");

        for (i = 0; i < fieldsObj.length; i++) {
            var objdata = new Object();
            objdata.data = fieldsObj[i].id;
            objdata.value = fieldsObj[i].text;
            checkboxValues.push(objdata);

        }
        var jsondatafilter = JSON.stringify(checkboxValuesfilter);
        var jsondata = JSON.stringify(checkboxValues);
        //  _loading();
        jQuery.ajax({
            url: "/Reports/Reports/getObjects",
            type: "POST",
            data: { take: take, skip: skip,profile:jsondatafilter, startdate:"@startdate", enddate:"@enddate", col:jsondata, customfields:"", status:"@status" },
            success: function (data) {
                jQuery("#here").next().remove()
                jQuery("#here").next().html(data);
                // jQuery("#beneficiarys").html(data);

                //    _loading();

            },
            error: function () {
                alert("ocurrio un error");
                //  _loading()
            }
        });

    });

    @(new HtmlString("datafull=\""+datajson+"\";"))
    @(new HtmlString("datafull2=\""+datajson2+"\";"))
    @(new HtmlString("dataprofilex='" + dataprofilex + "';"))
    @(new HtmlString("datastartdate=\"" + datastartdate + "\";"))
    @(new HtmlString("dataenddate=\"" + dataenddate + "\";"))
    @(new HtmlString("datacols1='" + datacols1 + "';"))
    @(new HtmlString("datacustomfields='" + datacustomfields + "';"))
    @(new HtmlString("datastatus=\"" + datastatus + "\";"))

</script>

@*var string = "This is my compression test.";
alert("Size of sample is: " + string.length);
var compressed = LZString.compress(string);
alert("Size of compressed sample is: " + compressed.length);
string = LZString.decompress(compressed);
alert("Sample is: " + string);*@












